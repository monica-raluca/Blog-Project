{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,c,C,I,I,E,I,K,E,W,C,E,a,C,C,GCAO,IAAM,EAAc,CACzB,KAAM,cAEN,WAAY,WACV,MAAO,CACL,WAAY,KACZ,MAAO,EAAE,AACX,CACF,EACA,MAAO,SAAU,CAAM,CAAE,CAAK,EAC5B,GAAK,GAcL,OAX2B,IAAvB,EAAM,KAAK,CAAC,MAAM,EAEf,CAAA,AAAiB,KAAjB,EAAO,IAAI,IAAe,AAAiB,KAAjB,EAAO,IAAI,EAAM,IAC9C,EAAM,UAAU,CAAG,EAAO,IAAI,GAC9B,EAAO,IAAI,GACX,EAAM,KAAK,CAAC,OAAO,CAAC,WAMhB,EAAM,KAAK,CAAC,EAAE,EACtB,IAAK,SACH,KAAO,AAAmB,WAAnB,EAAM,KAAK,CAAC,EAAE,EAAiB,CAAC,EAAO,GAAG,IAC3C,EAAO,IAAI,KAAO,EAAM,UAAU,EACpC,EAAO,IAAI,GACX,EAAM,KAAK,CAAC,KAAK,IACR,AAAkB,OAAlB,EAAO,IAAI,IACpB,EAAO,IAAI,GACX,EAAO,IAAI,IAEX,EAAO,KAAK,CAAC,gBAGjB,MAAO,QAET,KAAK,iBACH,KAAO,AAAmB,mBAAnB,EAAM,KAAK,CAAC,EAAE,EAAyB,CAAC,EAAO,GAAG,IACnD,AAAE,EAAO,KAAK,CAAC,cAAgB,EAAO,KAAK,CAAC,SAC9C,EAAM,KAAK,CAAC,KAAK,GAErB,MAAO,UACT,CAEA,IAAI,EAAO,EAAO,IAAI,GAGtB,OAAQ,GACR,IAAK,IAGH,OAFA,EAAO,IAAI,GACX,EAAM,KAAK,CAAC,OAAO,CAAC,kBACb,SACT,KAAK,IAEH,OADA,EAAO,IAAI,GACJ,UACT,KAAK,KACH,GAAI,EAAO,KAAK,CAAC,YAAa,MAAO,iBAGnC,OADA,EAAO,IAAI,GACJ,MAEX,KAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IAEH,OADA,EAAO,IAAI,GACJ,MACT,KAAK,IAEH,OADA,EAAO,IAAI,GACJ,SACT,CAEA,GAAI,EAAO,KAAK,CAAC,cACf,AAAI,EAAO,KAAK,CAAC,QAAgB,QAC1B,SACF,GAAI,EAAO,KAAK,CAAC,wBACtB,AAAI,EAAO,KAAK,CAAC,YAAa,CAAA,GAAe,UACtC,WACF,GAAI,AAAgD,IAAhD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAI,CAAC,OAAO,CAAC,GAEhD,OADA,EAAO,IAAI,GACJ,SACE,CAAC,EAAO,QAAQ,IACzB,EAAO,IAAI,GAEb,OAAO,KACT,CACF,C","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/spreadsheet.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"1pMqo\", function(module, exports) {\n\n$parcel$export(module.exports, \"spreadsheet\", () => $107db067329d1a19$export$df1f26e5ce4721bf);\nconst $107db067329d1a19$export$df1f26e5ce4721bf = {\n    name: \"spreadsheet\",\n    startState: function() {\n        return {\n            stringType: null,\n            stack: []\n        };\n    },\n    token: function(stream, state) {\n        if (!stream) return;\n        //check for state changes\n        if (state.stack.length === 0) //strings\n        {\n            if (stream.peek() == '\"' || stream.peek() == \"'\") {\n                state.stringType = stream.peek();\n                stream.next(); // Skip quote\n                state.stack.unshift(\"string\");\n            }\n        }\n        //return state\n        //stack has\n        switch(state.stack[0]){\n            case \"string\":\n                while(state.stack[0] === \"string\" && !stream.eol()){\n                    if (stream.peek() === state.stringType) {\n                        stream.next(); // Skip quote\n                        state.stack.shift(); // Clear flag\n                    } else if (stream.peek() === \"\\\\\") {\n                        stream.next();\n                        stream.next();\n                    } else stream.match(/^.[^\\\\\\\"\\']*/);\n                }\n                return \"string\";\n            case \"characterClass\":\n                while(state.stack[0] === \"characterClass\" && !stream.eol())if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) state.stack.shift();\n                return \"operator\";\n        }\n        var peek = stream.peek();\n        //no stack\n        switch(peek){\n            case \"[\":\n                stream.next();\n                state.stack.unshift(\"characterClass\");\n                return \"bracket\";\n            case \":\":\n                stream.next();\n                return \"operator\";\n            case \"\\\\\":\n                if (stream.match(/\\\\[a-z]+/)) return \"string.special\";\n                else {\n                    stream.next();\n                    return \"atom\";\n                }\n            case \".\":\n            case \",\":\n            case \";\":\n            case \"*\":\n            case \"-\":\n            case \"+\":\n            case \"^\":\n            case \"<\":\n            case \"/\":\n            case \"=\":\n                stream.next();\n                return \"atom\";\n            case \"$\":\n                stream.next();\n                return \"builtin\";\n        }\n        if (stream.match(/\\d+/)) {\n            if (stream.match(/^\\w+/)) return \"error\";\n            return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n            if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n            return \"variable\";\n        } else if ([\n            \"[\",\n            \"]\",\n            \"(\",\n            \")\",\n            \"{\",\n            \"}\"\n        ].indexOf(peek) != -1) {\n            stream.next();\n            return \"bracket\";\n        } else if (!stream.eatSpace()) stream.next();\n        return null;\n    }\n};\n\n});\n\n\n//# sourceMappingURL=spreadsheet.25c85cec.js.map\n","export const spreadsheet = {\n  name: \"spreadsheet\",\n\n  startState: function () {\n    return {\n      stringType: null,\n      stack: []\n    };\n  },\n  token: function (stream, state) {\n    if (!stream) return;\n\n    //check for state changes\n    if (state.stack.length === 0) {\n      //strings\n      if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.stack.unshift(\"string\");\n      }\n    }\n\n    //return state\n    //stack has\n    switch (state.stack[0]) {\n    case \"string\":\n      while (state.stack[0] === \"string\" && !stream.eol()) {\n        if (stream.peek() === state.stringType) {\n          stream.next(); // Skip quote\n          state.stack.shift(); // Clear flag\n        } else if (stream.peek() === \"\\\\\") {\n          stream.next();\n          stream.next();\n        } else {\n          stream.match(/^.[^\\\\\\\"\\']*/);\n        }\n      }\n      return \"string\";\n\n    case \"characterClass\":\n      while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n        if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n          state.stack.shift();\n      }\n      return \"operator\";\n    }\n\n    var peek = stream.peek();\n\n    //no stack\n    switch (peek) {\n    case \"[\":\n      stream.next();\n      state.stack.unshift(\"characterClass\");\n      return \"bracket\";\n    case \":\":\n      stream.next();\n      return \"operator\";\n    case \"\\\\\":\n      if (stream.match(/\\\\[a-z]+/)) return \"string.special\";\n      else {\n        stream.next();\n        return \"atom\";\n      }\n    case \".\":\n    case \",\":\n    case \";\":\n    case \"*\":\n    case \"-\":\n    case \"+\":\n    case \"^\":\n    case \"<\":\n    case \"/\":\n    case \"=\":\n      stream.next();\n      return \"atom\";\n    case \"$\":\n      stream.next();\n      return \"builtin\";\n    }\n\n    if (stream.match(/\\d+/)) {\n      if (stream.match(/^\\w+/)) return \"error\";\n      return \"number\";\n    } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n      if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n      return \"variable\";\n    } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n      stream.next();\n      return \"bracket\";\n    } else if (!stream.eatSpace()) {\n      stream.next();\n    }\n    return null;\n  }\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$107db067329d1a19$export$df1f26e5ce4721bf","set","s","enumerable","configurable","name","startState","stringType","stack","token","stream","state","length","peek","next","unshift","eol","shift","match","indexOf","eatSpace"],"version":3,"file":"spreadsheet.25c85cec.js.map"}