{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,a,C,I,I,E,I,K,E,W,C,E,a,C,C,GCAO,IAAM,EAAa,CACxB,KAAM,aAEN,MAAO,SAAS,CAAM,CAAE,CAAK,EAC3B,IAAI,EAAM,EAAO,GAAG,IAAM,EAAM,YAAY,CACxC,EAAM,EAAO,GAAG,GAkBpB,GAhBA,EAAM,YAAY,CAAG,CAAA,EAEjB,IACE,EAAM,aAAa,EACrB,EAAM,WAAW,CAAG,CAAA,EACpB,EAAM,aAAa,CAAG,CAAA,GAEtB,EAAM,QAAQ,CAAG,OAIjB,GAAO,CAAE,EAAM,aAAa,GAC9B,EAAM,WAAW,CAAG,CAAA,EACpB,EAAM,QAAQ,CAAG,OAGf,EACF,KAAM,EAAO,QAAQ,KAGvB,IAAI,EAAK,EAAO,IAAI,UAEpB,AAAI,GAAQ,CAAA,AAAO,MAAP,GAAc,AAAO,MAAP,GAAc,AAAO,MAAP,CAAO,GAC7C,EAAM,QAAQ,CAAG,UACjB,EAAO,SAAS,GACT,WACE,GAAO,AAAO,MAAP,GAChB,EAAM,YAAY,CAAG,CAAA,EACrB,EAAO,MAAM,CAAC,KAAM,EAAO,GAAG,CAAC,KACxB,UACE,AAAO,MAAP,GAAc,AAAO,MAAP,GACvB,EAAM,QAAQ,CAAG,QACV,OACE,AAAO,OAAP,GAAe,AAAmB,UAAnB,EAAM,QAAQ,EAClC,EAAO,GAAG,IAEZ,CAAA,EAAM,aAAa,CAAG,CAAA,CAAtB,EAIG,EAAM,QAAQ,CACvB,EAEA,WAAY,WACV,MAAO,CACL,SAAW,MACX,cAAgB,CAAA,EAChB,YAAc,CAAA,EACd,aAAe,CAAA,CACjB,CACF,CAEF,C","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/properties.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"fmpsP\", function(module, exports) {\n\n$parcel$export(module.exports, \"properties\", () => $b2eca9b976912e79$export$3cb21709c4058847);\nconst $b2eca9b976912e79$export$3cb21709c4058847 = {\n    name: \"properties\",\n    token: function(stream, state) {\n        var sol = stream.sol() || state.afterSection;\n        var eol = stream.eol();\n        state.afterSection = false;\n        if (sol) {\n            if (state.nextMultiline) {\n                state.inMultiline = true;\n                state.nextMultiline = false;\n            } else state.position = \"def\";\n        }\n        if (eol && !state.nextMultiline) {\n            state.inMultiline = false;\n            state.position = \"def\";\n        }\n        if (sol) {\n            while(stream.eatSpace());\n        }\n        var ch = stream.next();\n        if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n            state.position = \"comment\";\n            stream.skipToEnd();\n            return \"comment\";\n        } else if (sol && ch === \"[\") {\n            state.afterSection = true;\n            stream.skipTo(\"]\");\n            stream.eat(\"]\");\n            return \"header\";\n        } else if (ch === \"=\" || ch === \":\") {\n            state.position = \"quote\";\n            return null;\n        } else if (ch === \"\\\\\" && state.position === \"quote\") {\n            if (stream.eol()) // Multiline value\n            state.nextMultiline = true;\n        }\n        return state.position;\n    },\n    startState: function() {\n        return {\n            position: \"def\",\n            nextMultiline: false,\n            inMultiline: false,\n            afterSection: false // Did we just open a section\n        };\n    }\n};\n\n});\n\n\n//# sourceMappingURL=properties.67ab1c9b.js.map\n","export const properties = {\n  name: \"properties\",\n\n  token: function(stream, state) {\n    var sol = stream.sol() || state.afterSection;\n    var eol = stream.eol();\n\n    state.afterSection = false;\n\n    if (sol) {\n      if (state.nextMultiline) {\n        state.inMultiline = true;\n        state.nextMultiline = false;\n      } else {\n        state.position = \"def\";\n      }\n    }\n\n    if (eol && ! state.nextMultiline) {\n      state.inMultiline = false;\n      state.position = \"def\";\n    }\n\n    if (sol) {\n      while(stream.eatSpace()) {}\n    }\n\n    var ch = stream.next();\n\n    if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n      state.position = \"comment\";\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (sol && ch === \"[\") {\n      state.afterSection = true;\n      stream.skipTo(\"]\"); stream.eat(\"]\");\n      return \"header\";\n    } else if (ch === \"=\" || ch === \":\") {\n      state.position = \"quote\";\n      return null;\n    } else if (ch === \"\\\\\" && state.position === \"quote\") {\n      if (stream.eol()) {  // end of line?\n        // Multiline value\n        state.nextMultiline = true;\n      }\n    }\n\n    return state.position;\n  },\n\n  startState: function() {\n    return {\n      position : \"def\",       // Current position, \"def\", \"quote\" or \"comment\"\n      nextMultiline : false,  // Is the next line multiline value\n      inMultiline : false,    // Is the current line a multiline value\n      afterSection : false    // Did we just open a section\n    };\n  }\n\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$b2eca9b976912e79$export$3cb21709c4058847","set","s","enumerable","configurable","name","token","stream","state","sol","afterSection","eol","nextMultiline","inMultiline","position","eatSpace","ch","next","skipToEnd","skipTo","eat","startState"],"version":3,"file":"properties.67ab1c9b.js.map"}