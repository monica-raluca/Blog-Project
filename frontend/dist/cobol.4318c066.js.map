{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/cobol.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"bTzQT\", function(module, exports) {\n\n$parcel$export(module.exports, \"cobol\", () => $8a90a444c86d9e68$export$2683b91abdd31f7a);\nvar $8a90a444c86d9e68$var$BUILTIN = \"builtin\", $8a90a444c86d9e68$var$COMMENT = \"comment\", $8a90a444c86d9e68$var$STRING = \"string\", $8a90a444c86d9e68$var$ATOM = \"atom\", $8a90a444c86d9e68$var$NUMBER = \"number\", $8a90a444c86d9e68$var$KEYWORD = \"keyword\", $8a90a444c86d9e68$var$MODTAG = \"header\", $8a90a444c86d9e68$var$COBOLLINENUM = \"def\", $8a90a444c86d9e68$var$PERIOD = \"link\";\nfunction $8a90a444c86d9e68$var$makeKeywords(str) {\n    var obj = {}, words = str.split(\" \");\n    for(var i = 0; i < words.length; ++i)obj[words[i]] = true;\n    return obj;\n}\nvar $8a90a444c86d9e68$var$atoms = $8a90a444c86d9e68$var$makeKeywords(\"TRUE FALSE ZEROES ZEROS ZERO SPACES SPACE LOW-VALUE LOW-VALUES \");\nvar $8a90a444c86d9e68$var$keywords = $8a90a444c86d9e68$var$makeKeywords(\"ACCEPT ACCESS ACQUIRE ADD ADDRESS ADVANCING AFTER ALIAS ALL ALPHABET ALPHABETIC ALPHABETIC-LOWER ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED ALSO ALTER ALTERNATE AND ANY ARE AREA AREAS ARITHMETIC ASCENDING ASSIGN AT ATTRIBUTE AUTHOR AUTO AUTO-SKIP AUTOMATIC B-AND B-EXOR B-LESS B-NOT B-OR BACKGROUND-COLOR BACKGROUND-COLOUR BEEP BEFORE BELL BINARY BIT BITS BLANK BLINK BLOCK BOOLEAN BOTTOM BY CALL CANCEL CD CF CH CHARACTER CHARACTERS CLASS CLOCK-UNITS CLOSE COBOL CODE CODE-SET COL COLLATING COLUMN COMMA COMMIT COMMITMENT COMMON COMMUNICATION COMP COMP-0 COMP-1 COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 COMP-7 COMP-8 COMP-9 COMPUTATIONAL COMPUTATIONAL-0 COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5 COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE CONFIGURATION CONNECT CONSOLE CONTAINED CONTAINS CONTENT CONTINUE CONTROL CONTROL-AREA CONTROLS CONVERTING COPY CORR CORRESPONDING COUNT CRT CRT-UNDER CURRENCY CURRENT CURSOR DATA DATE DATE-COMPILED DATE-WRITTEN DAY DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY DB-DATA-NAME DB-EXCEPTION DB-FORMAT-NAME DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS DBCS-EDITED DE DEBUG-CONTENTS DEBUG-ITEM DEBUG-LINE DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING DECIMAL-POINT DECLARATIVES DEFAULT DELETE DELIMITED DELIMITER DEPENDING DESCENDING DESCRIBED DESTINATION DETAIL DISABLE DISCONNECT DISPLAY DISPLAY-1 DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE DIVISION DOWN DROP DUPLICATE DUPLICATES DYNAMIC EBCDIC EGI EJECT ELSE EMI EMPTY EMPTY-CHECK ENABLE END END. END-ACCEPT END-ACCEPT. END-ADD END-CALL END-COMPUTE END-DELETE END-DISPLAY END-DIVIDE END-EVALUATE END-IF END-INVOKE END-MULTIPLY END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN END-REWRITE END-SEARCH END-START END-STRING END-SUBTRACT END-UNSTRING END-WRITE END-XML ENTER ENTRY ENVIRONMENT EOP EQUAL EQUALS ERASE ERROR ESI EVALUATE EVERY EXCEEDS EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL EXTERNALLY-DESCRIBED-KEY FD FETCH FILE FILE-CONTROL FILE-STREAM FILES FILLER FINAL FIND FINISH FIRST FOOTING FOR FOREGROUND-COLOR FOREGROUND-COLOUR FORMAT FREE FROM FULL FUNCTION GENERATE GET GIVING GLOBAL GO GOBACK GREATER GROUP HEADING HIGH-VALUE HIGH-VALUES HIGHLIGHT I-O I-O-CONTROL ID IDENTIFICATION IF IN INDEX INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 INDEX-6 INDEX-7 INDEX-8 INDEX-9 INDEXED INDIC INDICATE INDICATOR INDICATORS INITIAL INITIALIZE INITIATE INPUT INPUT-OUTPUT INSPECT INSTALLATION INTO INVALID INVOKE IS JUST JUSTIFIED KANJI KEEP KEY LABEL LAST LD LEADING LEFT LEFT-JUSTIFY LENGTH LENGTH-CHECK LESS LIBRARY LIKE LIMIT LIMITS LINAGE LINAGE-COUNTER LINE LINE-COUNTER LINES LINKAGE LOCAL-STORAGE LOCALE LOCALLY LOCK MEMBER MEMORY MERGE MESSAGE METACLASS MODE MODIFIED MODIFY MODULES MOVE MULTIPLE MULTIPLY NATIONAL NATIVE NEGATIVE NEXT NO NO-ECHO NONE NOT NULL NULL-KEY-MAP NULL-MAP NULLS NUMBER NUMERIC NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS OF OFF OMITTED ON ONLY OPEN OPTIONAL OR ORDER ORGANIZATION OTHER OUTPUT OVERFLOW OWNER PACKED-DECIMAL PADDING PAGE PAGE-COUNTER PARSE PERFORM PF PH PIC PICTURE PLUS POINTER POSITION POSITIVE PREFIX PRESENT PRINTING PRIOR PROCEDURE PROCEDURE-POINTER PROCEDURES PROCEED PROCESS PROCESSING PROGRAM PROGRAM-ID PROMPT PROTECTED PURGE QUEUE QUOTE QUOTES RANDOM RD READ READY REALM RECEIVE RECONNECT RECORD RECORD-NAME RECORDS RECURSIVE REDEFINES REEL REFERENCE REFERENCE-MONITOR REFERENCES RELATION RELATIVE RELEASE REMAINDER REMOVAL RENAMES REPEATED REPLACE REPLACING REPORT REPORTING REPORTS REPOSITORY REQUIRED RERUN RESERVE RESET RETAINING RETRIEVAL RETURN RETURN-CODE RETURNING REVERSE-VIDEO REVERSED REWIND REWRITE RF RH RIGHT RIGHT-JUSTIFY ROLLBACK ROLLING ROUNDED RUN SAME SCREEN SD SEARCH SECTION SECURE SECURITY SEGMENT SEGMENT-LIMIT SELECT SEND SENTENCE SEPARATE SEQUENCE SEQUENTIAL SET SHARED SIGN SIZE SKIP1 SKIP2 SKIP3 SORT SORT-MERGE SORT-RETURN SOURCE SOURCE-COMPUTER SPACE-FILL SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 START STARTING STATUS STOP STORE STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA SUBFILE SUBSTITUTE SUBTRACT SUM SUPPRESS SYMBOLIC SYNC SYNCHRONIZED SYSIN SYSOUT TABLE TALLYING TAPE TENANT TERMINAL TERMINATE TEST TEXT THAN THEN THROUGH THRU TIME TIMES TITLE TO TOP TRAILING TRAILING-SIGN TRANSACTION TYPE TYPEDEF UNDERLINE UNEQUAL UNIT UNSTRING UNTIL UP UPDATE UPON USAGE USAGE-MODE USE USING VALID VALIDATE VALUE VALUES VARYING VLR WAIT WHEN WHEN-COMPILED WITH WITHIN WORDS WORKING-STORAGE WRITE XML XML-CODE XML-EVENT XML-NTEXT XML-TEXT ZERO ZERO-FILL \");\nvar $8a90a444c86d9e68$var$builtins = $8a90a444c86d9e68$var$makeKeywords(\"- * ** / + < <= = > >= \");\nvar $8a90a444c86d9e68$var$tests = {\n    digit: /\\d/,\n    digit_or_colon: /[\\d:]/,\n    hex: /[0-9a-f]/i,\n    sign: /[+-]/,\n    exponent: /e/i,\n    keyword_char: /[^\\s\\(\\[\\;\\)\\]]/,\n    symbol: /[\\w*+\\-]/\n};\nfunction $8a90a444c86d9e68$var$isNumber(ch, stream) {\n    // hex\n    if (ch === '0' && stream.eat(/x/i)) {\n        stream.eatWhile($8a90a444c86d9e68$var$tests.hex);\n        return true;\n    }\n    // leading sign\n    if ((ch == '+' || ch == '-') && $8a90a444c86d9e68$var$tests.digit.test(stream.peek())) {\n        stream.eat($8a90a444c86d9e68$var$tests.sign);\n        ch = stream.next();\n    }\n    if ($8a90a444c86d9e68$var$tests.digit.test(ch)) {\n        stream.eat(ch);\n        stream.eatWhile($8a90a444c86d9e68$var$tests.digit);\n        if ('.' == stream.peek()) {\n            stream.eat('.');\n            stream.eatWhile($8a90a444c86d9e68$var$tests.digit);\n        }\n        if (stream.eat($8a90a444c86d9e68$var$tests.exponent)) {\n            stream.eat($8a90a444c86d9e68$var$tests.sign);\n            stream.eatWhile($8a90a444c86d9e68$var$tests.digit);\n        }\n        return true;\n    }\n    return false;\n}\nconst $8a90a444c86d9e68$export$2683b91abdd31f7a = {\n    name: \"cobol\",\n    startState: function() {\n        return {\n            indentStack: null,\n            indentation: 0,\n            mode: false\n        };\n    },\n    token: function(stream, state) {\n        if (state.indentStack == null && stream.sol()) // update indentation, but only if indentStack is empty\n        state.indentation = 6; //stream.indentation();\n        // skip spaces\n        if (stream.eatSpace()) return null;\n        var returnType = null;\n        switch(state.mode){\n            case \"string\":\n                var next = false;\n                while((next = stream.next()) != null)if ((next == \"\\\"\" || next == \"\\'\") && !stream.match(/['\"]/, false)) {\n                    state.mode = false;\n                    break;\n                }\n                returnType = $8a90a444c86d9e68$var$STRING; // continue on in string mode\n                break;\n            default:\n                var ch = stream.next();\n                var col = stream.column();\n                if (col >= 0 && col <= 5) returnType = $8a90a444c86d9e68$var$COBOLLINENUM;\n                else if (col >= 72 && col <= 79) {\n                    stream.skipToEnd();\n                    returnType = $8a90a444c86d9e68$var$MODTAG;\n                } else if (ch == \"*\" && col == 6) {\n                    stream.skipToEnd(); // rest of the line is a comment\n                    returnType = $8a90a444c86d9e68$var$COMMENT;\n                } else if (ch == \"\\\"\" || ch == \"\\'\") {\n                    state.mode = \"string\";\n                    returnType = $8a90a444c86d9e68$var$STRING;\n                } else if (ch == \"'\" && !$8a90a444c86d9e68$var$tests.digit_or_colon.test(stream.peek())) returnType = $8a90a444c86d9e68$var$ATOM;\n                else if (ch == \".\") returnType = $8a90a444c86d9e68$var$PERIOD;\n                else if ($8a90a444c86d9e68$var$isNumber(ch, stream)) returnType = $8a90a444c86d9e68$var$NUMBER;\n                else {\n                    if (stream.current().match($8a90a444c86d9e68$var$tests.symbol)) while(col < 71){\n                        if (stream.eat($8a90a444c86d9e68$var$tests.symbol) === undefined) break;\n                        else col++;\n                    }\n                    if ($8a90a444c86d9e68$var$keywords && $8a90a444c86d9e68$var$keywords.propertyIsEnumerable(stream.current().toUpperCase())) returnType = $8a90a444c86d9e68$var$KEYWORD;\n                    else if ($8a90a444c86d9e68$var$builtins && $8a90a444c86d9e68$var$builtins.propertyIsEnumerable(stream.current().toUpperCase())) returnType = $8a90a444c86d9e68$var$BUILTIN;\n                    else if ($8a90a444c86d9e68$var$atoms && $8a90a444c86d9e68$var$atoms.propertyIsEnumerable(stream.current().toUpperCase())) returnType = $8a90a444c86d9e68$var$ATOM;\n                    else returnType = null;\n                }\n        }\n        return returnType;\n    },\n    indent: function(state) {\n        if (state.indentStack == null) return state.indentation;\n        return state.indentStack.indent;\n    }\n};\n\n});\n\n\n//# sourceMappingURL=cobol.4318c066.js.map\n","var BUILTIN = \"builtin\", COMMENT = \"comment\", STRING = \"string\",\n    ATOM = \"atom\", NUMBER = \"number\", KEYWORD = \"keyword\", MODTAG = \"header\",\n    COBOLLINENUM = \"def\", PERIOD = \"link\";\nfunction makeKeywords(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\nvar atoms = makeKeywords(\"TRUE FALSE ZEROES ZEROS ZERO SPACES SPACE LOW-VALUE LOW-VALUES \");\nvar keywords = makeKeywords(\n  \"ACCEPT ACCESS ACQUIRE ADD ADDRESS \" +\n    \"ADVANCING AFTER ALIAS ALL ALPHABET \" +\n    \"ALPHABETIC ALPHABETIC-LOWER ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED \" +\n    \"ALSO ALTER ALTERNATE AND ANY \" +\n    \"ARE AREA AREAS ARITHMETIC ASCENDING \" +\n    \"ASSIGN AT ATTRIBUTE AUTHOR AUTO \" +\n    \"AUTO-SKIP AUTOMATIC B-AND B-EXOR B-LESS \" +\n    \"B-NOT B-OR BACKGROUND-COLOR BACKGROUND-COLOUR BEEP \" +\n    \"BEFORE BELL BINARY BIT BITS \" +\n    \"BLANK BLINK BLOCK BOOLEAN BOTTOM \" +\n    \"BY CALL CANCEL CD CF \" +\n    \"CH CHARACTER CHARACTERS CLASS CLOCK-UNITS \" +\n    \"CLOSE COBOL CODE CODE-SET COL \" +\n    \"COLLATING COLUMN COMMA COMMIT COMMITMENT \" +\n    \"COMMON COMMUNICATION COMP COMP-0 COMP-1 \" +\n    \"COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 \" +\n    \"COMP-7 COMP-8 COMP-9 COMPUTATIONAL COMPUTATIONAL-0 \" +\n    \"COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5 \" +\n    \"COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE \" +\n    \"CONFIGURATION CONNECT CONSOLE CONTAINED CONTAINS \" +\n    \"CONTENT CONTINUE CONTROL CONTROL-AREA CONTROLS \" +\n    \"CONVERTING COPY CORR CORRESPONDING COUNT \" +\n    \"CRT CRT-UNDER CURRENCY CURRENT CURSOR \" +\n    \"DATA DATE DATE-COMPILED DATE-WRITTEN DAY \" +\n    \"DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY DB-DATA-NAME DB-EXCEPTION \" +\n    \"DB-FORMAT-NAME DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS \" +\n    \"DBCS-EDITED DE DEBUG-CONTENTS DEBUG-ITEM DEBUG-LINE \" +\n    \"DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING \" +\n    \"DECIMAL-POINT DECLARATIVES DEFAULT DELETE DELIMITED \" +\n    \"DELIMITER DEPENDING DESCENDING DESCRIBED DESTINATION \" +\n    \"DETAIL DISABLE DISCONNECT DISPLAY DISPLAY-1 \" +\n    \"DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 \" +\n    \"DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE DIVISION \" +\n    \"DOWN DROP DUPLICATE DUPLICATES DYNAMIC \" +\n    \"EBCDIC EGI EJECT ELSE EMI \" +\n    \"EMPTY EMPTY-CHECK ENABLE END END. END-ACCEPT END-ACCEPT. \" +\n    \"END-ADD END-CALL END-COMPUTE END-DELETE END-DISPLAY \" +\n    \"END-DIVIDE END-EVALUATE END-IF END-INVOKE END-MULTIPLY \" +\n    \"END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN \" +\n    \"END-REWRITE END-SEARCH END-START END-STRING END-SUBTRACT \" +\n    \"END-UNSTRING END-WRITE END-XML ENTER ENTRY \" +\n    \"ENVIRONMENT EOP EQUAL EQUALS ERASE \" +\n    \"ERROR ESI EVALUATE EVERY EXCEEDS \" +\n    \"EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL \" +\n    \"EXTERNALLY-DESCRIBED-KEY FD FETCH FILE FILE-CONTROL \" +\n    \"FILE-STREAM FILES FILLER FINAL FIND \" +\n    \"FINISH FIRST FOOTING FOR FOREGROUND-COLOR \" +\n    \"FOREGROUND-COLOUR FORMAT FREE FROM FULL \" +\n    \"FUNCTION GENERATE GET GIVING GLOBAL \" +\n    \"GO GOBACK GREATER GROUP HEADING \" +\n    \"HIGH-VALUE HIGH-VALUES HIGHLIGHT I-O I-O-CONTROL \" +\n    \"ID IDENTIFICATION IF IN INDEX \" +\n    \"INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 \" +\n    \"INDEX-6 INDEX-7 INDEX-8 INDEX-9 INDEXED \" +\n    \"INDIC INDICATE INDICATOR INDICATORS INITIAL \" +\n    \"INITIALIZE INITIATE INPUT INPUT-OUTPUT INSPECT \" +\n    \"INSTALLATION INTO INVALID INVOKE IS \" +\n    \"JUST JUSTIFIED KANJI KEEP KEY \" +\n    \"LABEL LAST LD LEADING LEFT \" +\n    \"LEFT-JUSTIFY LENGTH LENGTH-CHECK LESS LIBRARY \" +\n    \"LIKE LIMIT LIMITS LINAGE LINAGE-COUNTER \" +\n    \"LINE LINE-COUNTER LINES LINKAGE LOCAL-STORAGE \" +\n    \"LOCALE LOCALLY LOCK \" +\n    \"MEMBER MEMORY MERGE MESSAGE METACLASS \" +\n    \"MODE MODIFIED MODIFY MODULES MOVE \" +\n    \"MULTIPLE MULTIPLY NATIONAL NATIVE NEGATIVE \" +\n    \"NEXT NO NO-ECHO NONE NOT \" +\n    \"NULL NULL-KEY-MAP NULL-MAP NULLS NUMBER \" +\n    \"NUMERIC NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS \" +\n    \"OF OFF OMITTED ON ONLY \" +\n    \"OPEN OPTIONAL OR ORDER ORGANIZATION \" +\n    \"OTHER OUTPUT OVERFLOW OWNER PACKED-DECIMAL \" +\n    \"PADDING PAGE PAGE-COUNTER PARSE PERFORM \" +\n    \"PF PH PIC PICTURE PLUS \" +\n    \"POINTER POSITION POSITIVE PREFIX PRESENT \" +\n    \"PRINTING PRIOR PROCEDURE PROCEDURE-POINTER PROCEDURES \" +\n    \"PROCEED PROCESS PROCESSING PROGRAM PROGRAM-ID \" +\n    \"PROMPT PROTECTED PURGE QUEUE QUOTE \" +\n    \"QUOTES RANDOM RD READ READY \" +\n    \"REALM RECEIVE RECONNECT RECORD RECORD-NAME \" +\n    \"RECORDS RECURSIVE REDEFINES REEL REFERENCE \" +\n    \"REFERENCE-MONITOR REFERENCES RELATION RELATIVE RELEASE \" +\n    \"REMAINDER REMOVAL RENAMES REPEATED REPLACE \" +\n    \"REPLACING REPORT REPORTING REPORTS REPOSITORY \" +\n    \"REQUIRED RERUN RESERVE RESET RETAINING \" +\n    \"RETRIEVAL RETURN RETURN-CODE RETURNING REVERSE-VIDEO \" +\n    \"REVERSED REWIND REWRITE RF RH \" +\n    \"RIGHT RIGHT-JUSTIFY ROLLBACK ROLLING ROUNDED \" +\n    \"RUN SAME SCREEN SD SEARCH \" +\n    \"SECTION SECURE SECURITY SEGMENT SEGMENT-LIMIT \" +\n    \"SELECT SEND SENTENCE SEPARATE SEQUENCE \" +\n    \"SEQUENTIAL SET SHARED SIGN SIZE \" +\n    \"SKIP1 SKIP2 SKIP3 SORT SORT-MERGE \" +\n    \"SORT-RETURN SOURCE SOURCE-COMPUTER SPACE-FILL \" +\n    \"SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 \" +\n    \"START STARTING STATUS STOP STORE \" +\n    \"STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA \" +\n    \"SUBFILE SUBSTITUTE SUBTRACT SUM SUPPRESS \" +\n    \"SYMBOLIC SYNC SYNCHRONIZED SYSIN SYSOUT \" +\n    \"TABLE TALLYING TAPE TENANT TERMINAL \" +\n    \"TERMINATE TEST TEXT THAN THEN \" +\n    \"THROUGH THRU TIME TIMES TITLE \" +\n    \"TO TOP TRAILING TRAILING-SIGN TRANSACTION \" +\n    \"TYPE TYPEDEF UNDERLINE UNEQUAL UNIT \" +\n    \"UNSTRING UNTIL UP UPDATE UPON \" +\n    \"USAGE USAGE-MODE USE USING VALID \" +\n    \"VALIDATE VALUE VALUES VARYING VLR \" +\n    \"WAIT WHEN WHEN-COMPILED WITH WITHIN \" +\n    \"WORDS WORKING-STORAGE WRITE XML XML-CODE \" +\n    \"XML-EVENT XML-NTEXT XML-TEXT ZERO ZERO-FILL \" );\n\nvar builtins = makeKeywords(\"- * ** / + < <= = > >= \");\nvar tests = {\n  digit: /\\d/,\n  digit_or_colon: /[\\d:]/,\n  hex: /[0-9a-f]/i,\n  sign: /[+-]/,\n  exponent: /e/i,\n  keyword_char: /[^\\s\\(\\[\\;\\)\\]]/,\n  symbol: /[\\w*+\\-]/\n};\nfunction isNumber(ch, stream){\n  // hex\n  if ( ch === '0' && stream.eat(/x/i) ) {\n    stream.eatWhile(tests.hex);\n    return true;\n  }\n  // leading sign\n  if ( ( ch == '+' || ch == '-' ) && ( tests.digit.test(stream.peek()) ) ) {\n    stream.eat(tests.sign);\n    ch = stream.next();\n  }\n  if ( tests.digit.test(ch) ) {\n    stream.eat(ch);\n    stream.eatWhile(tests.digit);\n    if ( '.' == stream.peek()) {\n      stream.eat('.');\n      stream.eatWhile(tests.digit);\n    }\n    if ( stream.eat(tests.exponent) ) {\n      stream.eat(tests.sign);\n      stream.eatWhile(tests.digit);\n    }\n    return true;\n  }\n  return false;\n}\nexport const cobol = {\n  name: \"cobol\",\n  startState: function () {\n    return {\n      indentStack: null,\n      indentation: 0,\n      mode: false\n    };\n  },\n  token: function (stream, state) {\n    if (state.indentStack == null && stream.sol()) {\n      // update indentation, but only if indentStack is empty\n      state.indentation = 6 ; //stream.indentation();\n    }\n    // skip spaces\n    if (stream.eatSpace()) {\n      return null;\n    }\n    var returnType = null;\n    switch(state.mode){\n    case \"string\": // multi-line string parsing mode\n      var next = false;\n      while ((next = stream.next()) != null) {\n        if ((next == \"\\\"\" || next == \"\\'\") && !stream.match(/['\"]/, false)) {\n          state.mode = false;\n          break;\n        }\n      }\n      returnType = STRING; // continue on in string mode\n      break;\n    default: // default parsing mode\n      var ch = stream.next();\n      var col = stream.column();\n      if (col >= 0 && col <= 5) {\n        returnType = COBOLLINENUM;\n      } else if (col >= 72 && col <= 79) {\n        stream.skipToEnd();\n        returnType = MODTAG;\n      } else if (ch == \"*\" && col == 6) { // comment\n        stream.skipToEnd(); // rest of the line is a comment\n        returnType = COMMENT;\n      } else if (ch == \"\\\"\" || ch == \"\\'\") {\n        state.mode = \"string\";\n        returnType = STRING;\n      } else if (ch == \"'\" && !( tests.digit_or_colon.test(stream.peek()) )) {\n        returnType = ATOM;\n      } else if (ch == \".\") {\n        returnType = PERIOD;\n      } else if (isNumber(ch,stream)){\n        returnType = NUMBER;\n      } else {\n        if (stream.current().match(tests.symbol)) {\n          while (col < 71) {\n            if (stream.eat(tests.symbol) === undefined) {\n              break;\n            } else {\n              col++;\n            }\n          }\n        }\n        if (keywords && keywords.propertyIsEnumerable(stream.current().toUpperCase())) {\n          returnType = KEYWORD;\n        } else if (builtins && builtins.propertyIsEnumerable(stream.current().toUpperCase())) {\n          returnType = BUILTIN;\n        } else if (atoms && atoms.propertyIsEnumerable(stream.current().toUpperCase())) {\n          returnType = ATOM;\n        } else returnType = null;\n      }\n    }\n    return returnType;\n  },\n  indent: function (state) {\n    if (state.indentStack == null) return state.indentation;\n    return state.indentStack.indent;\n  }\n};\n\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$8a90a444c86d9e68$export$2683b91abdd31f7a","set","s","enumerable","configurable","$8a90a444c86d9e68$var$STRING","$8a90a444c86d9e68$var$ATOM","$8a90a444c86d9e68$var$makeKeywords","str","obj","words","split","i","length","$8a90a444c86d9e68$var$atoms","$8a90a444c86d9e68$var$keywords","$8a90a444c86d9e68$var$builtins","name","startState","indentStack","indentation","mode","token","stream","state","sol","eatSpace","returnType","next","match","ch","col","column","skipToEnd","$8a90a444c86d9e68$var$tests","test","peek","eat","eatWhile","current","undefined","propertyIsEnumerable","toUpperCase","indent"],"version":3,"file":"cobol.4318c066.js.map"}