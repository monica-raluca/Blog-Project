{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-e8e89d38fae90db2.js","node_modules/@codemirror/legacy-modes/mode/javascript.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 57516;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"13c4961cbe132223\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          // Ignore cloudflare workers error.\n          if (err.message && !err.message.includes('Disallowed operation called within global scope')) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","function mkJavaScript(parserConfig) {\n  var statementIndent = parserConfig.statementIndent;\n  var jsonldMode = parserConfig.jsonld;\n  var jsonMode = parserConfig.json || jsonldMode;\n  var isTS = parserConfig.typescript;\n  var wordRE = parserConfig.wordCharacters || /[\\w$\\xa1-\\uffff]/;\n\n  // Tokenizer\n\n  var keywords = function(){\n    function kw(type) {return {type: type, style: \"keyword\"};}\n    var A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\"), D = kw(\"keyword d\");\n    var operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"};\n\n    return {\n      \"if\": kw(\"if\"), \"while\": A, \"with\": A, \"else\": B, \"do\": B, \"try\": B, \"finally\": B,\n      \"return\": D, \"break\": D, \"continue\": D, \"new\": kw(\"new\"), \"delete\": C, \"void\": C, \"throw\": C,\n      \"debugger\": kw(\"debugger\"), \"var\": kw(\"var\"), \"const\": kw(\"var\"), \"let\": kw(\"var\"),\n      \"function\": kw(\"function\"), \"catch\": kw(\"catch\"),\n      \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n      \"in\": operator, \"typeof\": operator, \"instanceof\": operator,\n      \"true\": atom, \"false\": atom, \"null\": atom, \"undefined\": atom, \"NaN\": atom, \"Infinity\": atom,\n      \"this\": kw(\"this\"), \"class\": kw(\"class\"), \"super\": kw(\"atom\"),\n      \"yield\": C, \"export\": kw(\"export\"), \"import\": kw(\"import\"), \"extends\": C,\n      \"await\": C\n    };\n  }();\n\n  var isOperatorChar = /[+\\-*&%=<>!?|~^@]/;\n  var isJsonldKeyword = /^@(context|id|value|language|type|container|list|set|reverse|index|base|vocab|graph)\"/;\n\n  function readRegexp(stream) {\n    var escaped = false, next, inSet = false;\n    while ((next = stream.next()) != null) {\n      if (!escaped) {\n        if (next == \"/\" && !inSet) return;\n        if (next == \"[\") inSet = true;\n        else if (inSet && next == \"]\") inSet = false;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n  }\n\n  // Used as scratch variables to communicate multiple values without\n  // consing up tons of objects.\n  var type, content;\n  function ret(tp, style, cont) {\n    type = tp; content = cont;\n    return style;\n  }\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \".\" && stream.match(/^\\d[\\d_]*(?:[eE][+\\-]?[\\d_]+)?/)) {\n      return ret(\"number\", \"number\");\n    } else if (ch == \".\" && stream.match(\"..\")) {\n      return ret(\"spread\", \"meta\");\n    } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      return ret(ch);\n    } else if (ch == \"=\" && stream.eat(\">\")) {\n      return ret(\"=>\", \"operator\");\n    } else if (ch == \"0\" && stream.match(/^(?:x[\\dA-Fa-f_]+|o[0-7_]+|b[01_]+)n?/)) {\n      return ret(\"number\", \"number\");\n    } else if (/\\d/.test(ch)) {\n      stream.match(/^[\\d_]*(?:n|(?:\\.[\\d_]*)?(?:[eE][+\\-]?[\\d_]+)?)?/);\n      return ret(\"number\", \"number\");\n    } else if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      } else if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return ret(\"comment\", \"comment\");\n      } else if (expressionAllowed(stream, state, 1)) {\n        readRegexp(stream);\n        stream.match(/^\\b(([gimyus])(?![gimyus]*\\2))+\\b/);\n        return ret(\"regexp\", \"string.special\");\n      } else {\n        stream.eat(\"=\");\n        return ret(\"operator\", \"operator\", stream.current());\n      }\n    } else if (ch == \"`\") {\n      state.tokenize = tokenQuasi;\n      return tokenQuasi(stream, state);\n    } else if (ch == \"#\" && stream.peek() == \"!\") {\n      stream.skipToEnd();\n      return ret(\"meta\", \"meta\");\n    } else if (ch == \"#\" && stream.eatWhile(wordRE)) {\n      return ret(\"variable\", \"property\")\n    } else if (ch == \"<\" && stream.match(\"!--\") ||\n               (ch == \"-\" && stream.match(\"->\") && !/\\S/.test(stream.string.slice(0, stream.start)))) {\n      stream.skipToEnd()\n      return ret(\"comment\", \"comment\")\n    } else if (isOperatorChar.test(ch)) {\n      if (ch != \">\" || !state.lexical || state.lexical.type != \">\") {\n        if (stream.eat(\"=\")) {\n          if (ch == \"!\" || ch == \"=\") stream.eat(\"=\")\n        } else if (/[<>*+\\-|&?]/.test(ch)) {\n          stream.eat(ch)\n          if (ch == \">\") stream.eat(ch)\n        }\n      }\n      if (ch == \"?\" && stream.eat(\".\")) return ret(\".\")\n      return ret(\"operator\", \"operator\", stream.current());\n    } else if (wordRE.test(ch)) {\n      stream.eatWhile(wordRE);\n      var word = stream.current()\n      if (state.lastType != \".\") {\n        if (keywords.propertyIsEnumerable(word)) {\n          var kw = keywords[word]\n          return ret(kw.type, kw.style, word)\n        }\n        if (word == \"async\" && stream.match(/^(\\s|\\/\\*([^*]|\\*(?!\\/))*?\\*\\/)*[\\[\\(\\w]/, false))\n          return ret(\"async\", \"keyword\", word)\n      }\n      return ret(\"variable\", \"variable\", word)\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next;\n      if (jsonldMode && stream.peek() == \"@\" && stream.match(isJsonldKeyword)){\n        state.tokenize = tokenBase;\n        return ret(\"jsonld-keyword\", \"meta\");\n      }\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) break;\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (!escaped) state.tokenize = tokenBase;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenQuasi(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (!escaped && (next == \"`\" || next == \"$\" && stream.eat(\"{\"))) {\n        state.tokenize = tokenBase;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    return ret(\"quasi\", \"string.special\", stream.current());\n  }\n\n  var brackets = \"([{}])\";\n  // This is a crude lookahead trick to try and notice that we're\n  // parsing the argument patterns for a fat-arrow function before we\n  // actually hit the arrow token. It only works if the arrow is on\n  // the same line as the arguments and there's no strange noise\n  // (comments) in between. Fallback is to only notice when we hit the\n  // arrow, and not declare the arguments as locals for the arrow\n  // body.\n  function findFatArrow(stream, state) {\n    if (state.fatArrowAt) state.fatArrowAt = null;\n    var arrow = stream.string.indexOf(\"=>\", stream.start);\n    if (arrow < 0) return;\n\n    if (isTS) { // Try to skip TypeScript return type declarations after the arguments\n      var m = /:\\s*(?:\\w+(?:<[^>]*>|\\[\\])?|\\{[^}]*\\})\\s*$/.exec(stream.string.slice(stream.start, arrow))\n      if (m) arrow = m.index\n    }\n\n    var depth = 0, sawSomething = false;\n    for (var pos = arrow - 1; pos >= 0; --pos) {\n      var ch = stream.string.charAt(pos);\n      var bracket = brackets.indexOf(ch);\n      if (bracket >= 0 && bracket < 3) {\n        if (!depth) { ++pos; break; }\n        if (--depth == 0) { if (ch == \"(\") sawSomething = true; break; }\n      } else if (bracket >= 3 && bracket < 6) {\n        ++depth;\n      } else if (wordRE.test(ch)) {\n        sawSomething = true;\n      } else if (/[\"'\\/`]/.test(ch)) {\n        for (;; --pos) {\n          if (pos == 0) return\n          var next = stream.string.charAt(pos - 1)\n          if (next == ch && stream.string.charAt(pos - 2) != \"\\\\\") { pos--; break }\n        }\n      } else if (sawSomething && !depth) {\n        ++pos;\n        break;\n      }\n    }\n    if (sawSomething && !depth) state.fatArrowAt = pos;\n  }\n\n  // Parser\n\n  var atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true,\n                     \"regexp\": true, \"this\": true, \"import\": true, \"jsonld-keyword\": true};\n\n  function JSLexical(indented, column, type, align, prev, info) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.prev = prev;\n    this.info = info;\n    if (align != null) this.align = align;\n  }\n\n  function inScope(state, varname) {\n    for (var v = state.localVars; v; v = v.next)\n      if (v.name == varname) return true;\n    for (var cx = state.context; cx; cx = cx.prev) {\n      for (var v = cx.vars; v; v = v.next)\n        if (v.name == varname) return true;\n    }\n  }\n\n  function parseJS(state, style, type, content, stream) {\n    var cc = state.cc;\n    // Communicate our context to the combinators.\n    // (Less wasteful than consing up a hundred closures on every call.)\n    cx.state = state; cx.stream = stream; cx.marked = null; cx.cc = cc; cx.style = style;\n\n    if (!state.lexical.hasOwnProperty(\"align\"))\n      state.lexical.align = true;\n\n    while(true) {\n      var combinator = cc.length ? cc.pop() : jsonMode ? expression : statement;\n      if (combinator(type, content)) {\n        while(cc.length && cc[cc.length - 1].lex)\n          cc.pop()();\n        if (cx.marked) return cx.marked;\n        if (type == \"variable\" && inScope(state, content)) return \"variableName.local\";\n        return style;\n      }\n    }\n  }\n\n  // Combinator utils\n\n  var cx = {state: null, column: null, marked: null, cc: null};\n  function pass() {\n    for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n  }\n  function cont() {\n    pass.apply(null, arguments);\n    return true;\n  }\n  function inList(name, list) {\n    for (var v = list; v; v = v.next) if (v.name == name) return true\n    return false;\n  }\n  function register(varname) {\n    var state = cx.state;\n    cx.marked = \"def\";\n    if (state.context) {\n      if (state.lexical.info == \"var\" && state.context && state.context.block) {\n        // FIXME function decls are also not block scoped\n        var newContext = registerVarScoped(varname, state.context)\n        if (newContext != null) {\n          state.context = newContext\n          return\n        }\n      } else if (!inList(varname, state.localVars)) {\n        state.localVars = new Var(varname, state.localVars)\n        return\n      }\n    }\n    // Fall through means this is global\n    if (parserConfig.globalVars && !inList(varname, state.globalVars))\n      state.globalVars = new Var(varname, state.globalVars)\n  }\n  function registerVarScoped(varname, context) {\n    if (!context) {\n      return null\n    } else if (context.block) {\n      var inner = registerVarScoped(varname, context.prev)\n      if (!inner) return null\n      if (inner == context.prev) return context\n      return new Context(inner, context.vars, true)\n    } else if (inList(varname, context.vars)) {\n      return context\n    } else {\n      return new Context(context.prev, new Var(varname, context.vars), false)\n    }\n  }\n\n  function isModifier(name) {\n    return name == \"public\" || name == \"private\" || name == \"protected\" || name == \"abstract\" || name == \"readonly\"\n  }\n\n  // Combinators\n\n  function Context(prev, vars, block) { this.prev = prev; this.vars = vars; this.block = block }\n  function Var(name, next) { this.name = name; this.next = next }\n\n  var defaultVars = new Var(\"this\", new Var(\"arguments\", null))\n  function pushcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, false)\n    cx.state.localVars = defaultVars\n  }\n  function pushblockcontext() {\n    cx.state.context = new Context(cx.state.context, cx.state.localVars, true)\n    cx.state.localVars = null\n  }\n  pushcontext.lex = pushblockcontext.lex = true\n  function popcontext() {\n    cx.state.localVars = cx.state.context.vars\n    cx.state.context = cx.state.context.prev\n  }\n  popcontext.lex = true\n  function pushlex(type, info) {\n    var result = function() {\n      var state = cx.state, indent = state.indented;\n      if (state.lexical.type == \"stat\") indent = state.lexical.indented;\n      else for (var outer = state.lexical; outer && outer.type == \")\" && outer.align; outer = outer.prev)\n        indent = outer.indented;\n      state.lexical = new JSLexical(indent, cx.stream.column(), type, null, state.lexical, info);\n    };\n    result.lex = true;\n    return result;\n  }\n  function poplex() {\n    var state = cx.state;\n    if (state.lexical.prev) {\n      if (state.lexical.type == \")\")\n        state.indented = state.lexical.indented;\n      state.lexical = state.lexical.prev;\n    }\n  }\n  poplex.lex = true;\n\n  function expect(wanted) {\n    function exp(type) {\n      if (type == wanted) return cont();\n      else if (wanted == \";\" || type == \"}\" || type == \")\" || type == \"]\") return pass();\n      else return cont(exp);\n    };\n    return exp;\n  }\n\n  function statement(type, value) {\n    if (type == \"var\") return cont(pushlex(\"vardef\", value), vardef, expect(\";\"), poplex);\n    if (type == \"keyword a\") return cont(pushlex(\"form\"), parenExpr, statement, poplex);\n    if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n    if (type == \"keyword d\") return cx.stream.match(/^\\s*$/, false) ? cont() : cont(pushlex(\"stat\"), maybeexpression, expect(\";\"), poplex);\n    if (type == \"debugger\") return cont(expect(\";\"));\n    if (type == \"{\") return cont(pushlex(\"}\"), pushblockcontext, block, poplex, popcontext);\n    if (type == \";\") return cont();\n    if (type == \"if\") {\n      if (cx.state.lexical.info == \"else\" && cx.state.cc[cx.state.cc.length - 1] == poplex)\n        cx.state.cc.pop()();\n      return cont(pushlex(\"form\"), parenExpr, statement, poplex, maybeelse);\n    }\n    if (type == \"function\") return cont(functiondef);\n    if (type == \"for\") return cont(pushlex(\"form\"), pushblockcontext, forspec, statement, popcontext, poplex);\n    if (type == \"class\" || (isTS && value == \"interface\")) {\n      cx.marked = \"keyword\"\n      return cont(pushlex(\"form\", type == \"class\" ? type : value), className, poplex)\n    }\n    if (type == \"variable\") {\n      if (isTS && value == \"declare\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else if (isTS && (value == \"module\" || value == \"enum\" || value == \"type\") && cx.stream.match(/^\\s*\\w/, false)) {\n        cx.marked = \"keyword\"\n        if (value == \"enum\") return cont(enumdef);\n        else if (value == \"type\") return cont(typename, expect(\"operator\"), typeexpr, expect(\";\"));\n        else return cont(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), block, poplex, poplex)\n      } else if (isTS && value == \"namespace\") {\n        cx.marked = \"keyword\"\n        return cont(pushlex(\"form\"), expression, statement, poplex)\n      } else if (isTS && value == \"abstract\") {\n        cx.marked = \"keyword\"\n        return cont(statement)\n      } else {\n        return cont(pushlex(\"stat\"), maybelabel);\n      }\n    }\n    if (type == \"switch\") return cont(pushlex(\"form\"), parenExpr, expect(\"{\"), pushlex(\"}\", \"switch\"), pushblockcontext,\n                                      block, poplex, poplex, popcontext);\n    if (type == \"case\") return cont(expression, expect(\":\"));\n    if (type == \"default\") return cont(expect(\":\"));\n    if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, maybeCatchBinding, statement, poplex, popcontext);\n    if (type == \"export\") return cont(pushlex(\"stat\"), afterExport, poplex);\n    if (type == \"import\") return cont(pushlex(\"stat\"), afterImport, poplex);\n    if (type == \"async\") return cont(statement)\n    if (value == \"@\") return cont(expression, statement)\n    return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n  }\n  function maybeCatchBinding(type) {\n    if (type == \"(\") return cont(funarg, expect(\")\"))\n  }\n  function expression(type, value) {\n    return expressionInner(type, value, false);\n  }\n  function expressionNoComma(type, value) {\n    return expressionInner(type, value, true);\n  }\n  function parenExpr(type) {\n    if (type != \"(\") return pass()\n    return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex)\n  }\n  function expressionInner(type, value, noComma) {\n    if (cx.state.fatArrowAt == cx.stream.start) {\n      var body = noComma ? arrowBodyNoComma : arrowBody;\n      if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, expect(\"=>\"), body, popcontext);\n      else if (type == \"variable\") return pass(pushcontext, pattern, expect(\"=>\"), body, popcontext);\n    }\n\n    var maybeop = noComma ? maybeoperatorNoComma : maybeoperatorComma;\n    if (atomicTypes.hasOwnProperty(type)) return cont(maybeop);\n    if (type == \"function\") return cont(functiondef, maybeop);\n    if (type == \"class\" || (isTS && value == \"interface\")) { cx.marked = \"keyword\"; return cont(pushlex(\"form\"), classExpression, poplex); }\n    if (type == \"keyword c\" || type == \"async\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeop);\n    if (type == \"operator\" || type == \"spread\") return cont(noComma ? expressionNoComma : expression);\n    if (type == \"[\") return cont(pushlex(\"]\"), arrayLiteral, poplex, maybeop);\n    if (type == \"{\") return contCommasep(objprop, \"}\", null, maybeop);\n    if (type == \"quasi\") return pass(quasi, maybeop);\n    if (type == \"new\") return cont(maybeTarget(noComma));\n    return cont();\n  }\n  function maybeexpression(type) {\n    if (type.match(/[;\\}\\)\\],]/)) return pass();\n    return pass(expression);\n  }\n\n  function maybeoperatorComma(type, value) {\n    if (type == \",\") return cont(maybeexpression);\n    return maybeoperatorNoComma(type, value, false);\n  }\n  function maybeoperatorNoComma(type, value, noComma) {\n    var me = noComma == false ? maybeoperatorComma : maybeoperatorNoComma;\n    var expr = noComma == false ? expression : expressionNoComma;\n    if (type == \"=>\") return cont(pushcontext, noComma ? arrowBodyNoComma : arrowBody, popcontext);\n    if (type == \"operator\") {\n      if (/\\+\\+|--/.test(value) || isTS && value == \"!\") return cont(me);\n      if (isTS && value == \"<\" && cx.stream.match(/^([^<>]|<[^<>]*>)*>\\s*\\(/, false))\n        return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, me);\n      if (value == \"?\") return cont(expression, expect(\":\"), expr);\n      return cont(expr);\n    }\n    if (type == \"quasi\") { return pass(quasi, me); }\n    if (type == \";\") return;\n    if (type == \"(\") return contCommasep(expressionNoComma, \")\", \"call\", me);\n    if (type == \".\") return cont(property, me);\n    if (type == \"[\") return cont(pushlex(\"]\"), maybeexpression, expect(\"]\"), poplex, me);\n    if (isTS && value == \"as\") { cx.marked = \"keyword\"; return cont(typeexpr, me) }\n    if (type == \"regexp\") {\n      cx.state.lastType = cx.marked = \"operator\"\n      cx.stream.backUp(cx.stream.pos - cx.stream.start - 1)\n      return cont(expr)\n    }\n  }\n  function quasi(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasi);\n    return cont(maybeexpression, continueQuasi);\n  }\n  function continueQuasi(type) {\n    if (type == \"}\") {\n      cx.marked = \"string.special\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasi);\n    }\n  }\n  function arrowBody(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expression);\n  }\n  function arrowBodyNoComma(type) {\n    findFatArrow(cx.stream, cx.state);\n    return pass(type == \"{\" ? statement : expressionNoComma);\n  }\n  function maybeTarget(noComma) {\n    return function(type) {\n      if (type == \".\") return cont(noComma ? targetNoComma : target);\n      else if (type == \"variable\" && isTS) return cont(maybeTypeArgs, noComma ? maybeoperatorNoComma : maybeoperatorComma)\n      else return pass(noComma ? expressionNoComma : expression);\n    };\n  }\n  function target(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorComma); }\n  }\n  function targetNoComma(_, value) {\n    if (value == \"target\") { cx.marked = \"keyword\"; return cont(maybeoperatorNoComma); }\n  }\n  function maybelabel(type) {\n    if (type == \":\") return cont(poplex, statement);\n    return pass(maybeoperatorComma, expect(\";\"), poplex);\n  }\n  function property(type) {\n    if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n  }\n  function objprop(type, value) {\n    if (type == \"async\") {\n      cx.marked = \"property\";\n      return cont(objprop);\n    } else if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      if (value == \"get\" || value == \"set\") return cont(getterSetter);\n      var m // Work around fat-arrow-detection complication for detecting typescript typed arrow params\n      if (isTS && cx.state.fatArrowAt == cx.stream.start && (m = cx.stream.match(/^\\s*:\\s*/, false)))\n        cx.state.fatArrowAt = cx.stream.pos + m[0].length\n      return cont(afterprop);\n    } else if (type == \"number\" || type == \"string\") {\n      cx.marked = jsonldMode ? \"property\" : (cx.style + \" property\");\n      return cont(afterprop);\n    } else if (type == \"jsonld-keyword\") {\n      return cont(afterprop);\n    } else if (isTS && isModifier(value)) {\n      cx.marked = \"keyword\"\n      return cont(objprop)\n    } else if (type == \"[\") {\n      return cont(expression, maybetype, expect(\"]\"), afterprop);\n    } else if (type == \"spread\") {\n      return cont(expressionNoComma, afterprop);\n    } else if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(objprop);\n    } else if (type == \":\") {\n      return pass(afterprop)\n    }\n  }\n  function getterSetter(type) {\n    if (type != \"variable\") return pass(afterprop);\n    cx.marked = \"property\";\n    return cont(functiondef);\n  }\n  function afterprop(type) {\n    if (type == \":\") return cont(expressionNoComma);\n    if (type == \"(\") return pass(functiondef);\n  }\n  function commasep(what, end, sep) {\n    function proceed(type, value) {\n      if (sep ? sep.indexOf(type) > -1 : type == \",\") {\n        var lex = cx.state.lexical;\n        if (lex.info == \"call\") lex.pos = (lex.pos || 0) + 1;\n        return cont(function(type, value) {\n          if (type == end || value == end) return pass()\n          return pass(what)\n        }, proceed);\n      }\n      if (type == end || value == end) return cont();\n      if (sep && sep.indexOf(\";\") > -1) return pass(what)\n      return cont(expect(end));\n    }\n    return function(type, value) {\n      if (type == end || value == end) return cont();\n      return pass(what, proceed);\n    };\n  }\n  function contCommasep(what, end, info) {\n    for (var i = 3; i < arguments.length; i++)\n      cx.cc.push(arguments[i]);\n    return cont(pushlex(end, info), commasep(what, end), poplex);\n  }\n  function block(type) {\n    if (type == \"}\") return cont();\n    return pass(statement, block);\n  }\n  function maybetype(type, value) {\n    if (isTS) {\n      if (type == \":\") return cont(typeexpr);\n      if (value == \"?\") return cont(maybetype);\n    }\n  }\n  function maybetypeOrIn(type, value) {\n    if (isTS && (type == \":\" || value == \"in\")) return cont(typeexpr)\n  }\n  function mayberettype(type) {\n    if (isTS && type == \":\") {\n      if (cx.stream.match(/^\\s*\\w+\\s+is\\b/, false)) return cont(expression, isKW, typeexpr)\n      else return cont(typeexpr)\n    }\n  }\n  function isKW(_, value) {\n    if (value == \"is\") {\n      cx.marked = \"keyword\"\n      return cont()\n    }\n  }\n  function typeexpr(type, value) {\n    if (value == \"keyof\" || value == \"typeof\" || value == \"infer\" || value == \"readonly\") {\n      cx.marked = \"keyword\"\n      return cont(value == \"typeof\" ? expressionNoComma : typeexpr)\n    }\n    if (type == \"variable\" || value == \"void\") {\n      cx.marked = \"type\"\n      return cont(afterType)\n    }\n    if (value == \"|\" || value == \"&\") return cont(typeexpr)\n    if (type == \"string\" || type == \"number\" || type == \"atom\") return cont(afterType);\n    if (type == \"[\") return cont(pushlex(\"]\"), commasep(typeexpr, \"]\", \",\"), poplex, afterType)\n    if (type == \"{\") return cont(pushlex(\"}\"), typeprops, poplex, afterType)\n    if (type == \"(\") return cont(commasep(typearg, \")\"), maybeReturnType, afterType)\n    if (type == \"<\") return cont(commasep(typeexpr, \">\"), typeexpr)\n    if (type == \"quasi\") return pass(quasiType, afterType)\n  }\n  function maybeReturnType(type) {\n    if (type == \"=>\") return cont(typeexpr)\n  }\n  function typeprops(type) {\n    if (type.match(/[\\}\\)\\]]/)) return cont()\n    if (type == \",\" || type == \";\") return cont(typeprops)\n    return pass(typeprop, typeprops)\n  }\n  function typeprop(type, value) {\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\"\n      return cont(typeprop)\n    } else if (value == \"?\" || type == \"number\" || type == \"string\") {\n      return cont(typeprop)\n    } else if (type == \":\") {\n      return cont(typeexpr)\n    } else if (type == \"[\") {\n      return cont(expect(\"variable\"), maybetypeOrIn, expect(\"]\"), typeprop)\n    } else if (type == \"(\") {\n      return pass(functiondecl, typeprop)\n    } else if (!type.match(/[;\\}\\)\\],]/)) {\n      return cont()\n    }\n  }\n  function quasiType(type, value) {\n    if (type != \"quasi\") return pass();\n    if (value.slice(value.length - 2) != \"${\") return cont(quasiType);\n    return cont(typeexpr, continueQuasiType);\n  }\n  function continueQuasiType(type) {\n   if (type == \"}\") {\n      cx.marked = \"string.special\";\n      cx.state.tokenize = tokenQuasi;\n      return cont(quasiType);\n    }\n  }\n  function typearg(type, value) {\n    if (type == \"variable\" && cx.stream.match(/^\\s*[?:]/, false) || value == \"?\") return cont(typearg)\n    if (type == \":\") return cont(typeexpr)\n    if (type == \"spread\") return cont(typearg)\n    return pass(typeexpr)\n  }\n  function afterType(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n    if (value == \"|\" || type == \".\" || value == \"&\") return cont(typeexpr)\n    if (type == \"[\") return cont(typeexpr, expect(\"]\"), afterType)\n    if (value == \"extends\" || value == \"implements\") { cx.marked = \"keyword\"; return cont(typeexpr) }\n    if (value == \"?\") return cont(typeexpr, expect(\":\"), typeexpr)\n  }\n  function maybeTypeArgs(_, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeexpr, \">\"), poplex, afterType)\n  }\n  function typeparam() {\n    return pass(typeexpr, maybeTypeDefault)\n  }\n  function maybeTypeDefault(_, value) {\n    if (value == \"=\") return cont(typeexpr)\n  }\n  function vardef(_, value) {\n    if (value == \"enum\") {cx.marked = \"keyword\"; return cont(enumdef)}\n    return pass(pattern, maybetype, maybeAssign, vardefCont);\n  }\n  function pattern(type, value) {\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(pattern) }\n    if (type == \"variable\") { register(value); return cont(); }\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"[\") return contCommasep(eltpattern, \"]\");\n    if (type == \"{\") return contCommasep(proppattern, \"}\");\n  }\n  function proppattern(type, value) {\n    if (type == \"variable\" && !cx.stream.match(/^\\s*:/, false)) {\n      register(value);\n      return cont(maybeAssign);\n    }\n    if (type == \"variable\") cx.marked = \"property\";\n    if (type == \"spread\") return cont(pattern);\n    if (type == \"}\") return pass();\n    if (type == \"[\") return cont(expression, expect(']'), expect(':'), proppattern);\n    return cont(expect(\":\"), pattern, maybeAssign);\n  }\n  function eltpattern() {\n    return pass(pattern, maybeAssign)\n  }\n  function maybeAssign(_type, value) {\n    if (value == \"=\") return cont(expressionNoComma);\n  }\n  function vardefCont(type) {\n    if (type == \",\") return cont(vardef);\n  }\n  function maybeelse(type, value) {\n    if (type == \"keyword b\" && value == \"else\") return cont(pushlex(\"form\", \"else\"), statement, poplex);\n  }\n  function forspec(type, value) {\n    if (value == \"await\") return cont(forspec);\n    if (type == \"(\") return cont(pushlex(\")\"), forspec1, poplex);\n  }\n  function forspec1(type) {\n    if (type == \"var\") return cont(vardef, forspec2);\n    if (type == \"variable\") return cont(forspec2);\n    return pass(forspec2)\n  }\n  function forspec2(type, value) {\n    if (type == \")\") return cont()\n    if (type == \";\") return cont(forspec2)\n    if (value == \"in\" || value == \"of\") { cx.marked = \"keyword\"; return cont(expression, forspec2) }\n    return pass(expression, forspec2)\n  }\n  function functiondef(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondef);}\n    if (type == \"variable\") {register(value); return cont(functiondef);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, statement, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondef)\n  }\n  function functiondecl(type, value) {\n    if (value == \"*\") {cx.marked = \"keyword\"; return cont(functiondecl);}\n    if (type == \"variable\") {register(value); return cont(functiondecl);}\n    if (type == \"(\") return cont(pushcontext, pushlex(\")\"), commasep(funarg, \")\"), poplex, mayberettype, popcontext);\n    if (isTS && value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, functiondecl)\n  }\n  function typename(type, value) {\n    if (type == \"keyword\" || type == \"variable\") {\n      cx.marked = \"type\"\n      return cont(typename)\n    } else if (value == \"<\") {\n      return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex)\n    }\n  }\n  function funarg(type, value) {\n    if (value == \"@\") cont(expression, funarg)\n    if (type == \"spread\") return cont(funarg);\n    if (isTS && isModifier(value)) { cx.marked = \"keyword\"; return cont(funarg); }\n    if (isTS && type == \"this\") return cont(maybetype, maybeAssign)\n    return pass(pattern, maybetype, maybeAssign);\n  }\n  function classExpression(type, value) {\n    // Class expressions may have an optional name.\n    if (type == \"variable\") return className(type, value);\n    return classNameAfter(type, value);\n  }\n  function className(type, value) {\n    if (type == \"variable\") {register(value); return cont(classNameAfter);}\n  }\n  function classNameAfter(type, value) {\n    if (value == \"<\") return cont(pushlex(\">\"), commasep(typeparam, \">\"), poplex, classNameAfter)\n    if (value == \"extends\" || value == \"implements\" || (isTS && type == \",\")) {\n      if (value == \"implements\") cx.marked = \"keyword\";\n      return cont(isTS ? typeexpr : expression, classNameAfter);\n    }\n    if (type == \"{\") return cont(pushlex(\"}\"), classBody, poplex);\n  }\n  function classBody(type, value) {\n    if (type == \"async\" ||\n        (type == \"variable\" &&\n         (value == \"static\" || value == \"get\" || value == \"set\" || (isTS && isModifier(value))) &&\n         cx.stream.match(/^\\s+#?[\\w$\\xa1-\\uffff]/, false))) {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (type == \"variable\" || cx.style == \"keyword\") {\n      cx.marked = \"property\";\n      return cont(classfield, classBody);\n    }\n    if (type == \"number\" || type == \"string\") return cont(classfield, classBody);\n    if (type == \"[\")\n      return cont(expression, maybetype, expect(\"]\"), classfield, classBody)\n    if (value == \"*\") {\n      cx.marked = \"keyword\";\n      return cont(classBody);\n    }\n    if (isTS && type == \"(\") return pass(functiondecl, classBody)\n    if (type == \";\" || type == \",\") return cont(classBody);\n    if (type == \"}\") return cont();\n    if (value == \"@\") return cont(expression, classBody)\n  }\n  function classfield(type, value) {\n    if (value == \"!\" || value == \"?\") return cont(classfield)\n    if (type == \":\") return cont(typeexpr, maybeAssign)\n    if (value == \"=\") return cont(expressionNoComma)\n    var context = cx.state.lexical.prev, isInterface = context && context.info == \"interface\"\n    return pass(isInterface ? functiondecl : functiondef)\n  }\n  function afterExport(type, value) {\n    if (value == \"*\") { cx.marked = \"keyword\"; return cont(maybeFrom, expect(\";\")); }\n    if (value == \"default\") { cx.marked = \"keyword\"; return cont(expression, expect(\";\")); }\n    if (type == \"{\") return cont(commasep(exportField, \"}\"), maybeFrom, expect(\";\"));\n    return pass(statement);\n  }\n  function exportField(type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(expect(\"variable\")); }\n    if (type == \"variable\") return pass(expressionNoComma, exportField);\n  }\n  function afterImport(type) {\n    if (type == \"string\") return cont();\n    if (type == \"(\") return pass(expression);\n    if (type == \".\") return pass(maybeoperatorComma);\n    return pass(importSpec, maybeMoreImports, maybeFrom);\n  }\n  function importSpec(type, value) {\n    if (type == \"{\") return contCommasep(importSpec, \"}\");\n    if (type == \"variable\") register(value);\n    if (value == \"*\") cx.marked = \"keyword\";\n    return cont(maybeAs);\n  }\n  function maybeMoreImports(type) {\n    if (type == \",\") return cont(importSpec, maybeMoreImports)\n  }\n  function maybeAs(_type, value) {\n    if (value == \"as\") { cx.marked = \"keyword\"; return cont(importSpec); }\n  }\n  function maybeFrom(_type, value) {\n    if (value == \"from\") { cx.marked = \"keyword\"; return cont(expression); }\n  }\n  function arrayLiteral(type) {\n    if (type == \"]\") return cont();\n    return pass(commasep(expressionNoComma, \"]\"));\n  }\n  function enumdef() {\n    return pass(pushlex(\"form\"), pattern, expect(\"{\"), pushlex(\"}\"), commasep(enummember, \"}\"), poplex, poplex)\n  }\n  function enummember() {\n    return pass(pattern, maybeAssign);\n  }\n\n  function isContinuedStatement(state, textAfter) {\n    return state.lastType == \"operator\" || state.lastType == \",\" ||\n      isOperatorChar.test(textAfter.charAt(0)) ||\n      /[,.]/.test(textAfter.charAt(0));\n  }\n\n  function expressionAllowed(stream, state, backUp) {\n    return state.tokenize == tokenBase &&\n      /^(?:operator|sof|keyword [bcd]|case|new|export|default|spread|[\\[{}\\(,;:]|=>)$/.test(state.lastType) ||\n      (state.lastType == \"quasi\" && /\\{\\s*$/.test(stream.string.slice(0, stream.pos - (backUp || 0))))\n  }\n\n  // Interface\n\n  return {\n    name: parserConfig.name,\n\n    startState: function(indentUnit) {\n      var state = {\n        tokenize: tokenBase,\n        lastType: \"sof\",\n        cc: [],\n        lexical: new JSLexical(-indentUnit, 0, \"block\", false),\n        localVars: parserConfig.localVars,\n        context: parserConfig.localVars && new Context(null, null, false),\n        indented: 0\n      };\n      if (parserConfig.globalVars && typeof parserConfig.globalVars == \"object\")\n        state.globalVars = parserConfig.globalVars;\n      return state;\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if (!state.lexical.hasOwnProperty(\"align\"))\n          state.lexical.align = false;\n        state.indented = stream.indentation();\n        findFatArrow(stream, state);\n      }\n      if (state.tokenize != tokenComment && stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (type == \"comment\") return style;\n      state.lastType = type == \"operator\" && (content == \"++\" || content == \"--\") ? \"incdec\" : type;\n      return parseJS(state, style, type, content, stream);\n    },\n\n    indent: function(state, textAfter, cx) {\n      if (state.tokenize == tokenComment || state.tokenize == tokenQuasi) return null;\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical, top\n      // Kludge to prevent 'maybelse' from blocking lexical scope pops\n      if (!/^\\s*else\\b/.test(textAfter)) for (var i = state.cc.length - 1; i >= 0; --i) {\n        var c = state.cc[i];\n        if (c == poplex) lexical = lexical.prev;\n        else if (c != maybeelse && c != popcontext) break;\n      }\n      while ((lexical.type == \"stat\" || lexical.type == \"form\") &&\n             (firstChar == \"}\" || ((top = state.cc[state.cc.length - 1]) &&\n                                   (top == maybeoperatorComma || top == maybeoperatorNoComma) &&\n                                   !/^[,\\.=+\\-*:?[\\(]/.test(textAfter))))\n        lexical = lexical.prev;\n      if (statementIndent && lexical.type == \")\" && lexical.prev.type == \"stat\")\n        lexical = lexical.prev;\n      var type = lexical.type, closing = firstChar == type;\n\n      if (type == \"vardef\") return lexical.indented + (state.lastType == \"operator\" || state.lastType == \",\" ? lexical.info.length + 1 : 0);\n      else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n      else if (type == \"form\") return lexical.indented + cx.unit;\n      else if (type == \"stat\")\n        return lexical.indented + (isContinuedStatement(state, textAfter) ? statementIndent || cx.unit : 0);\n      else if (lexical.info == \"switch\" && !closing && parserConfig.doubleIndentSwitch != false)\n        return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? cx.unit : 2 * cx.unit);\n      else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n      else return lexical.indented + (closing ? 0 : cx.unit);\n    },\n\n    languageData: {\n      indentOnInput: /^\\s*(?:case .*?:|default:|\\{|\\})$/,\n      commentTokens: jsonMode ? undefined : {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n      closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]},\n      wordChars: \"$\"\n    }\n  };\n};\n\nexport const javascript = mkJavaScript({name: \"javascript\"})\nexport const json = mkJavaScript({name: \"json\", json: true})\nexport const jsonld = mkJavaScript({name: \"json\", jsonld: true})\nexport const typescript = mkJavaScript({name: \"typescript\", typescript: true})\n"],"names":[],"version":3,"file":"javascript.be132223.js.map","sourceRoot":"/__parcel_source_root/"}