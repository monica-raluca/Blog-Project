{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/webidl.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"cj64C\", function(module, exports) {\n\n$parcel$export(module.exports, \"webIDL\", () => $8f5bf8797e035569$export$12ab6c2d7adf65a1);\nfunction $8f5bf8797e035569$var$wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\nvar $8f5bf8797e035569$var$builtinArray = [\n    \"Clamp\",\n    \"Constructor\",\n    \"EnforceRange\",\n    \"Exposed\",\n    \"ImplicitThis\",\n    \"Global\",\n    \"PrimaryGlobal\",\n    \"LegacyArrayClass\",\n    \"LegacyUnenumerableNamedProperties\",\n    \"LenientThis\",\n    \"NamedConstructor\",\n    \"NewObject\",\n    \"NoInterfaceObject\",\n    \"OverrideBuiltins\",\n    \"PutForwards\",\n    \"Replaceable\",\n    \"SameObject\",\n    \"TreatNonObjectAsNull\",\n    \"TreatNullAs\",\n    \"EmptyString\",\n    \"Unforgeable\",\n    \"Unscopeable\"\n];\nvar $8f5bf8797e035569$var$builtins = $8f5bf8797e035569$var$wordRegexp($8f5bf8797e035569$var$builtinArray);\nvar $8f5bf8797e035569$var$typeArray = [\n    \"unsigned\",\n    \"short\",\n    \"long\",\n    \"unrestricted\",\n    \"float\",\n    \"double\",\n    \"boolean\",\n    \"byte\",\n    \"octet\",\n    \"Promise\",\n    \"ArrayBuffer\",\n    \"DataView\",\n    \"Int8Array\",\n    \"Int16Array\",\n    \"Int32Array\",\n    \"Uint8Array\",\n    \"Uint16Array\",\n    \"Uint32Array\",\n    \"Uint8ClampedArray\",\n    \"Float32Array\",\n    \"Float64Array\",\n    \"ByteString\",\n    \"DOMString\",\n    \"USVString\",\n    \"sequence\",\n    \"object\",\n    \"RegExp\",\n    \"Error\",\n    \"DOMException\",\n    \"FrozenArray\",\n    \"any\",\n    \"void\" // Rest of ReturnType\n];\nvar $8f5bf8797e035569$var$types = $8f5bf8797e035569$var$wordRegexp($8f5bf8797e035569$var$typeArray);\nvar $8f5bf8797e035569$var$keywordArray = [\n    \"attribute\",\n    \"callback\",\n    \"const\",\n    \"deleter\",\n    \"dictionary\",\n    \"enum\",\n    \"getter\",\n    \"implements\",\n    \"inherit\",\n    \"interface\",\n    \"iterable\",\n    \"legacycaller\",\n    \"maplike\",\n    \"partial\",\n    \"required\",\n    \"serializer\",\n    \"setlike\",\n    \"setter\",\n    \"static\",\n    \"stringifier\",\n    \"typedef\",\n    // \"unrestricted\"\n    \"optional\",\n    \"readonly\",\n    \"or\"\n];\nvar $8f5bf8797e035569$var$keywords = $8f5bf8797e035569$var$wordRegexp($8f5bf8797e035569$var$keywordArray);\nvar $8f5bf8797e035569$var$atomArray = [\n    \"true\",\n    \"false\",\n    \"Infinity\",\n    \"NaN\",\n    \"null\" // Rest of ConstValue\n];\nvar $8f5bf8797e035569$var$atoms = $8f5bf8797e035569$var$wordRegexp($8f5bf8797e035569$var$atomArray);\nvar $8f5bf8797e035569$var$startDefArray = [\n    \"callback\",\n    \"dictionary\",\n    \"enum\",\n    \"interface\"\n];\nvar $8f5bf8797e035569$var$startDefs = $8f5bf8797e035569$var$wordRegexp($8f5bf8797e035569$var$startDefArray);\nvar $8f5bf8797e035569$var$endDefArray = [\n    \"typedef\"\n];\nvar $8f5bf8797e035569$var$endDefs = $8f5bf8797e035569$var$wordRegexp($8f5bf8797e035569$var$endDefArray);\nvar $8f5bf8797e035569$var$singleOperators = /^[:<=>?]/;\nvar $8f5bf8797e035569$var$integers = /^-?([1-9][0-9]*|0[Xx][0-9A-Fa-f]+|0[0-7]*)/;\nvar $8f5bf8797e035569$var$floats = /^-?(([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([Ee][+-]?[0-9]+)?|[0-9]+[Ee][+-]?[0-9]+)/;\nvar $8f5bf8797e035569$var$identifiers = /^_?[A-Za-z][0-9A-Z_a-z-]*/;\nvar $8f5bf8797e035569$var$identifiersEnd = /^_?[A-Za-z][0-9A-Z_a-z-]*(?=\\s*;)/;\nvar $8f5bf8797e035569$var$strings = /^\"[^\"]*\"/;\nvar $8f5bf8797e035569$var$multilineComments = /^\\/\\*.*?\\*\\//;\nvar $8f5bf8797e035569$var$multilineCommentsStart = /^\\/\\*.*/;\nvar $8f5bf8797e035569$var$multilineCommentsEnd = /^.*?\\*\\//;\nfunction $8f5bf8797e035569$var$readToken(stream, state) {\n    // whitespace\n    if (stream.eatSpace()) return null;\n    // comment\n    if (state.inComment) {\n        if (stream.match($8f5bf8797e035569$var$multilineCommentsEnd)) {\n            state.inComment = false;\n            return \"comment\";\n        }\n        stream.skipToEnd();\n        return \"comment\";\n    }\n    if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return \"comment\";\n    }\n    if (stream.match($8f5bf8797e035569$var$multilineComments)) return \"comment\";\n    if (stream.match($8f5bf8797e035569$var$multilineCommentsStart)) {\n        state.inComment = true;\n        return \"comment\";\n    }\n    // integer and float\n    if (stream.match(/^-?[0-9\\.]/, false)) {\n        if (stream.match($8f5bf8797e035569$var$integers) || stream.match($8f5bf8797e035569$var$floats)) return \"number\";\n    }\n    // string\n    if (stream.match($8f5bf8797e035569$var$strings)) return \"string\";\n    // identifier\n    if (state.startDef && stream.match($8f5bf8797e035569$var$identifiers)) return \"def\";\n    if (state.endDef && stream.match($8f5bf8797e035569$var$identifiersEnd)) {\n        state.endDef = false;\n        return \"def\";\n    }\n    if (stream.match($8f5bf8797e035569$var$keywords)) return \"keyword\";\n    if (stream.match($8f5bf8797e035569$var$types)) {\n        var lastToken = state.lastToken;\n        var nextToken = (stream.match(/^\\s*(.+?)\\b/, false) || [])[1];\n        if (lastToken === \":\" || lastToken === \"implements\" || nextToken === \"implements\" || nextToken === \"=\") // Used as identifier\n        return \"builtin\";\n        else // Used as type\n        return \"type\";\n    }\n    if (stream.match($8f5bf8797e035569$var$builtins)) return \"builtin\";\n    if (stream.match($8f5bf8797e035569$var$atoms)) return \"atom\";\n    if (stream.match($8f5bf8797e035569$var$identifiers)) return \"variable\";\n    // other\n    if (stream.match($8f5bf8797e035569$var$singleOperators)) return \"operator\";\n    // unrecognized\n    stream.next();\n    return null;\n}\nconst $8f5bf8797e035569$export$12ab6c2d7adf65a1 = {\n    name: \"webidl\",\n    startState: function() {\n        return {\n            // Is in multiline comment\n            inComment: false,\n            // Last non-whitespace, matched token\n            lastToken: \"\",\n            // Next token is a definition\n            startDef: false,\n            // Last token of the statement is a definition\n            endDef: false\n        };\n    },\n    token: function(stream, state) {\n        var style = $8f5bf8797e035569$var$readToken(stream, state);\n        if (style) {\n            var cur = stream.current();\n            state.lastToken = cur;\n            if (style === \"keyword\") {\n                state.startDef = $8f5bf8797e035569$var$startDefs.test(cur);\n                state.endDef = state.endDef || $8f5bf8797e035569$var$endDefs.test(cur);\n            } else state.startDef = false;\n        }\n        return style;\n    },\n    languageData: {\n        autocomplete: $8f5bf8797e035569$var$builtinArray.concat($8f5bf8797e035569$var$typeArray).concat($8f5bf8797e035569$var$keywordArray).concat($8f5bf8797e035569$var$atomArray)\n    }\n};\n\n});\n\n\n//# sourceMappingURL=webidl.6568c2b5.js.map\n","function wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n};\n\nvar builtinArray = [\n  \"Clamp\",\n  \"Constructor\",\n  \"EnforceRange\",\n  \"Exposed\",\n  \"ImplicitThis\",\n  \"Global\", \"PrimaryGlobal\",\n  \"LegacyArrayClass\",\n  \"LegacyUnenumerableNamedProperties\",\n  \"LenientThis\",\n  \"NamedConstructor\",\n  \"NewObject\",\n  \"NoInterfaceObject\",\n  \"OverrideBuiltins\",\n  \"PutForwards\",\n  \"Replaceable\",\n  \"SameObject\",\n  \"TreatNonObjectAsNull\",\n  \"TreatNullAs\",\n    \"EmptyString\",\n  \"Unforgeable\",\n  \"Unscopeable\"\n];\nvar builtins = wordRegexp(builtinArray);\n\nvar typeArray = [\n  \"unsigned\", \"short\", \"long\",                  // UnsignedIntegerType\n  \"unrestricted\", \"float\", \"double\",            // UnrestrictedFloatType\n  \"boolean\", \"byte\", \"octet\",                   // Rest of PrimitiveType\n  \"Promise\",                                    // PromiseType\n  \"ArrayBuffer\", \"DataView\", \"Int8Array\", \"Int16Array\", \"Int32Array\",\n  \"Uint8Array\", \"Uint16Array\", \"Uint32Array\", \"Uint8ClampedArray\",\n  \"Float32Array\", \"Float64Array\",               // BufferRelatedType\n  \"ByteString\", \"DOMString\", \"USVString\", \"sequence\", \"object\", \"RegExp\",\n  \"Error\", \"DOMException\", \"FrozenArray\",       // Rest of NonAnyType\n  \"any\",                                        // Rest of SingleType\n  \"void\"                                        // Rest of ReturnType\n];\nvar types = wordRegexp(typeArray);\n\nvar keywordArray = [\n  \"attribute\", \"callback\", \"const\", \"deleter\", \"dictionary\", \"enum\", \"getter\",\n  \"implements\", \"inherit\", \"interface\", \"iterable\", \"legacycaller\", \"maplike\",\n  \"partial\", \"required\", \"serializer\", \"setlike\", \"setter\", \"static\",\n  \"stringifier\", \"typedef\",                     // ArgumentNameKeyword except\n                                                // \"unrestricted\"\n  \"optional\", \"readonly\", \"or\"\n];\nvar keywords = wordRegexp(keywordArray);\n\nvar atomArray = [\n  \"true\", \"false\",                              // BooleanLiteral\n  \"Infinity\", \"NaN\",                            // FloatLiteral\n  \"null\"                                        // Rest of ConstValue\n];\nvar atoms = wordRegexp(atomArray);\n\nvar startDefArray = [\"callback\", \"dictionary\", \"enum\", \"interface\"];\nvar startDefs = wordRegexp(startDefArray);\n\nvar endDefArray = [\"typedef\"];\nvar endDefs = wordRegexp(endDefArray);\n\nvar singleOperators = /^[:<=>?]/;\nvar integers = /^-?([1-9][0-9]*|0[Xx][0-9A-Fa-f]+|0[0-7]*)/;\nvar floats = /^-?(([0-9]+\\.[0-9]*|[0-9]*\\.[0-9]+)([Ee][+-]?[0-9]+)?|[0-9]+[Ee][+-]?[0-9]+)/;\nvar identifiers = /^_?[A-Za-z][0-9A-Z_a-z-]*/;\nvar identifiersEnd = /^_?[A-Za-z][0-9A-Z_a-z-]*(?=\\s*;)/;\nvar strings = /^\"[^\"]*\"/;\nvar multilineComments = /^\\/\\*.*?\\*\\//;\nvar multilineCommentsStart = /^\\/\\*.*/;\nvar multilineCommentsEnd = /^.*?\\*\\//;\n\nfunction readToken(stream, state) {\n  // whitespace\n  if (stream.eatSpace()) return null;\n\n  // comment\n  if (state.inComment) {\n    if (stream.match(multilineCommentsEnd)) {\n      state.inComment = false;\n      return \"comment\";\n    }\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  if (stream.match(\"//\")) {\n    stream.skipToEnd();\n    return \"comment\";\n  }\n  if (stream.match(multilineComments)) return \"comment\";\n  if (stream.match(multilineCommentsStart)) {\n    state.inComment = true;\n    return \"comment\";\n  }\n\n  // integer and float\n  if (stream.match(/^-?[0-9\\.]/, false)) {\n    if (stream.match(integers) || stream.match(floats)) return \"number\";\n  }\n\n  // string\n  if (stream.match(strings)) return \"string\";\n\n  // identifier\n  if (state.startDef && stream.match(identifiers)) return \"def\";\n\n  if (state.endDef && stream.match(identifiersEnd)) {\n    state.endDef = false;\n    return \"def\";\n  }\n\n  if (stream.match(keywords)) return \"keyword\";\n\n  if (stream.match(types)) {\n    var lastToken = state.lastToken;\n    var nextToken = (stream.match(/^\\s*(.+?)\\b/, false) || [])[1];\n\n    if (lastToken === \":\" || lastToken === \"implements\" ||\n        nextToken === \"implements\" || nextToken === \"=\") {\n      // Used as identifier\n      return \"builtin\";\n    } else {\n      // Used as type\n      return \"type\";\n    }\n  }\n\n  if (stream.match(builtins)) return \"builtin\";\n  if (stream.match(atoms)) return \"atom\";\n  if (stream.match(identifiers)) return \"variable\";\n\n  // other\n  if (stream.match(singleOperators)) return \"operator\";\n\n  // unrecognized\n  stream.next();\n  return null;\n};\n\nexport const webIDL = {\n  name: \"webidl\",\n  startState: function() {\n    return {\n      // Is in multiline comment\n      inComment: false,\n      // Last non-whitespace, matched token\n      lastToken: \"\",\n      // Next token is a definition\n      startDef: false,\n      // Last token of the statement is a definition\n      endDef: false\n    };\n  },\n  token: function(stream, state) {\n    var style = readToken(stream, state);\n\n    if (style) {\n      var cur = stream.current();\n      state.lastToken = cur;\n      if (style === \"keyword\") {\n        state.startDef = startDefs.test(cur);\n        state.endDef = state.endDef || endDefs.test(cur);\n      } else {\n        state.startDef = false;\n      }\n    }\n\n    return style;\n  },\n\n  languageData: {\n    autocomplete: builtinArray.concat(typeArray).concat(keywordArray).concat(atomArray)\n  }\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","$8f5bf8797e035569$var$wordRegexp","words","RegExp","join","Object","defineProperty","get","$8f5bf8797e035569$export$12ab6c2d7adf65a1","set","s","enumerable","configurable","$8f5bf8797e035569$var$builtinArray","$8f5bf8797e035569$var$builtins","$8f5bf8797e035569$var$typeArray","$8f5bf8797e035569$var$types","$8f5bf8797e035569$var$keywordArray","$8f5bf8797e035569$var$keywords","$8f5bf8797e035569$var$atomArray","$8f5bf8797e035569$var$atoms","$8f5bf8797e035569$var$startDefs","$8f5bf8797e035569$var$endDefs","$8f5bf8797e035569$var$singleOperators","$8f5bf8797e035569$var$integers","$8f5bf8797e035569$var$floats","$8f5bf8797e035569$var$identifiers","$8f5bf8797e035569$var$identifiersEnd","$8f5bf8797e035569$var$strings","$8f5bf8797e035569$var$multilineComments","$8f5bf8797e035569$var$multilineCommentsStart","$8f5bf8797e035569$var$multilineCommentsEnd","name","startState","inComment","lastToken","startDef","endDef","token","stream","state","style","$8f5bf8797e035569$var$readToken","eatSpace","match","skipToEnd","nextToken","next","cur","current","test","languageData","autocomplete","concat"],"version":3,"file":"webidl.6568c2b5.js.map"}