{"mappings":"A,I,E,A,W,iB,C,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,O,C,I,I,E,I,K,E,W,C,E,a,C,C,G,I,E,E,S,E,E,S,E,E,SCKA,IAAM,EAAe,CAAC,UAAU,KAAK,OAAO,GAAI,QAAQ,GAAI,MAAM,GAAI,UAAU,GAAI,OAAO,GAAI,QAAQ,GAAI,GAAG,GAAI,IAAI,GAAI,IAAI,GAAI,IAAI,GAAI,IAAI,GAAI,IAAI,EAAE,EAClJ,EAAsB,AAAA,EAAA,QAAO,CAAE,WAAW,CAAC,CAC/C,QAAS,GACT,OAAQ,2GACR,UAAW,oDACX,KAAM,4CACN,UAAW,kFACX,QAAS,GACT,UAAW,CACT,CAAC,UAAW,GAAG,EAAE,EAAE,GAAG,GAAG,CACzB,CAAC,WAAY,EAAE,IAAI,CACnB,CAAC,WAAY,EAAE,IAAI,CACnB,CAAC,QAAS,GAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,aAAa,CACzC,CACD,aAAc,CAAC,EAAE,EAAE,EAAE,CACrB,gBAAiB,EACjB,UAAW,gvCACX,WAAY,CAAC,EAAE,CACf,SAAU,CAAC,OAAS,CAAC,EAAE,EAAE,AAAA,EACzB,YAAa,CAAC,CAAC,KAAM,EAAG,IAAK,AAAC,GAAU,CAAY,CAAC,EAAM,EAAI,EAAE,EAAE,CACnE,UAAW,CACb,GAEM,EAA4B,AAAA,EAAA,UAAS,CAAE,MAAM,CAAC,CAChD,KAAM,OACN,OAAqB,EAAO,SAAS,CAAC,CAClC,MAAO,CACU,AAAA,EAAA,cAAa,CAAE,GAAG,CAAC,CAC5B,IAAkB,AAAA,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,CAAE,QAAS,IAAK,MAAO,CAAA,CAAM,EACnE,GACa,AAAA,EAAA,YAAW,CAAE,GAAG,CAAC,CAC1B,IAAK,EAAA,UAAS,CACd,aAAA,AAAa,GAAe,CAAA,CAAE,KAAM,EAAK,IAAI,CAAG,EAAG,GAAI,EAAK,EAAE,CAAG,CAAE,CAAA,CACvE,GACa,AAAA,CAAA,EAAA,EAAA,SAAQ,AAAR,EAAU,CACnB,QAAS,AAAA,EAAA,IAAG,CAAE,OAAO,CACrB,KAAM,AAAA,EAAA,IAAG,CAAE,QAAQ,CACnB,OAAQ,AAAA,EAAA,IAAG,CAAE,MAAM,CACnB,OAAQ,AAAA,EAAA,IAAG,CAAE,MAAM,CACnB,WAAY,AAAA,EAAA,IAAG,CAAE,YAAY,CAC7B,YAAa,AAAA,EAAA,IAAG,CAAE,WAAW,CAC7B,aAAc,AAAA,EAAA,IAAG,CAAE,YAAY,CAC/B,MAAO,AAAA,EAAA,IAAG,CAAE,KAAK,AACrB,GACH,AACL,GACA,aAAc,CACV,cAAe,CAAE,KAAM,KAAM,MAAO,CAAE,KAAM,KAAM,MAAO,IAAK,CAAE,EAChE,cAAe,CAAE,SAAU,CAAC,IAAK,IAAI,AAAC,CAC1C,CACJ,GACA,SAAS,IACL,OAAO,GAAI,CAAA,EAAA,EAAA,eAAc,AAAd,EAAgB,EAC/B,C","sources":["<anon>","node_modules/@codemirror/lang-wast/dist/index.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"fampf\", function(module, exports) {\n\n$parcel$export(module.exports, \"wast\", () => $b0a92b9241cf41e5$export$7343d4c2f65e7dfa);\n\nvar $eyb1x = parcelRequire(\"eyb1x\");\n\nvar $dTUZ7 = parcelRequire(\"dTUZ7\");\n\nvar $cXi2l = parcelRequire(\"cXi2l\");\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst $b0a92b9241cf41e5$var$spec_Keyword = {\n    __proto__: null,\n    anyref: 34,\n    dataref: 34,\n    eqref: 34,\n    externref: 34,\n    i31ref: 34,\n    funcref: 34,\n    i8: 34,\n    i16: 34,\n    i32: 34,\n    i64: 34,\n    f32: 34,\n    f64: 34\n};\nconst $b0a92b9241cf41e5$var$parser = /*@__PURE__*/ (0, $cXi2l.LRParser).deserialize({\n    version: 14,\n    states: \"!^Q]QPOOOqQPO'#CbOOQO'#Cd'#CdOOQO'#Cl'#ClOOQO'#Ch'#ChQ]QPOOOOQO,58|,58|OxQPO,58|OOQO-E6f-E6fOOQO1G.h1G.h\",\n    stateData: \"!P~O_OSPOSQOS~OTPOVROXROYROZROaQO~OSUO~P]OSXO~P]O\",\n    goto: \"xaPPPPPPbPbPPPhPPPrXROPTVQTOQVPTWTVXSOPTV\",\n    nodeNames: \"\\u26A0 LineComment BlockComment Module ) ( App Identifier Type Keyword Number String\",\n    maxTerm: 17,\n    nodeProps: [\n        [\n            \"isolate\",\n            -3,\n            1,\n            2,\n            11,\n            \"\"\n        ],\n        [\n            \"openedBy\",\n            4,\n            \"(\"\n        ],\n        [\n            \"closedBy\",\n            5,\n            \")\"\n        ],\n        [\n            \"group\",\n            -6,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            \"Expression\"\n        ]\n    ],\n    skippedNodes: [\n        0,\n        1,\n        2\n    ],\n    repeatNodeCount: 1,\n    tokenData: \"0o~R^XY}YZ}]^}pq}rs!Stu#pxy'Uyz(e{|(j}!O(j!Q!R(s!R![*p!]!^.^#T#o.{~!SO_~~!VVOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j<%lO!S~!qOZ~~!tRO;'S!S;'S;=`!};=`O!S~#QWOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j;=`<%l!S<%lO!S~#mP;=`<%l!S~#siqr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~%giV~qr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~'ZPT~!]!^'^~'aTO!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~'sVOy'^yz(Yz!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~(_OQ~~(bP;=`<%l'^~(jOS~~(mQ!Q!R(s!R![*p~(xUY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){#l#m+[~)aRY~!Q![)j!g!h){#X#Y){~)oSY~!Q![)j!g!h){#R#S*j#X#Y){~*OR{|*X}!O*X!Q![*_~*[P!Q![*_~*dQY~!Q![*_#R#S*X~*mP!Q![)j~*uTY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){~+XP!Q![*p~+_R!Q![+h!c!i+h#T#Z+h~+mVY~!O!P,S!Q![+h!c!i+h!r!s-P#R#S+[#T#Z+h#d#e-P~,XTY~!Q![,h!c!i,h!r!s-P#T#Z,h#d#e-P~,mUY~!Q![,h!c!i,h!r!s-P#R#S.Q#T#Z,h#d#e-P~-ST{|-c}!O-c!Q![-o!c!i-o#T#Z-o~-fR!Q![-o!c!i-o#T#Z-o~-tSY~!Q![-o!c!i-o#R#S-c#T#Z-o~.TR!Q![,h!c!i,h#T#Z,h~.aP!]!^.d~.iSP~OY.dZ;'S.d;'S;=`.u<%lO.d~.xP;=`<%l.d~/QiX~qr.{st.{tu.{uv.{vw.{wx.{z{.{{|.{}!O.{!O!P.{!P!Q.{!Q![.{![!].{!^!_.{!_!`.{!`!a.{!a!b.{!b!c.{!c!}.{#Q#R.{#R#S.{#S#T.{#T#o.{#p#q.{#r#s.{\",\n    tokenizers: [\n        0\n    ],\n    topRules: {\n        \"Module\": [\n            0,\n            3\n        ]\n    },\n    specialized: [\n        {\n            term: 9,\n            get: (value)=>$b0a92b9241cf41e5$var$spec_Keyword[value] || -1\n        }\n    ],\n    tokenPrec: 0\n});\nconst $b0a92b9241cf41e5$export$fc83b0968ecdae3b = /*@__PURE__*/ (0, $eyb1x.LRLanguage).define({\n    name: \"wast\",\n    parser: /*@__PURE__*/ $b0a92b9241cf41e5$var$parser.configure({\n        props: [\n            /*@__PURE__*/ (0, $eyb1x.indentNodeProp).add({\n                App: /*@__PURE__*/ (0, $eyb1x.delimitedIndent)({\n                    closing: \")\",\n                    align: false\n                })\n            }),\n            /*@__PURE__*/ (0, $eyb1x.foldNodeProp).add({\n                App: (0, $eyb1x.foldInside),\n                BlockComment (tree) {\n                    return {\n                        from: tree.from + 2,\n                        to: tree.to - 2\n                    };\n                }\n            }),\n            /*@__PURE__*/ (0, $dTUZ7.styleTags)({\n                Keyword: (0, $dTUZ7.tags).keyword,\n                Type: (0, $dTUZ7.tags).typeName,\n                Number: (0, $dTUZ7.tags).number,\n                String: (0, $dTUZ7.tags).string,\n                Identifier: (0, $dTUZ7.tags).variableName,\n                LineComment: (0, $dTUZ7.tags).lineComment,\n                BlockComment: (0, $dTUZ7.tags).blockComment,\n                \"( )\": (0, $dTUZ7.tags).paren\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: {\n            line: \";;\",\n            block: {\n                open: \"(;\",\n                close: \";)\"\n            }\n        },\n        closeBrackets: {\n            brackets: [\n                \"(\",\n                '\"'\n            ]\n        }\n    }\n});\nfunction $b0a92b9241cf41e5$export$7343d4c2f65e7dfa() {\n    return new (0, $eyb1x.LanguageSupport)($b0a92b9241cf41e5$export$fc83b0968ecdae3b);\n}\n\n});\n\n\n//# sourceMappingURL=dist.9be7c0ec.js.map\n","import { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@lezer/highlight';\nimport { LRParser } from '@lezer/lr';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Keyword = {__proto__:null,anyref:34, dataref:34, eqref:34, externref:34, i31ref:34, funcref:34, i8:34, i16:34, i32:34, i64:34, f32:34, f64:34};\nconst parser = /*@__PURE__*/LRParser.deserialize({\n  version: 14,\n  states: \"!^Q]QPOOOqQPO'#CbOOQO'#Cd'#CdOOQO'#Cl'#ClOOQO'#Ch'#ChQ]QPOOOOQO,58|,58|OxQPO,58|OOQO-E6f-E6fOOQO1G.h1G.h\",\n  stateData: \"!P~O_OSPOSQOS~OTPOVROXROYROZROaQO~OSUO~P]OSXO~P]O\",\n  goto: \"xaPPPPPPbPbPPPhPPPrXROPTVQTOQVPTWTVXSOPTV\",\n  nodeNames: \"âš  LineComment BlockComment Module ) ( App Identifier Type Keyword Number String\",\n  maxTerm: 17,\n  nodeProps: [\n    [\"isolate\", -3,1,2,11,\"\"],\n    [\"openedBy\", 4,\"(\"],\n    [\"closedBy\", 5,\")\"],\n    [\"group\", -6,6,7,8,9,10,11,\"Expression\"]\n  ],\n  skippedNodes: [0,1,2],\n  repeatNodeCount: 1,\n  tokenData: \"0o~R^XY}YZ}]^}pq}rs!Stu#pxy'Uyz(e{|(j}!O(j!Q!R(s!R![*p!]!^.^#T#o.{~!SO_~~!VVOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j<%lO!S~!qOZ~~!tRO;'S!S;'S;=`!};=`O!S~#QWOr!Srs!ls#O!S#O#P!q#P;'S!S;'S;=`#j;=`<%l!S<%lO!S~#mP;=`<%l!S~#siqr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~%giV~qr%bst%btu%buv%bvw%bwx%bz{%b{|%b}!O%b!O!P%b!P!Q%b!Q![%b![!]%b!^!_%b!_!`%b!`!a%b!a!b%b!b!c%b!c!}%b#Q#R%b#R#S%b#S#T%b#T#o%b#p#q%b#r#s%b~'ZPT~!]!^'^~'aTO!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~'sVOy'^yz(Yz!]'^!]!^'p!^;'S'^;'S;=`(_<%lO'^~(_OQ~~(bP;=`<%l'^~(jOS~~(mQ!Q!R(s!R![*p~(xUY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){#l#m+[~)aRY~!Q![)j!g!h){#X#Y){~)oSY~!Q![)j!g!h){#R#S*j#X#Y){~*OR{|*X}!O*X!Q![*_~*[P!Q![*_~*dQY~!Q![*_#R#S*X~*mP!Q![)j~*uTY~!O!P)[!Q![*p!g!h){#R#S+U#X#Y){~+XP!Q![*p~+_R!Q![+h!c!i+h#T#Z+h~+mVY~!O!P,S!Q![+h!c!i+h!r!s-P#R#S+[#T#Z+h#d#e-P~,XTY~!Q![,h!c!i,h!r!s-P#T#Z,h#d#e-P~,mUY~!Q![,h!c!i,h!r!s-P#R#S.Q#T#Z,h#d#e-P~-ST{|-c}!O-c!Q![-o!c!i-o#T#Z-o~-fR!Q![-o!c!i-o#T#Z-o~-tSY~!Q![-o!c!i-o#R#S-c#T#Z-o~.TR!Q![,h!c!i,h#T#Z,h~.aP!]!^.d~.iSP~OY.dZ;'S.d;'S;=`.u<%lO.d~.xP;=`<%l.d~/QiX~qr.{st.{tu.{uv.{vw.{wx.{z{.{{|.{}!O.{!O!P.{!P!Q.{!Q![.{![!].{!^!_.{!_!`.{!`!a.{!a!b.{!b!c.{!c!}.{#Q#R.{#R#S.{#S#T.{#T#o.{#p#q.{#r#s.{\",\n  tokenizers: [0],\n  topRules: {\"Module\":[0,3]},\n  specialized: [{term: 9, get: (value) => spec_Keyword[value] || -1}],\n  tokenPrec: 0\n});\n\nconst wastLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"wast\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                App: /*@__PURE__*/delimitedIndent({ closing: \")\", align: false })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                App: foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            }),\n            /*@__PURE__*/styleTags({\n                Keyword: tags.keyword,\n                Type: tags.typeName,\n                Number: tags.number,\n                String: tags.string,\n                Identifier: tags.variableName,\n                LineComment: tags.lineComment,\n                BlockComment: tags.blockComment,\n                \"( )\": tags.paren\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { line: \";;\", block: { open: \"(;\", close: \";)\" } },\n        closeBrackets: { brackets: [\"(\", '\"'] }\n    }\n});\nfunction wast() {\n    return new LanguageSupport(wastLanguage);\n}\n\nexport { wast, wastLanguage };\n"],"names":["parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","Object","defineProperty","get","$b0a92b9241cf41e5$export$7343d4c2f65e7dfa","set","s","enumerable","configurable","$eyb1x","$dTUZ7","$cXi2l","$b0a92b9241cf41e5$var$spec_Keyword","__proto__","anyref","dataref","eqref","externref","i31ref","funcref","i8","i16","i32","i64","f32","f64","$b0a92b9241cf41e5$var$parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","specialized","term","value","tokenPrec","$b0a92b9241cf41e5$export$fc83b0968ecdae3b","LRLanguage","define","name","parser","configure","props","indentNodeProp","add","App","delimitedIndent","closing","align","foldNodeProp","foldInside","BlockComment","tree","from","to","styleTags","Keyword","tags","keyword","Type","typeName","Number","number","String","string","Identifier","variableName","LineComment","lineComment","blockComment","paren","languageData","commentTokens","line","block","open","close","closeBrackets","brackets","LanguageSupport"],"version":3,"file":"dist.9be7c0ec.js.map"}