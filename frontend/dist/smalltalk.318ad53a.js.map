{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/smalltalk.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"5HKUd\", function(module, exports) {\n\n$parcel$export(module.exports, \"smalltalk\", () => $42755a6832c22505$export$996e8256cd7a0f08);\nvar $42755a6832c22505$var$specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\nvar $42755a6832c22505$var$keywords = /true|false|nil|self|super|thisContext/;\nvar $42755a6832c22505$var$Context = function(tokenizer, parent) {\n    this.next = tokenizer;\n    this.parent = parent;\n};\nvar $42755a6832c22505$var$Token = function(name, context, eos) {\n    this.name = name;\n    this.context = context;\n    this.eos = eos;\n};\nvar $42755a6832c22505$var$State = function() {\n    this.context = new $42755a6832c22505$var$Context($42755a6832c22505$var$next, null);\n    this.expectVariable = true;\n    this.indentation = 0;\n    this.userIndentationDelta = 0;\n};\n$42755a6832c22505$var$State.prototype.userIndent = function(indentation, indentUnit) {\n    this.userIndentationDelta = indentation > 0 ? indentation / indentUnit - this.indentation : 0;\n};\nvar $42755a6832c22505$var$next = function(stream, context, state) {\n    var token = new $42755a6832c22505$var$Token(null, context, false);\n    var aChar = stream.next();\n    if (aChar === '\"') token = $42755a6832c22505$var$nextComment(stream, new $42755a6832c22505$var$Context($42755a6832c22505$var$nextComment, context));\n    else if (aChar === '\\'') token = $42755a6832c22505$var$nextString(stream, new $42755a6832c22505$var$Context($42755a6832c22505$var$nextString, context));\n    else if (aChar === '#') {\n        if (stream.peek() === '\\'') {\n            stream.next();\n            token = $42755a6832c22505$var$nextSymbol(stream, new $42755a6832c22505$var$Context($42755a6832c22505$var$nextSymbol, context));\n        } else if (stream.eatWhile(/[^\\s.{}\\[\\]()]/)) token.name = 'string.special';\n        else token.name = 'meta';\n    } else if (aChar === '$') {\n        if (stream.next() === '<') {\n            stream.eatWhile(/[^\\s>]/);\n            stream.next();\n        }\n        token.name = 'string.special';\n    } else if (aChar === '|' && state.expectVariable) token.context = new $42755a6832c22505$var$Context($42755a6832c22505$var$nextTemporaries, context);\n    else if (/[\\[\\]{}()]/.test(aChar)) {\n        token.name = 'bracket';\n        token.eos = /[\\[{(]/.test(aChar);\n        if (aChar === '[') state.indentation++;\n        else if (aChar === ']') state.indentation = Math.max(0, state.indentation - 1);\n    } else if ($42755a6832c22505$var$specialChars.test(aChar)) {\n        stream.eatWhile($42755a6832c22505$var$specialChars);\n        token.name = 'operator';\n        token.eos = aChar !== ';'; // ; cascaded message expression\n    } else if (/\\d/.test(aChar)) {\n        stream.eatWhile(/[\\w\\d]/);\n        token.name = 'number';\n    } else if (/[\\w_]/.test(aChar)) {\n        stream.eatWhile(/[\\w\\d_]/);\n        token.name = state.expectVariable ? $42755a6832c22505$var$keywords.test(stream.current()) ? 'keyword' : 'variable' : null;\n    } else token.eos = state.expectVariable;\n    return token;\n};\nvar $42755a6832c22505$var$nextComment = function(stream, context) {\n    stream.eatWhile(/[^\"]/);\n    return new $42755a6832c22505$var$Token('comment', stream.eat('\"') ? context.parent : context, true);\n};\nvar $42755a6832c22505$var$nextString = function(stream, context) {\n    stream.eatWhile(/[^']/);\n    return new $42755a6832c22505$var$Token('string', stream.eat('\\'') ? context.parent : context, false);\n};\nvar $42755a6832c22505$var$nextSymbol = function(stream, context) {\n    stream.eatWhile(/[^']/);\n    return new $42755a6832c22505$var$Token('string.special', stream.eat('\\'') ? context.parent : context, false);\n};\nvar $42755a6832c22505$var$nextTemporaries = function(stream, context) {\n    var token = new $42755a6832c22505$var$Token(null, context, false);\n    var aChar = stream.next();\n    if (aChar === '|') {\n        token.context = context.parent;\n        token.eos = true;\n    } else {\n        stream.eatWhile(/[^|]/);\n        token.name = 'variable';\n    }\n    return token;\n};\nconst $42755a6832c22505$export$996e8256cd7a0f08 = {\n    name: \"smalltalk\",\n    startState: function() {\n        return new $42755a6832c22505$var$State;\n    },\n    token: function(stream, state) {\n        state.userIndent(stream.indentation(), stream.indentUnit);\n        if (stream.eatSpace()) return null;\n        var token = state.context.next(stream, state.context, state);\n        state.context = token.context;\n        state.expectVariable = token.eos;\n        return token.name;\n    },\n    blankLine: function(state, indentUnit) {\n        state.userIndent(0, indentUnit);\n    },\n    indent: function(state, textAfter, cx) {\n        var i = state.context.next === $42755a6832c22505$var$next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n        return (state.indentation + i) * cx.unit;\n    },\n    languageData: {\n        indentOnInput: /^\\s*\\]$/\n    }\n};\n\n});\n\n\n//# sourceMappingURL=smalltalk.318ad53a.js.map\n","var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\nvar keywords = /true|false|nil|self|super|thisContext/;\n\nvar Context = function(tokenizer, parent) {\n  this.next = tokenizer;\n  this.parent = parent;\n};\n\nvar Token = function(name, context, eos) {\n  this.name = name;\n  this.context = context;\n  this.eos = eos;\n};\n\nvar State = function() {\n  this.context = new Context(next, null);\n  this.expectVariable = true;\n  this.indentation = 0;\n  this.userIndentationDelta = 0;\n};\n\nState.prototype.userIndent = function(indentation, indentUnit) {\n  this.userIndentationDelta = indentation > 0 ? (indentation / indentUnit - this.indentation) : 0;\n};\n\nvar next = function(stream, context, state) {\n  var token = new Token(null, context, false);\n  var aChar = stream.next();\n\n  if (aChar === '\"') {\n    token = nextComment(stream, new Context(nextComment, context));\n\n  } else if (aChar === '\\'') {\n    token = nextString(stream, new Context(nextString, context));\n\n  } else if (aChar === '#') {\n    if (stream.peek() === '\\'') {\n      stream.next();\n      token = nextSymbol(stream, new Context(nextSymbol, context));\n    } else {\n      if (stream.eatWhile(/[^\\s.{}\\[\\]()]/))\n        token.name = 'string.special';\n      else\n        token.name = 'meta';\n    }\n\n  } else if (aChar === '$') {\n    if (stream.next() === '<') {\n      stream.eatWhile(/[^\\s>]/);\n      stream.next();\n    }\n    token.name = 'string.special';\n\n  } else if (aChar === '|' && state.expectVariable) {\n    token.context = new Context(nextTemporaries, context);\n\n  } else if (/[\\[\\]{}()]/.test(aChar)) {\n    token.name = 'bracket';\n    token.eos = /[\\[{(]/.test(aChar);\n\n    if (aChar === '[') {\n      state.indentation++;\n    } else if (aChar === ']') {\n      state.indentation = Math.max(0, state.indentation - 1);\n    }\n\n  } else if (specialChars.test(aChar)) {\n    stream.eatWhile(specialChars);\n    token.name = 'operator';\n    token.eos = aChar !== ';'; // ; cascaded message expression\n\n  } else if (/\\d/.test(aChar)) {\n    stream.eatWhile(/[\\w\\d]/);\n    token.name = 'number';\n\n  } else if (/[\\w_]/.test(aChar)) {\n    stream.eatWhile(/[\\w\\d_]/);\n    token.name = state.expectVariable ? (keywords.test(stream.current()) ? 'keyword' : 'variable') : null;\n\n  } else {\n    token.eos = state.expectVariable;\n  }\n\n  return token;\n};\n\nvar nextComment = function(stream, context) {\n  stream.eatWhile(/[^\"]/);\n  return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n};\n\nvar nextString = function(stream, context) {\n  stream.eatWhile(/[^']/);\n  return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n};\n\nvar nextSymbol = function(stream, context) {\n  stream.eatWhile(/[^']/);\n  return new Token('string.special', stream.eat('\\'') ? context.parent : context, false);\n};\n\nvar nextTemporaries = function(stream, context) {\n  var token = new Token(null, context, false);\n  var aChar = stream.next();\n\n  if (aChar === '|') {\n    token.context = context.parent;\n    token.eos = true;\n\n  } else {\n    stream.eatWhile(/[^|]/);\n    token.name = 'variable';\n  }\n\n  return token;\n};\n\nexport const smalltalk = {\n  name: \"smalltalk\",\n\n  startState: function() {\n    return new State;\n  },\n\n  token: function(stream, state) {\n    state.userIndent(stream.indentation(), stream.indentUnit);\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var token = state.context.next(stream, state.context, state);\n    state.context = token.context;\n    state.expectVariable = token.eos;\n\n    return token.name;\n  },\n\n  blankLine: function(state, indentUnit) {\n    state.userIndent(0, indentUnit);\n  },\n\n  indent: function(state, textAfter, cx) {\n    var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n    return (state.indentation + i) * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*\\]$/\n  }\n}\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$42755a6832c22505$export$996e8256cd7a0f08","set","s","enumerable","configurable","$42755a6832c22505$var$specialChars","$42755a6832c22505$var$keywords","$42755a6832c22505$var$Context","tokenizer","parent","next","$42755a6832c22505$var$Token","name","context","eos","$42755a6832c22505$var$State","$42755a6832c22505$var$next","expectVariable","indentation","userIndentationDelta","prototype","userIndent","indentUnit","stream","state","token","aChar","$42755a6832c22505$var$nextComment","$42755a6832c22505$var$nextString","peek","$42755a6832c22505$var$nextSymbol","eatWhile","$42755a6832c22505$var$nextTemporaries","test","Math","max","current","eat","startState","eatSpace","blankLine","indent","textAfter","cx","i","charAt","unit","languageData","indentOnInput"],"version":3,"file":"smalltalk.318ad53a.js.map"}