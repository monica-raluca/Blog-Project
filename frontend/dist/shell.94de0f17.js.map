{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/shell.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"i8PLo\", function(module, exports) {\n\n$parcel$export(module.exports, \"shell\", () => $d3512076fefbc4b6$export$44fee94982b0184);\nvar $d3512076fefbc4b6$var$words = {};\nfunction $d3512076fefbc4b6$var$define(style, dict) {\n    for(var i = 0; i < dict.length; i++)$d3512076fefbc4b6$var$words[dict[i]] = style;\n}\nvar $d3512076fefbc4b6$var$commonAtoms = [\n    \"true\",\n    \"false\"\n];\nvar $d3512076fefbc4b6$var$commonKeywords = [\n    \"if\",\n    \"then\",\n    \"do\",\n    \"else\",\n    \"elif\",\n    \"while\",\n    \"until\",\n    \"for\",\n    \"in\",\n    \"esac\",\n    \"fi\",\n    \"fin\",\n    \"fil\",\n    \"done\",\n    \"exit\",\n    \"set\",\n    \"unset\",\n    \"export\",\n    \"function\"\n];\nvar $d3512076fefbc4b6$var$commonCommands = [\n    \"ab\",\n    \"awk\",\n    \"bash\",\n    \"beep\",\n    \"cat\",\n    \"cc\",\n    \"cd\",\n    \"chown\",\n    \"chmod\",\n    \"chroot\",\n    \"clear\",\n    \"cp\",\n    \"curl\",\n    \"cut\",\n    \"diff\",\n    \"echo\",\n    \"find\",\n    \"gawk\",\n    \"gcc\",\n    \"get\",\n    \"git\",\n    \"grep\",\n    \"hg\",\n    \"kill\",\n    \"killall\",\n    \"ln\",\n    \"ls\",\n    \"make\",\n    \"mkdir\",\n    \"openssl\",\n    \"mv\",\n    \"nc\",\n    \"nl\",\n    \"node\",\n    \"npm\",\n    \"ping\",\n    \"ps\",\n    \"restart\",\n    \"rm\",\n    \"rmdir\",\n    \"sed\",\n    \"service\",\n    \"sh\",\n    \"shopt\",\n    \"shred\",\n    \"source\",\n    \"sort\",\n    \"sleep\",\n    \"ssh\",\n    \"start\",\n    \"stop\",\n    \"su\",\n    \"sudo\",\n    \"svn\",\n    \"tee\",\n    \"telnet\",\n    \"top\",\n    \"touch\",\n    \"vi\",\n    \"vim\",\n    \"wall\",\n    \"wc\",\n    \"wget\",\n    \"who\",\n    \"write\",\n    \"yes\",\n    \"zsh\"\n];\n$d3512076fefbc4b6$var$define('atom', $d3512076fefbc4b6$var$commonAtoms);\n$d3512076fefbc4b6$var$define('keyword', $d3512076fefbc4b6$var$commonKeywords);\n$d3512076fefbc4b6$var$define('builtin', $d3512076fefbc4b6$var$commonCommands);\nfunction $d3512076fefbc4b6$var$tokenBase(stream, state) {\n    if (stream.eatSpace()) return null;\n    var sol = stream.sol();\n    var ch = stream.next();\n    if (ch === '\\\\') {\n        stream.next();\n        return null;\n    }\n    if (ch === '\\'' || ch === '\"' || ch === '`') {\n        state.tokens.unshift($d3512076fefbc4b6$var$tokenString(ch, ch === \"`\" ? \"quote\" : \"string\"));\n        return $d3512076fefbc4b6$var$tokenize(stream, state);\n    }\n    if (ch === '#') {\n        if (sol && stream.eat('!')) {\n            stream.skipToEnd();\n            return 'meta'; // 'comment'?\n        }\n        stream.skipToEnd();\n        return 'comment';\n    }\n    if (ch === '$') {\n        state.tokens.unshift($d3512076fefbc4b6$var$tokenDollar);\n        return $d3512076fefbc4b6$var$tokenize(stream, state);\n    }\n    if (ch === '+' || ch === '=') return 'operator';\n    if (ch === '-') {\n        stream.eat('-');\n        stream.eatWhile(/\\w/);\n        return 'attribute';\n    }\n    if (ch == \"<\") {\n        if (stream.match(\"<<\")) return \"operator\";\n        var heredoc = stream.match(/^<-?\\s*(?:['\"]([^'\"]*)['\"]|([^'\"\\s]*))/);\n        if (heredoc) {\n            state.tokens.unshift($d3512076fefbc4b6$var$tokenHeredoc(heredoc[1] || heredoc[2]));\n            return 'string.special';\n        }\n    }\n    if (/\\d/.test(ch)) {\n        stream.eatWhile(/\\d/);\n        if (stream.eol() || !/\\w/.test(stream.peek())) return 'number';\n    }\n    stream.eatWhile(/[\\w-]/);\n    var cur = stream.current();\n    if (stream.peek() === '=' && /\\w+/.test(cur)) return 'def';\n    return $d3512076fefbc4b6$var$words.hasOwnProperty(cur) ? $d3512076fefbc4b6$var$words[cur] : null;\n}\nfunction $d3512076fefbc4b6$var$tokenString(quote, style) {\n    var close = quote == \"(\" ? \")\" : quote == \"{\" ? \"}\" : quote;\n    return function(stream, state) {\n        var next, escaped = false;\n        while((next = stream.next()) != null){\n            if (next === close && !escaped) {\n                state.tokens.shift();\n                break;\n            } else if (next === '$' && !escaped && quote !== \"'\" && stream.peek() != close) {\n                escaped = true;\n                stream.backUp(1);\n                state.tokens.unshift($d3512076fefbc4b6$var$tokenDollar);\n                break;\n            } else if (!escaped && quote !== close && next === quote) {\n                state.tokens.unshift($d3512076fefbc4b6$var$tokenString(quote, style));\n                return $d3512076fefbc4b6$var$tokenize(stream, state);\n            } else if (!escaped && /['\"]/.test(next) && !/['\"]/.test(quote)) {\n                state.tokens.unshift($d3512076fefbc4b6$var$tokenStringStart(next, \"string\"));\n                stream.backUp(1);\n                break;\n            }\n            escaped = !escaped && next === '\\\\';\n        }\n        return style;\n    };\n}\nfunction $d3512076fefbc4b6$var$tokenStringStart(quote, style) {\n    return function(stream, state) {\n        state.tokens[0] = $d3512076fefbc4b6$var$tokenString(quote, style);\n        stream.next();\n        return $d3512076fefbc4b6$var$tokenize(stream, state);\n    };\n}\nvar $d3512076fefbc4b6$var$tokenDollar = function(stream, state) {\n    if (state.tokens.length > 1) stream.eat('$');\n    var ch = stream.next();\n    if (/['\"({]/.test(ch)) {\n        state.tokens[0] = $d3512076fefbc4b6$var$tokenString(ch, ch == \"(\" ? \"quote\" : ch == \"{\" ? \"def\" : \"string\");\n        return $d3512076fefbc4b6$var$tokenize(stream, state);\n    }\n    if (!/\\d/.test(ch)) stream.eatWhile(/\\w/);\n    state.tokens.shift();\n    return 'def';\n};\nfunction $d3512076fefbc4b6$var$tokenHeredoc(delim) {\n    return function(stream, state) {\n        if (stream.sol() && stream.string == delim) state.tokens.shift();\n        stream.skipToEnd();\n        return \"string.special\";\n    };\n}\nfunction $d3512076fefbc4b6$var$tokenize(stream, state) {\n    return (state.tokens[0] || $d3512076fefbc4b6$var$tokenBase)(stream, state);\n}\nconst $d3512076fefbc4b6$export$44fee94982b0184 = {\n    name: \"shell\",\n    startState: function() {\n        return {\n            tokens: []\n        };\n    },\n    token: function(stream, state) {\n        return $d3512076fefbc4b6$var$tokenize(stream, state);\n    },\n    languageData: {\n        autocomplete: $d3512076fefbc4b6$var$commonAtoms.concat($d3512076fefbc4b6$var$commonKeywords, $d3512076fefbc4b6$var$commonCommands),\n        closeBrackets: {\n            brackets: [\n                \"(\",\n                \"[\",\n                \"{\",\n                \"'\",\n                '\"',\n                \"`\"\n            ]\n        },\n        commentTokens: {\n            line: \"#\"\n        }\n    }\n};\n\n});\n\n\n//# sourceMappingURL=shell.94de0f17.js.map\n","var words = {};\nfunction define(style, dict) {\n  for(var i = 0; i < dict.length; i++) {\n    words[dict[i]] = style;\n  }\n};\n\nvar commonAtoms = [\"true\", \"false\"];\nvar commonKeywords = [\"if\", \"then\", \"do\", \"else\", \"elif\", \"while\", \"until\", \"for\", \"in\", \"esac\", \"fi\",\n                      \"fin\", \"fil\", \"done\", \"exit\", \"set\", \"unset\", \"export\", \"function\"];\nvar commonCommands = [\"ab\", \"awk\", \"bash\", \"beep\", \"cat\", \"cc\", \"cd\", \"chown\", \"chmod\", \"chroot\", \"clear\",\n                      \"cp\", \"curl\", \"cut\", \"diff\", \"echo\", \"find\", \"gawk\", \"gcc\", \"get\", \"git\", \"grep\", \"hg\", \"kill\", \"killall\",\n                      \"ln\", \"ls\", \"make\", \"mkdir\", \"openssl\", \"mv\", \"nc\", \"nl\", \"node\", \"npm\", \"ping\", \"ps\", \"restart\", \"rm\",\n                      \"rmdir\", \"sed\", \"service\", \"sh\", \"shopt\", \"shred\", \"source\", \"sort\", \"sleep\", \"ssh\", \"start\", \"stop\",\n                      \"su\", \"sudo\", \"svn\", \"tee\", \"telnet\", \"top\", \"touch\", \"vi\", \"vim\", \"wall\", \"wc\", \"wget\", \"who\", \"write\",\n                      \"yes\", \"zsh\"];\n\ndefine('atom', commonAtoms);\ndefine('keyword', commonKeywords);\ndefine('builtin', commonCommands);\n\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) return null;\n\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  if (ch === '\\\\') {\n    stream.next();\n    return null;\n  }\n  if (ch === '\\'' || ch === '\"' || ch === '`') {\n    state.tokens.unshift(tokenString(ch, ch === \"`\" ? \"quote\" : \"string\"));\n    return tokenize(stream, state);\n  }\n  if (ch === '#') {\n    if (sol && stream.eat('!')) {\n      stream.skipToEnd();\n      return 'meta'; // 'comment'?\n    }\n    stream.skipToEnd();\n    return 'comment';\n  }\n  if (ch === '$') {\n    state.tokens.unshift(tokenDollar);\n    return tokenize(stream, state);\n  }\n  if (ch === '+' || ch === '=') {\n    return 'operator';\n  }\n  if (ch === '-') {\n    stream.eat('-');\n    stream.eatWhile(/\\w/);\n    return 'attribute';\n  }\n  if (ch == \"<\") {\n    if (stream.match(\"<<\")) return \"operator\"\n    var heredoc = stream.match(/^<-?\\s*(?:['\"]([^'\"]*)['\"]|([^'\"\\s]*))/)\n    if (heredoc) {\n      state.tokens.unshift(tokenHeredoc(heredoc[1] || heredoc[2]))\n      return 'string.special'\n    }\n  }\n  if (/\\d/.test(ch)) {\n    stream.eatWhile(/\\d/);\n    if(stream.eol() || !/\\w/.test(stream.peek())) {\n      return 'number';\n    }\n  }\n  stream.eatWhile(/[\\w-]/);\n  var cur = stream.current();\n  if (stream.peek() === '=' && /\\w+/.test(cur)) return 'def';\n  return words.hasOwnProperty(cur) ? words[cur] : null;\n}\n\nfunction tokenString(quote, style) {\n  var close = quote == \"(\" ? \")\" : quote == \"{\" ? \"}\" : quote\n  return function(stream, state) {\n    var next, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === close && !escaped) {\n        state.tokens.shift();\n        break;\n      } else if (next === '$' && !escaped && quote !== \"'\" && stream.peek() != close) {\n        escaped = true;\n        stream.backUp(1);\n        state.tokens.unshift(tokenDollar);\n        break;\n      } else if (!escaped && quote !== close && next === quote) {\n        state.tokens.unshift(tokenString(quote, style))\n        return tokenize(stream, state)\n      } else if (!escaped && /['\"]/.test(next) && !/['\"]/.test(quote)) {\n        state.tokens.unshift(tokenStringStart(next, \"string\"));\n        stream.backUp(1);\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    return style;\n  };\n};\n\nfunction tokenStringStart(quote, style) {\n  return function(stream, state) {\n    state.tokens[0] = tokenString(quote, style)\n    stream.next()\n    return tokenize(stream, state)\n  }\n}\n\nvar tokenDollar = function(stream, state) {\n  if (state.tokens.length > 1) stream.eat('$');\n  var ch = stream.next()\n  if (/['\"({]/.test(ch)) {\n    state.tokens[0] = tokenString(ch, ch == \"(\" ? \"quote\" : ch == \"{\" ? \"def\" : \"string\");\n    return tokenize(stream, state);\n  }\n  if (!/\\d/.test(ch)) stream.eatWhile(/\\w/);\n  state.tokens.shift();\n  return 'def';\n};\n\nfunction tokenHeredoc(delim) {\n  return function(stream, state) {\n    if (stream.sol() && stream.string == delim) state.tokens.shift()\n    stream.skipToEnd()\n    return \"string.special\"\n  }\n}\n\nfunction tokenize(stream, state) {\n  return (state.tokens[0] || tokenBase) (stream, state);\n};\n\nexport const shell = {\n  name: \"shell\",\n  startState: function() {return {tokens:[]};},\n  token: function(stream, state) {\n    return tokenize(stream, state);\n  },\n  languageData: {\n    autocomplete: commonAtoms.concat(commonKeywords, commonCommands),\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]},\n    commentTokens: {line: \"#\"}\n  }\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$d3512076fefbc4b6$export$44fee94982b0184","set","s","enumerable","configurable","$d3512076fefbc4b6$var$words","$d3512076fefbc4b6$var$define","style","dict","i","length","$d3512076fefbc4b6$var$commonAtoms","$d3512076fefbc4b6$var$commonKeywords","$d3512076fefbc4b6$var$commonCommands","$d3512076fefbc4b6$var$tokenString","quote","close","stream","state","next","escaped","peek","tokens","unshift","$d3512076fefbc4b6$var$tokenize","test","$d3512076fefbc4b6$var$tokenStringStart","backUp","$d3512076fefbc4b6$var$tokenDollar","shift","eat","ch","eatWhile","eatSpace","sol","skipToEnd","match","delim","heredoc","string","eol","cur","current","hasOwnProperty","name","startState","token","languageData","autocomplete","concat","closeBrackets","brackets","commentTokens","line"],"version":3,"file":"shell.94de0f17.js.map"}