{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/nginx.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"hKvsM\", function(module, exports) {\n\n$parcel$export(module.exports, \"nginx\", () => $cebf237c17a1d868$export$1f1c288d0f2dbc4c);\nfunction $cebf237c17a1d868$var$words(str) {\n    var obj = {}, words = str.split(\" \");\n    for(var i = 0; i < words.length; ++i)obj[words[i]] = true;\n    return obj;\n}\nvar $cebf237c17a1d868$var$keywords = $cebf237c17a1d868$var$words(/* ngxDirectiveControl */ \"break return rewrite set accept_mutex accept_mutex_delay access_log add_after_body add_before_body add_header addition_types aio alias allow ancient_browser ancient_browser_value auth_basic auth_basic_user_file auth_http auth_http_header auth_http_timeout autoindex autoindex_exact_size autoindex_localtime charset charset_types client_body_buffer_size client_body_in_file_only client_body_in_single_buffer client_body_temp_path client_body_timeout client_header_buffer_size client_header_timeout client_max_body_size connection_pool_size create_full_put_path daemon dav_access dav_methods debug_connection debug_points default_type degradation degrade deny devpoll_changes devpoll_events directio directio_alignment empty_gif env epoll_events error_log eventport_events expires fastcgi_bind fastcgi_buffer_size fastcgi_buffers fastcgi_busy_buffers_size fastcgi_cache fastcgi_cache_key fastcgi_cache_methods fastcgi_cache_min_uses fastcgi_cache_path fastcgi_cache_use_stale fastcgi_cache_valid fastcgi_catch_stderr fastcgi_connect_timeout fastcgi_hide_header fastcgi_ignore_client_abort fastcgi_ignore_headers fastcgi_index fastcgi_intercept_errors fastcgi_max_temp_file_size fastcgi_next_upstream fastcgi_param fastcgi_pass_header fastcgi_pass_request_body fastcgi_pass_request_headers fastcgi_read_timeout fastcgi_send_lowat fastcgi_send_timeout fastcgi_split_path_info fastcgi_store fastcgi_store_access fastcgi_temp_file_write_size fastcgi_temp_path fastcgi_upstream_fail_timeout fastcgi_upstream_max_fails flv geoip_city geoip_country google_perftools_profiles gzip gzip_buffers gzip_comp_level gzip_disable gzip_hash gzip_http_version gzip_min_length gzip_no_buffer gzip_proxied gzip_static gzip_types gzip_vary gzip_window if_modified_since ignore_invalid_headers image_filter image_filter_buffer image_filter_jpeg_quality image_filter_transparency imap_auth imap_capabilities imap_client_buffer index ip_hash keepalive_requests keepalive_timeout kqueue_changes kqueue_events large_client_header_buffers limit_conn limit_conn_log_level limit_rate limit_rate_after limit_req limit_req_log_level limit_req_zone limit_zone lingering_time lingering_timeout lock_file log_format log_not_found log_subrequest map_hash_bucket_size map_hash_max_size master_process memcached_bind memcached_buffer_size memcached_connect_timeout memcached_next_upstream memcached_read_timeout memcached_send_timeout memcached_upstream_fail_timeout memcached_upstream_max_fails merge_slashes min_delete_depth modern_browser modern_browser_value msie_padding msie_refresh multi_accept open_file_cache open_file_cache_errors open_file_cache_events open_file_cache_min_uses open_file_cache_valid open_log_file_cache output_buffers override_charset perl perl_modules perl_require perl_set pid pop3_auth pop3_capabilities port_in_redirect postpone_gzipping postpone_output protocol proxy proxy_bind proxy_buffer proxy_buffer_size proxy_buffering proxy_buffers proxy_busy_buffers_size proxy_cache proxy_cache_key proxy_cache_methods proxy_cache_min_uses proxy_cache_path proxy_cache_use_stale proxy_cache_valid proxy_connect_timeout proxy_headers_hash_bucket_size proxy_headers_hash_max_size proxy_hide_header proxy_ignore_client_abort proxy_ignore_headers proxy_intercept_errors proxy_max_temp_file_size proxy_method proxy_next_upstream proxy_pass_error_message proxy_pass_header proxy_pass_request_body proxy_pass_request_headers proxy_read_timeout proxy_redirect proxy_send_lowat proxy_send_timeout proxy_set_body proxy_set_header proxy_ssl_session_reuse proxy_store proxy_store_access proxy_temp_file_write_size proxy_temp_path proxy_timeout proxy_upstream_fail_timeout proxy_upstream_max_fails random_index read_ahead real_ip_header recursive_error_pages request_pool_size reset_timedout_connection resolver resolver_timeout rewrite_log rtsig_overflow_events rtsig_overflow_test rtsig_overflow_threshold rtsig_signo satisfy secure_link_secret send_lowat send_timeout sendfile sendfile_max_chunk server_name_in_redirect server_names_hash_bucket_size server_names_hash_max_size server_tokens set_real_ip_from smtp_auth smtp_capabilities smtp_client_buffer smtp_greeting_delay so_keepalive source_charset ssi ssi_ignore_recycled_buffers ssi_min_file_chunk ssi_silent_errors ssi_types ssi_value_length ssl ssl_certificate ssl_certificate_key ssl_ciphers ssl_client_certificate ssl_crl ssl_dhparam ssl_engine ssl_prefer_server_ciphers ssl_protocols ssl_session_cache ssl_session_timeout ssl_verify_client ssl_verify_depth starttls stub_status sub_filter sub_filter_once sub_filter_types tcp_nodelay tcp_nopush thread_stack_size timeout timer_resolution types_hash_bucket_size types_hash_max_size underscores_in_headers uninitialized_variable_warn use user userid userid_domain userid_expires userid_mark userid_name userid_p3p userid_path userid_service valid_referers variables_hash_bucket_size variables_hash_max_size worker_connections worker_cpu_affinity worker_priority worker_processes worker_rlimit_core worker_rlimit_nofile worker_rlimit_sigpending worker_threads working_directory xclient xml_entities xslt_stylesheet xslt_typesdrew@li229-23\");\nvar $cebf237c17a1d868$var$keywords_block = $cebf237c17a1d868$var$words(/* ngxDirectiveBlock */ \"http mail events server types location upstream charset_map limit_except if geo map\");\nvar $cebf237c17a1d868$var$keywords_important = $cebf237c17a1d868$var$words(/* ngxDirectiveImportant */ \"include root server server_name listen internal proxy_pass memcached_pass fastcgi_pass try_files\");\nvar $cebf237c17a1d868$var$type;\nfunction $cebf237c17a1d868$var$ret(style, tp) {\n    $cebf237c17a1d868$var$type = tp;\n    return style;\n}\nfunction $cebf237c17a1d868$var$tokenBase(stream, state) {\n    stream.eatWhile(/[\\w\\$_]/);\n    var cur = stream.current();\n    if ($cebf237c17a1d868$var$keywords.propertyIsEnumerable(cur)) return \"keyword\";\n    else if ($cebf237c17a1d868$var$keywords_block.propertyIsEnumerable(cur)) return \"controlKeyword\";\n    else if ($cebf237c17a1d868$var$keywords_important.propertyIsEnumerable(cur)) return \"controlKeyword\";\n    /**/ var ch = stream.next();\n    if (ch == \"@\") {\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        return $cebf237c17a1d868$var$ret(\"meta\", stream.current());\n    } else if (ch == \"/\" && stream.eat(\"*\")) {\n        state.tokenize = $cebf237c17a1d868$var$tokenCComment;\n        return $cebf237c17a1d868$var$tokenCComment(stream, state);\n    } else if (ch == \"<\" && stream.eat(\"!\")) {\n        state.tokenize = $cebf237c17a1d868$var$tokenSGMLComment;\n        return $cebf237c17a1d868$var$tokenSGMLComment(stream, state);\n    } else if (ch == \"=\") $cebf237c17a1d868$var$ret(null, \"compare\");\n    else if ((ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) return $cebf237c17a1d868$var$ret(null, \"compare\");\n    else if (ch == \"\\\"\" || ch == \"'\") {\n        state.tokenize = $cebf237c17a1d868$var$tokenString(ch);\n        return state.tokenize(stream, state);\n    } else if (ch == \"#\") {\n        stream.skipToEnd();\n        return $cebf237c17a1d868$var$ret(\"comment\", \"comment\");\n    } else if (ch == \"!\") {\n        stream.match(/^\\s*\\w*/);\n        return $cebf237c17a1d868$var$ret(\"keyword\", \"important\");\n    } else if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w.%]/);\n        return $cebf237c17a1d868$var$ret(\"number\", \"unit\");\n    } else if (/[,.+>*\\/]/.test(ch)) return $cebf237c17a1d868$var$ret(null, \"select-op\");\n    else if (/[;{}:\\[\\]]/.test(ch)) return $cebf237c17a1d868$var$ret(null, ch);\n    else {\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        return $cebf237c17a1d868$var$ret(\"variable\", \"variable\");\n    }\n}\nfunction $cebf237c17a1d868$var$tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while((ch = stream.next()) != null){\n        if (maybeEnd && ch == \"/\") {\n            state.tokenize = $cebf237c17a1d868$var$tokenBase;\n            break;\n        }\n        maybeEnd = ch == \"*\";\n    }\n    return $cebf237c17a1d868$var$ret(\"comment\", \"comment\");\n}\nfunction $cebf237c17a1d868$var$tokenSGMLComment(stream, state) {\n    var dashes = 0, ch;\n    while((ch = stream.next()) != null){\n        if (dashes >= 2 && ch == \">\") {\n            state.tokenize = $cebf237c17a1d868$var$tokenBase;\n            break;\n        }\n        dashes = ch == \"-\" ? dashes + 1 : 0;\n    }\n    return $cebf237c17a1d868$var$ret(\"comment\", \"comment\");\n}\nfunction $cebf237c17a1d868$var$tokenString(quote) {\n    return function(stream, state) {\n        var escaped = false, ch;\n        while((ch = stream.next()) != null){\n            if (ch == quote && !escaped) break;\n            escaped = !escaped && ch == \"\\\\\";\n        }\n        if (!escaped) state.tokenize = $cebf237c17a1d868$var$tokenBase;\n        return $cebf237c17a1d868$var$ret(\"string\", \"string\");\n    };\n}\nconst $cebf237c17a1d868$export$1f1c288d0f2dbc4c = {\n    name: \"nginx\",\n    startState: function() {\n        return {\n            tokenize: $cebf237c17a1d868$var$tokenBase,\n            baseIndent: 0,\n            stack: []\n        };\n    },\n    token: function(stream, state) {\n        if (stream.eatSpace()) return null;\n        $cebf237c17a1d868$var$type = null;\n        var style = state.tokenize(stream, state);\n        var context = state.stack[state.stack.length - 1];\n        if ($cebf237c17a1d868$var$type == \"hash\" && context == \"rule\") style = \"atom\";\n        else if (style == \"variable\") {\n            if (context == \"rule\") style = \"number\";\n            else if (!context || context == \"@media{\") style = \"tag\";\n        }\n        if (context == \"rule\" && /^[\\{\\};]$/.test($cebf237c17a1d868$var$type)) state.stack.pop();\n        if ($cebf237c17a1d868$var$type == \"{\") {\n            if (context == \"@media\") state.stack[state.stack.length - 1] = \"@media{\";\n            else state.stack.push(\"{\");\n        } else if ($cebf237c17a1d868$var$type == \"}\") state.stack.pop();\n        else if ($cebf237c17a1d868$var$type == \"@media\") state.stack.push(\"@media\");\n        else if (context == \"{\" && $cebf237c17a1d868$var$type != \"comment\") state.stack.push(\"rule\");\n        return style;\n    },\n    indent: function(state, textAfter, cx) {\n        var n = state.stack.length;\n        if (/^\\}/.test(textAfter)) n -= state.stack[state.stack.length - 1] == \"rule\" ? 2 : 1;\n        return state.baseIndent + n * cx.unit;\n    },\n    languageData: {\n        indentOnInput: /^\\s*\\}$/\n    }\n};\n\n});\n\n\n//# sourceMappingURL=nginx.8e209e4c.js.map\n","function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar keywords = words(\n  /* ngxDirectiveControl */ \"break return rewrite set\" +\n    /* ngxDirective */ \" accept_mutex accept_mutex_delay access_log add_after_body add_before_body add_header addition_types aio alias allow ancient_browser ancient_browser_value auth_basic auth_basic_user_file auth_http auth_http_header auth_http_timeout autoindex autoindex_exact_size autoindex_localtime charset charset_types client_body_buffer_size client_body_in_file_only client_body_in_single_buffer client_body_temp_path client_body_timeout client_header_buffer_size client_header_timeout client_max_body_size connection_pool_size create_full_put_path daemon dav_access dav_methods debug_connection debug_points default_type degradation degrade deny devpoll_changes devpoll_events directio directio_alignment empty_gif env epoll_events error_log eventport_events expires fastcgi_bind fastcgi_buffer_size fastcgi_buffers fastcgi_busy_buffers_size fastcgi_cache fastcgi_cache_key fastcgi_cache_methods fastcgi_cache_min_uses fastcgi_cache_path fastcgi_cache_use_stale fastcgi_cache_valid fastcgi_catch_stderr fastcgi_connect_timeout fastcgi_hide_header fastcgi_ignore_client_abort fastcgi_ignore_headers fastcgi_index fastcgi_intercept_errors fastcgi_max_temp_file_size fastcgi_next_upstream fastcgi_param fastcgi_pass_header fastcgi_pass_request_body fastcgi_pass_request_headers fastcgi_read_timeout fastcgi_send_lowat fastcgi_send_timeout fastcgi_split_path_info fastcgi_store fastcgi_store_access fastcgi_temp_file_write_size fastcgi_temp_path fastcgi_upstream_fail_timeout fastcgi_upstream_max_fails flv geoip_city geoip_country google_perftools_profiles gzip gzip_buffers gzip_comp_level gzip_disable gzip_hash gzip_http_version gzip_min_length gzip_no_buffer gzip_proxied gzip_static gzip_types gzip_vary gzip_window if_modified_since ignore_invalid_headers image_filter image_filter_buffer image_filter_jpeg_quality image_filter_transparency imap_auth imap_capabilities imap_client_buffer index ip_hash keepalive_requests keepalive_timeout kqueue_changes kqueue_events large_client_header_buffers limit_conn limit_conn_log_level limit_rate limit_rate_after limit_req limit_req_log_level limit_req_zone limit_zone lingering_time lingering_timeout lock_file log_format log_not_found log_subrequest map_hash_bucket_size map_hash_max_size master_process memcached_bind memcached_buffer_size memcached_connect_timeout memcached_next_upstream memcached_read_timeout memcached_send_timeout memcached_upstream_fail_timeout memcached_upstream_max_fails merge_slashes min_delete_depth modern_browser modern_browser_value msie_padding msie_refresh multi_accept open_file_cache open_file_cache_errors open_file_cache_events open_file_cache_min_uses open_file_cache_valid open_log_file_cache output_buffers override_charset perl perl_modules perl_require perl_set pid pop3_auth pop3_capabilities port_in_redirect postpone_gzipping postpone_output protocol proxy proxy_bind proxy_buffer proxy_buffer_size proxy_buffering proxy_buffers proxy_busy_buffers_size proxy_cache proxy_cache_key proxy_cache_methods proxy_cache_min_uses proxy_cache_path proxy_cache_use_stale proxy_cache_valid proxy_connect_timeout proxy_headers_hash_bucket_size proxy_headers_hash_max_size proxy_hide_header proxy_ignore_client_abort proxy_ignore_headers proxy_intercept_errors proxy_max_temp_file_size proxy_method proxy_next_upstream proxy_pass_error_message proxy_pass_header proxy_pass_request_body proxy_pass_request_headers proxy_read_timeout proxy_redirect proxy_send_lowat proxy_send_timeout proxy_set_body proxy_set_header proxy_ssl_session_reuse proxy_store proxy_store_access proxy_temp_file_write_size proxy_temp_path proxy_timeout proxy_upstream_fail_timeout proxy_upstream_max_fails random_index read_ahead real_ip_header recursive_error_pages request_pool_size reset_timedout_connection resolver resolver_timeout rewrite_log rtsig_overflow_events rtsig_overflow_test rtsig_overflow_threshold rtsig_signo satisfy secure_link_secret send_lowat send_timeout sendfile sendfile_max_chunk server_name_in_redirect server_names_hash_bucket_size server_names_hash_max_size server_tokens set_real_ip_from smtp_auth smtp_capabilities smtp_client_buffer smtp_greeting_delay so_keepalive source_charset ssi ssi_ignore_recycled_buffers ssi_min_file_chunk ssi_silent_errors ssi_types ssi_value_length ssl ssl_certificate ssl_certificate_key ssl_ciphers ssl_client_certificate ssl_crl ssl_dhparam ssl_engine ssl_prefer_server_ciphers ssl_protocols ssl_session_cache ssl_session_timeout ssl_verify_client ssl_verify_depth starttls stub_status sub_filter sub_filter_once sub_filter_types tcp_nodelay tcp_nopush thread_stack_size timeout timer_resolution types_hash_bucket_size types_hash_max_size underscores_in_headers uninitialized_variable_warn use user userid userid_domain userid_expires userid_mark userid_name userid_p3p userid_path userid_service valid_referers variables_hash_bucket_size variables_hash_max_size worker_connections worker_cpu_affinity worker_priority worker_processes worker_rlimit_core worker_rlimit_nofile worker_rlimit_sigpending worker_threads working_directory xclient xml_entities xslt_stylesheet xslt_typesdrew@li229-23\"\n);\n\nvar keywords_block = words(\n  /* ngxDirectiveBlock */ \"http mail events server types location upstream charset_map limit_except if geo map\"\n);\n\nvar keywords_important = words(\n  /* ngxDirectiveImportant */ \"include root server server_name listen internal proxy_pass memcached_pass fastcgi_pass try_files\"\n);\n\nvar type;\nfunction ret(style, tp) {type = tp; return style;}\n\nfunction tokenBase(stream, state) {\n\n\n  stream.eatWhile(/[\\w\\$_]/);\n\n  var cur = stream.current();\n\n\n  if (keywords.propertyIsEnumerable(cur)) {\n    return \"keyword\";\n  }\n  else if (keywords_block.propertyIsEnumerable(cur)) {\n    return \"controlKeyword\";\n  }\n  else if (keywords_important.propertyIsEnumerable(cur)) {\n    return \"controlKeyword\";\n  }\n  /**/\n\n  var ch = stream.next();\n  if (ch == \"@\") {stream.eatWhile(/[\\w\\\\\\-]/); return ret(\"meta\", stream.current());}\n  else if (ch == \"/\" && stream.eat(\"*\")) {\n    state.tokenize = tokenCComment;\n    return tokenCComment(stream, state);\n  }\n  else if (ch == \"<\" && stream.eat(\"!\")) {\n    state.tokenize = tokenSGMLComment;\n    return tokenSGMLComment(stream, state);\n  }\n  else if (ch == \"=\") ret(null, \"compare\");\n  else if ((ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) return ret(null, \"compare\");\n  else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  else if (ch == \"#\") {\n    stream.skipToEnd();\n    return ret(\"comment\", \"comment\");\n  }\n  else if (ch == \"!\") {\n    stream.match(/^\\s*\\w*/);\n    return ret(\"keyword\", \"important\");\n  }\n  else if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w.%]/);\n    return ret(\"number\", \"unit\");\n  }\n  else if (/[,.+>*\\/]/.test(ch)) {\n    return ret(null, \"select-op\");\n  }\n  else if (/[;{}:\\[\\]]/.test(ch)) {\n    return ret(null, ch);\n  }\n  else {\n    stream.eatWhile(/[\\w\\\\\\-]/);\n    return ret(\"variable\", \"variable\");\n  }\n}\n\nfunction tokenCComment(stream, state) {\n  var maybeEnd = false, ch;\n  while ((ch = stream.next()) != null) {\n    if (maybeEnd && ch == \"/\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenSGMLComment(stream, state) {\n  var dashes = 0, ch;\n  while ((ch = stream.next()) != null) {\n    if (dashes >= 2 && ch == \">\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n    dashes = (ch == \"-\") ? dashes + 1 : 0;\n  }\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped)\n        break;\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    if (!escaped) state.tokenize = tokenBase;\n    return ret(\"string\", \"string\");\n  };\n}\n\nexport const nginx = {\n  name: \"nginx\",\n  startState: function() {\n    return {tokenize: tokenBase,\n            baseIndent: 0,\n            stack: []};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    type = null;\n    var style = state.tokenize(stream, state);\n\n    var context = state.stack[state.stack.length-1];\n    if (type == \"hash\" && context == \"rule\") style = \"atom\";\n    else if (style == \"variable\") {\n      if (context == \"rule\") style = \"number\";\n      else if (!context || context == \"@media{\") style = \"tag\";\n    }\n\n    if (context == \"rule\" && /^[\\{\\};]$/.test(type))\n      state.stack.pop();\n    if (type == \"{\") {\n      if (context == \"@media\") state.stack[state.stack.length-1] = \"@media{\";\n      else state.stack.push(\"{\");\n    }\n    else if (type == \"}\") state.stack.pop();\n    else if (type == \"@media\") state.stack.push(\"@media\");\n    else if (context == \"{\" && type != \"comment\") state.stack.push(\"rule\");\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var n = state.stack.length;\n    if (/^\\}/.test(textAfter))\n      n -= state.stack[state.stack.length-1] == \"rule\" ? 2 : 1;\n    return state.baseIndent + n * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*\\}$/\n  }\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","$cebf237c17a1d868$var$words","str","obj","words","split","i","length","Object","defineProperty","get","$cebf237c17a1d868$export$1f1c288d0f2dbc4c","set","s","enumerable","configurable","$cebf237c17a1d868$var$type","$cebf237c17a1d868$var$keywords","$cebf237c17a1d868$var$keywords_block","$cebf237c17a1d868$var$keywords_important","$cebf237c17a1d868$var$tokenBase","stream","state","eatWhile","quote","cur","current","propertyIsEnumerable","ch","next","eat","tokenize","$cebf237c17a1d868$var$tokenCComment","$cebf237c17a1d868$var$tokenSGMLComment","escaped","skipToEnd","match","test","maybeEnd","dashes","name","startState","baseIndent","stack","token","eatSpace","style","context","pop","push","indent","textAfter","cx","n","unit","languageData","indentOnInput"],"version":3,"file":"nginx.8e209e4c.js.map"}