{"mappings":"A,C,E,A,A,W,iB,C,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,Q,C,I,I,E,I,K,E,W,C,E,a,C,C,GCAA,IAAI,EAAQ,CAAC,EAwDN,IAAM,EAAQ,CACnB,KAAM,QACN,WAAY,WAAY,MAAO,CAAC,OAAO,EAAE,AAAA,CAAE,EAC3C,MAAO,SAAS,CAAM,CAAE,CAAK,EAC3B,MAPK,AAAC,CAAA,AAOkB,EAPZ,MAAM,CAAC,EAAE,EAnDzB,SAAmB,CAAM,EACvB,GAAI,EAAO,QAAQ,GAAI,OAAO,KAE9B,IAAI,EAAM,EAAO,GAAG,GAChB,EAAK,EAAO,IAAI,GAEpB,GAAI,AAAO,OAAP,SACE,EAAO,KAAK,CAAC,OAAS,EAAO,KAAK,CAAC,OAAS,EAAO,KAAK,CAAC,OACzD,EAAO,KAAK,CAAC,MAAS,EAAO,KAAK,CAAC,MACnC,EAAO,KAAK,CAAC,MAAS,EAAO,KAAK,CAAC,OAGnC,EAAO,KAAK,CAAC,OACf,EAAO,MAAM,CAAC,KACd,EAAO,IAAI,IAGT,EAAO,KAAK,CAAC,OAAS,EAAO,KAAK,CAAC,MACrC,EAAO,QAAQ,CAAC,SAGd,CAAA,EAAO,KAAK,CAAC,MAAS,EAAO,KAAK,CAAC,KAAA,GACrC,EAAO,QAAQ,CAAC,UAZT,SAiBX,GAAI,GAAQ,CAAA,AAAO,MAAP,GAAc,AAAO,MAAP,CAAO,GAC3B,EAAO,GAAG,CAAC,OAAS,EAAO,GAAG,CAAC,KAEjC,OADA,EAAO,SAAS,GACT,UAGX,GAAI,GAAO,AAAO,MAAP,EAAY,CACrB,GAAI,EAAO,KAAK,CAAC,OAAS,EAAO,KAAK,CAAC,OAAS,EAAO,KAAK,CAAC,MAC3D,MAAO,YAET,GAAI,EAAO,KAAK,CAAC,QAAU,EAAO,KAAK,CAAC,QAAU,EAAO,KAAK,CAAC,QAAU,EAAO,KAAK,CAAC,OAEpF,OADA,EAAO,SAAS,GACT,QAET,GAAK,EAAO,KAAK,CAAC,UAAY,EAAO,KAAK,CAAC,UAAc,EAAO,KAAK,CAAC,UAAY,EAAO,KAAK,CAAC,SAC7F,MAAO,WAEX,CACA,EAAO,QAAQ,CAAC,SAChB,IAAI,EAAM,EAAO,OAAO,GACxB,OAAO,EAAM,cAAc,CAAC,GAAO,CAAK,CAAC,EAAI,CAAG,IAClD,CAG6B,EAOT,EAAQ,EAC1B,CACF,C","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/troff.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"8ofhG\", function(module, exports) {\n\n$parcel$export(module.exports, \"troff\", () => $61bc6bc289b9a3df$export$818636f777d906c1);\nvar $61bc6bc289b9a3df$var$words = {};\nfunction $61bc6bc289b9a3df$var$tokenBase(stream) {\n    if (stream.eatSpace()) return null;\n    var sol = stream.sol();\n    var ch = stream.next();\n    if (ch === '\\\\') {\n        if (stream.match('fB') || stream.match('fR') || stream.match('fI') || stream.match('u') || stream.match('d') || stream.match('%') || stream.match('&')) return 'string';\n        if (stream.match('m[')) {\n            stream.skipTo(']');\n            stream.next();\n            return 'string';\n        }\n        if (stream.match('s+') || stream.match('s-')) {\n            stream.eatWhile(/[\\d-]/);\n            return 'string';\n        }\n        if (stream.match('\\(') || stream.match('*\\(')) {\n            stream.eatWhile(/[\\w-]/);\n            return 'string';\n        }\n        return 'string';\n    }\n    if (sol && (ch === '.' || ch === '\\'')) {\n        if (stream.eat('\\\\') && stream.eat('\\\"')) {\n            stream.skipToEnd();\n            return 'comment';\n        }\n    }\n    if (sol && ch === '.') {\n        if (stream.match('B ') || stream.match('I ') || stream.match('R ')) return 'attribute';\n        if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n            stream.skipToEnd();\n            return 'quote';\n        }\n        if (stream.match(/[A-Z]/) && stream.match(/[A-Z]/) || stream.match(/[a-z]/) && stream.match(/[a-z]/)) return 'attribute';\n    }\n    stream.eatWhile(/[\\w-]/);\n    var cur = stream.current();\n    return $61bc6bc289b9a3df$var$words.hasOwnProperty(cur) ? $61bc6bc289b9a3df$var$words[cur] : null;\n}\nfunction $61bc6bc289b9a3df$var$tokenize(stream, state) {\n    return (state.tokens[0] || $61bc6bc289b9a3df$var$tokenBase)(stream, state);\n}\nconst $61bc6bc289b9a3df$export$818636f777d906c1 = {\n    name: \"troff\",\n    startState: function() {\n        return {\n            tokens: []\n        };\n    },\n    token: function(stream, state) {\n        return $61bc6bc289b9a3df$var$tokenize(stream, state);\n    }\n};\n\n});\n\n\n//# sourceMappingURL=troff.9717e48d.js.map\n","var words = {};\n\nfunction tokenBase(stream) {\n  if (stream.eatSpace()) return null;\n\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  if (ch === '\\\\') {\n    if (stream.match('fB') || stream.match('fR') || stream.match('fI') ||\n        stream.match('u')  || stream.match('d')  ||\n        stream.match('%')  || stream.match('&')) {\n      return 'string';\n    }\n    if (stream.match('m[')) {\n      stream.skipTo(']');\n      stream.next();\n      return 'string';\n    }\n    if (stream.match('s+') || stream.match('s-')) {\n      stream.eatWhile(/[\\d-]/);\n      return 'string';\n    }\n    if (stream.match('\\(') || stream.match('*\\(')) {\n      stream.eatWhile(/[\\w-]/);\n      return 'string';\n    }\n    return 'string';\n  }\n  if (sol && (ch === '.' || ch === '\\'')) {\n    if (stream.eat('\\\\') && stream.eat('\\\"')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n  }\n  if (sol && ch === '.') {\n    if (stream.match('B ') || stream.match('I ') || stream.match('R ')) {\n      return 'attribute';\n    }\n    if (stream.match('TH ') || stream.match('SH ') || stream.match('SS ') || stream.match('HP ')) {\n      stream.skipToEnd();\n      return 'quote';\n    }\n    if ((stream.match(/[A-Z]/) && stream.match(/[A-Z]/)) || (stream.match(/[a-z]/) && stream.match(/[a-z]/))) {\n      return 'attribute';\n    }\n  }\n  stream.eatWhile(/[\\w-]/);\n  var cur = stream.current();\n  return words.hasOwnProperty(cur) ? words[cur] : null;\n}\n\nfunction tokenize(stream, state) {\n  return (state.tokens[0] || tokenBase) (stream, state);\n};\n\nexport const troff = {\n  name: \"troff\",\n  startState: function() {return {tokens:[]};},\n  token: function(stream, state) {\n    return tokenize(stream, state);\n  }\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$61bc6bc289b9a3df$export$818636f777d906c1","set","s","enumerable","configurable","$61bc6bc289b9a3df$var$words","name","startState","tokens","token","stream","state","eatSpace","sol","ch","next","match","skipTo","eatWhile","eat","skipToEnd","cur","current","hasOwnProperty"],"version":3,"file":"troff.9717e48d.js.map"}