{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/tiki.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"cRQOX\", function(module, exports) {\n\n$parcel$export(module.exports, \"tiki\", () => $95e36864251484c4$export$3db67b4227f7baa);\nfunction $95e36864251484c4$var$inBlock(style, terminator, returnTokenizer) {\n    return function(stream, state) {\n        while(!stream.eol()){\n            if (stream.match(terminator)) {\n                state.tokenize = $95e36864251484c4$var$inText;\n                break;\n            }\n            stream.next();\n        }\n        if (returnTokenizer) state.tokenize = returnTokenizer;\n        return style;\n    };\n}\nfunction $95e36864251484c4$var$inLine(style) {\n    return function(stream, state) {\n        while(!stream.eol())stream.next();\n        state.tokenize = $95e36864251484c4$var$inText;\n        return style;\n    };\n}\nfunction $95e36864251484c4$var$inText(stream, state) {\n    function chain(parser) {\n        state.tokenize = parser;\n        return parser(stream, state);\n    }\n    var sol = stream.sol();\n    var ch = stream.next();\n    //non start of line\n    switch(ch){\n        case \"{\":\n            stream.eat(\"/\");\n            stream.eatSpace();\n            stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?(}]/);\n            state.tokenize = $95e36864251484c4$var$inPlugin;\n            return \"tag\";\n        case \"_\":\n            if (stream.eat(\"_\")) return chain($95e36864251484c4$var$inBlock(\"strong\", \"__\", $95e36864251484c4$var$inText));\n            break;\n        case \"'\":\n            if (stream.eat(\"'\")) return chain($95e36864251484c4$var$inBlock(\"em\", \"''\", $95e36864251484c4$var$inText));\n            break;\n        case \"(\":\n            if (stream.eat(\"(\")) return chain($95e36864251484c4$var$inBlock(\"link\", \"))\", $95e36864251484c4$var$inText));\n            break;\n        case \"[\":\n            return chain($95e36864251484c4$var$inBlock(\"url\", \"]\", $95e36864251484c4$var$inText));\n        case \"|\":\n            if (stream.eat(\"|\")) return chain($95e36864251484c4$var$inBlock(\"comment\", \"||\"));\n            break;\n        case \"-\":\n            if (stream.eat(\"=\")) return chain($95e36864251484c4$var$inBlock(\"header string\", \"=-\", $95e36864251484c4$var$inText));\n            else if (stream.eat(\"-\")) return chain($95e36864251484c4$var$inBlock(\"error tw-deleted\", \"--\", $95e36864251484c4$var$inText));\n            break;\n        case \"=\":\n            if (stream.match(\"==\")) return chain($95e36864251484c4$var$inBlock(\"tw-underline\", \"===\", $95e36864251484c4$var$inText));\n            break;\n        case \":\":\n            if (stream.eat(\":\")) return chain($95e36864251484c4$var$inBlock(\"comment\", \"::\"));\n            break;\n        case \"^\":\n            return chain($95e36864251484c4$var$inBlock(\"tw-box\", \"^\"));\n        case \"~\":\n            if (stream.match(\"np~\")) return chain($95e36864251484c4$var$inBlock(\"meta\", \"~/np~\"));\n            break;\n    }\n    //start of line types\n    if (sol) switch(ch){\n        case \"!\":\n            if (stream.match('!!!!!')) return chain($95e36864251484c4$var$inLine(\"header string\"));\n            else if (stream.match('!!!!')) return chain($95e36864251484c4$var$inLine(\"header string\"));\n            else if (stream.match('!!!')) return chain($95e36864251484c4$var$inLine(\"header string\"));\n            else if (stream.match('!!')) return chain($95e36864251484c4$var$inLine(\"header string\"));\n            else return chain($95e36864251484c4$var$inLine(\"header string\"));\n            break;\n        case \"*\":\n        case \"#\":\n        case \"+\":\n            return chain($95e36864251484c4$var$inLine(\"tw-listitem bracket\"));\n    }\n    //stream.eatWhile(/[&{]/); was eating up plugins, turned off to act less like html and more like tiki\n    return null;\n}\n// Return variables for tokenizers\nvar $95e36864251484c4$var$pluginName, $95e36864251484c4$var$type;\nfunction $95e36864251484c4$var$inPlugin(stream, state) {\n    var ch = stream.next();\n    var peek = stream.peek();\n    if (ch == \"}\") {\n        state.tokenize = $95e36864251484c4$var$inText;\n        //type = ch == \")\" ? \"endPlugin\" : \"selfclosePlugin\"; inPlugin\n        return \"tag\";\n    } else if (ch == \"(\" || ch == \")\") return \"bracket\";\n    else if (ch == \"=\") {\n        $95e36864251484c4$var$type = \"equals\";\n        if (peek == \">\") {\n            stream.next();\n            peek = stream.peek();\n        }\n        //here we detect values directly after equal character with no quotes\n        if (!/[\\'\\\"]/.test(peek)) state.tokenize = $95e36864251484c4$var$inAttributeNoQuote();\n        //end detect values\n        return \"operator\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n        state.tokenize = $95e36864251484c4$var$inAttribute(ch);\n        return state.tokenize(stream, state);\n    } else {\n        stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?]/);\n        return \"keyword\";\n    }\n}\nfunction $95e36864251484c4$var$inAttribute(quote) {\n    return function(stream, state) {\n        while(!stream.eol())if (stream.next() == quote) {\n            state.tokenize = $95e36864251484c4$var$inPlugin;\n            break;\n        }\n        return \"string\";\n    };\n}\nfunction $95e36864251484c4$var$inAttributeNoQuote() {\n    return function(stream, state) {\n        while(!stream.eol()){\n            var ch = stream.next();\n            var peek = stream.peek();\n            if (ch == \" \" || ch == \",\" || /[ )}]/.test(peek)) {\n                state.tokenize = $95e36864251484c4$var$inPlugin;\n                break;\n            }\n        }\n        return \"string\";\n    };\n}\nvar $95e36864251484c4$var$curState, $95e36864251484c4$var$setStyle;\nfunction $95e36864251484c4$var$pass() {\n    for(var i = arguments.length - 1; i >= 0; i--)$95e36864251484c4$var$curState.cc.push(arguments[i]);\n}\nfunction $95e36864251484c4$var$cont() {\n    $95e36864251484c4$var$pass.apply(null, arguments);\n    return true;\n}\nfunction $95e36864251484c4$var$pushContext(pluginName, startOfLine) {\n    var noIndent = $95e36864251484c4$var$curState.context && $95e36864251484c4$var$curState.context.noIndent;\n    $95e36864251484c4$var$curState.context = {\n        prev: $95e36864251484c4$var$curState.context,\n        pluginName: pluginName,\n        indent: $95e36864251484c4$var$curState.indented,\n        startOfLine: startOfLine,\n        noIndent: noIndent\n    };\n}\nfunction $95e36864251484c4$var$popContext() {\n    if ($95e36864251484c4$var$curState.context) $95e36864251484c4$var$curState.context = $95e36864251484c4$var$curState.context.prev;\n}\nfunction $95e36864251484c4$var$element(type) {\n    if (type == \"openPlugin\") {\n        $95e36864251484c4$var$curState.pluginName = $95e36864251484c4$var$pluginName;\n        return $95e36864251484c4$var$cont($95e36864251484c4$var$attributes, $95e36864251484c4$var$endplugin($95e36864251484c4$var$curState.startOfLine));\n    } else if (type == \"closePlugin\") {\n        var err = false;\n        if ($95e36864251484c4$var$curState.context) {\n            err = $95e36864251484c4$var$curState.context.pluginName != $95e36864251484c4$var$pluginName;\n            $95e36864251484c4$var$popContext();\n        } else err = true;\n        if (err) $95e36864251484c4$var$setStyle = \"error\";\n        return $95e36864251484c4$var$cont($95e36864251484c4$var$endcloseplugin(err));\n    } else if (type == \"string\") {\n        if (!$95e36864251484c4$var$curState.context || $95e36864251484c4$var$curState.context.name != \"!cdata\") $95e36864251484c4$var$pushContext(\"!cdata\");\n        if ($95e36864251484c4$var$curState.tokenize == $95e36864251484c4$var$inText) $95e36864251484c4$var$popContext();\n        return $95e36864251484c4$var$cont();\n    } else return $95e36864251484c4$var$cont();\n}\nfunction $95e36864251484c4$var$endplugin(startOfLine) {\n    return function(type) {\n        if (type == \"selfclosePlugin\" || type == \"endPlugin\") return $95e36864251484c4$var$cont();\n        if (type == \"endPlugin\") {\n            $95e36864251484c4$var$pushContext($95e36864251484c4$var$curState.pluginName, startOfLine);\n            return $95e36864251484c4$var$cont();\n        }\n        return $95e36864251484c4$var$cont();\n    };\n}\nfunction $95e36864251484c4$var$endcloseplugin(err) {\n    return function(type) {\n        if (err) $95e36864251484c4$var$setStyle = \"error\";\n        if (type == \"endPlugin\") return $95e36864251484c4$var$cont();\n        return $95e36864251484c4$var$pass();\n    };\n}\nfunction $95e36864251484c4$var$attributes(type) {\n    if (type == \"keyword\") {\n        $95e36864251484c4$var$setStyle = \"attribute\";\n        return $95e36864251484c4$var$cont($95e36864251484c4$var$attributes);\n    }\n    if (type == \"equals\") return $95e36864251484c4$var$cont($95e36864251484c4$var$attvalue, $95e36864251484c4$var$attributes);\n    return $95e36864251484c4$var$pass();\n}\nfunction $95e36864251484c4$var$attvalue(type) {\n    if (type == \"keyword\") {\n        $95e36864251484c4$var$setStyle = \"string\";\n        return $95e36864251484c4$var$cont();\n    }\n    if (type == \"string\") return $95e36864251484c4$var$cont($95e36864251484c4$var$attvaluemaybe);\n    return $95e36864251484c4$var$pass();\n}\nfunction $95e36864251484c4$var$attvaluemaybe(type) {\n    if (type == \"string\") return $95e36864251484c4$var$cont($95e36864251484c4$var$attvaluemaybe);\n    else return $95e36864251484c4$var$pass();\n}\nconst $95e36864251484c4$export$3db67b4227f7baa = {\n    name: \"tiki\",\n    startState: function() {\n        return {\n            tokenize: $95e36864251484c4$var$inText,\n            cc: [],\n            indented: 0,\n            startOfLine: true,\n            pluginName: null,\n            context: null\n        };\n    },\n    token: function(stream, state) {\n        if (stream.sol()) {\n            state.startOfLine = true;\n            state.indented = stream.indentation();\n        }\n        if (stream.eatSpace()) return null;\n        $95e36864251484c4$var$setStyle = $95e36864251484c4$var$type = $95e36864251484c4$var$pluginName = null;\n        var style = state.tokenize(stream, state);\n        if ((style || $95e36864251484c4$var$type) && style != \"comment\") {\n            $95e36864251484c4$var$curState = state;\n            while(true){\n                var comb = state.cc.pop() || $95e36864251484c4$var$element;\n                if (comb($95e36864251484c4$var$type || style)) break;\n            }\n        }\n        state.startOfLine = false;\n        return $95e36864251484c4$var$setStyle || style;\n    },\n    indent: function(state, textAfter, cx) {\n        var context = state.context;\n        if (context && context.noIndent) return 0;\n        if (context && /^{\\//.test(textAfter)) context = context.prev;\n        while(context && !context.startOfLine)context = context.prev;\n        if (context) return context.indent + cx.unit;\n        else return 0;\n    }\n};\n\n});\n\n\n//# sourceMappingURL=tiki.21b2ece8.js.map\n","function inBlock(style, terminator, returnTokenizer) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.match(terminator)) {\n        state.tokenize = inText;\n        break;\n      }\n      stream.next();\n    }\n\n    if (returnTokenizer) state.tokenize = returnTokenizer;\n\n    return style;\n  };\n}\n\nfunction inLine(style) {\n  return function(stream, state) {\n    while(!stream.eol()) {\n      stream.next();\n    }\n    state.tokenize = inText;\n    return style;\n  };\n}\n\nfunction inText(stream, state) {\n  function chain(parser) {\n    state.tokenize = parser;\n    return parser(stream, state);\n  }\n\n  var sol = stream.sol();\n  var ch = stream.next();\n\n  //non start of line\n  switch (ch) { //switch is generally much faster than if, so it is used here\n  case \"{\": //plugin\n    stream.eat(\"/\");\n    stream.eatSpace();\n    stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?(}]/);\n    state.tokenize = inPlugin;\n    return \"tag\";\n  case \"_\": //bold\n    if (stream.eat(\"_\"))\n      return chain(inBlock(\"strong\", \"__\", inText));\n    break;\n  case \"'\": //italics\n    if (stream.eat(\"'\"))\n      return chain(inBlock(\"em\", \"''\", inText));\n    break;\n  case \"(\":// Wiki Link\n    if (stream.eat(\"(\"))\n      return chain(inBlock(\"link\", \"))\", inText));\n    break;\n  case \"[\":// Weblink\n    return chain(inBlock(\"url\", \"]\", inText));\n    break;\n  case \"|\": //table\n    if (stream.eat(\"|\"))\n      return chain(inBlock(\"comment\", \"||\"));\n    break;\n  case \"-\":\n    if (stream.eat(\"=\")) {//titleBar\n      return chain(inBlock(\"header string\", \"=-\", inText));\n    } else if (stream.eat(\"-\")) {//deleted\n      return chain(inBlock(\"error tw-deleted\", \"--\", inText));\n    }\n    break;\n  case \"=\": //underline\n    if (stream.match(\"==\"))\n      return chain(inBlock(\"tw-underline\", \"===\", inText));\n    break;\n  case \":\":\n    if (stream.eat(\":\"))\n      return chain(inBlock(\"comment\", \"::\"));\n    break;\n  case \"^\": //box\n    return chain(inBlock(\"tw-box\", \"^\"));\n    break;\n  case \"~\": //np\n    if (stream.match(\"np~\"))\n      return chain(inBlock(\"meta\", \"~/np~\"));\n    break;\n  }\n\n  //start of line types\n  if (sol) {\n    switch (ch) {\n    case \"!\": //header at start of line\n      if (stream.match('!!!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!!')) {\n        return chain(inLine(\"header string\"));\n      } else if (stream.match('!!')) {\n        return chain(inLine(\"header string\"));\n      } else {\n        return chain(inLine(\"header string\"));\n      }\n      break;\n    case \"*\": //unordered list line item, or <li /> at start of line\n    case \"#\": //ordered list line item, or <li /> at start of line\n    case \"+\": //ordered list line item, or <li /> at start of line\n      return chain(inLine(\"tw-listitem bracket\"));\n      break;\n    }\n  }\n\n  //stream.eatWhile(/[&{]/); was eating up plugins, turned off to act less like html and more like tiki\n  return null;\n}\n\n// Return variables for tokenizers\nvar pluginName, type;\nfunction inPlugin(stream, state) {\n  var ch = stream.next();\n  var peek = stream.peek();\n\n  if (ch == \"}\") {\n    state.tokenize = inText;\n    //type = ch == \")\" ? \"endPlugin\" : \"selfclosePlugin\"; inPlugin\n    return \"tag\";\n  } else if (ch == \"(\" || ch == \")\") {\n    return \"bracket\";\n  } else if (ch == \"=\") {\n    type = \"equals\";\n\n    if (peek == \">\") {\n      stream.next();\n      peek = stream.peek();\n    }\n\n    //here we detect values directly after equal character with no quotes\n    if (!/[\\'\\\"]/.test(peek)) {\n      state.tokenize = inAttributeNoQuote();\n    }\n    //end detect values\n\n    return \"operator\";\n  } else if (/[\\'\\\"]/.test(ch)) {\n    state.tokenize = inAttribute(ch);\n    return state.tokenize(stream, state);\n  } else {\n    stream.eatWhile(/[^\\s\\u00a0=\\\"\\'\\/?]/);\n    return \"keyword\";\n  }\n}\n\nfunction inAttribute(quote) {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      if (stream.next() == quote) {\n        state.tokenize = inPlugin;\n        break;\n      }\n    }\n    return \"string\";\n  };\n}\n\nfunction inAttributeNoQuote() {\n  return function(stream, state) {\n    while (!stream.eol()) {\n      var ch = stream.next();\n      var peek = stream.peek();\n      if (ch == \" \" || ch == \",\" || /[ )}]/.test(peek)) {\n        state.tokenize = inPlugin;\n        break;\n      }\n    }\n    return \"string\";\n  };\n}\n\nvar curState, setStyle;\nfunction pass() {\n  for (var i = arguments.length - 1; i >= 0; i--) curState.cc.push(arguments[i]);\n}\n\nfunction cont() {\n  pass.apply(null, arguments);\n  return true;\n}\n\nfunction pushContext(pluginName, startOfLine) {\n  var noIndent = curState.context && curState.context.noIndent;\n  curState.context = {\n    prev: curState.context,\n    pluginName: pluginName,\n    indent: curState.indented,\n    startOfLine: startOfLine,\n    noIndent: noIndent\n  };\n}\n\nfunction popContext() {\n  if (curState.context) curState.context = curState.context.prev;\n}\n\nfunction element(type) {\n  if (type == \"openPlugin\") {curState.pluginName = pluginName; return cont(attributes, endplugin(curState.startOfLine));}\n  else if (type == \"closePlugin\") {\n    var err = false;\n    if (curState.context) {\n      err = curState.context.pluginName != pluginName;\n      popContext();\n    } else {\n      err = true;\n    }\n    if (err) setStyle = \"error\";\n    return cont(endcloseplugin(err));\n  }\n  else if (type == \"string\") {\n    if (!curState.context || curState.context.name != \"!cdata\") pushContext(\"!cdata\");\n    if (curState.tokenize == inText) popContext();\n    return cont();\n  }\n  else return cont();\n}\n\nfunction endplugin(startOfLine) {\n  return function(type) {\n    if (\n      type == \"selfclosePlugin\" ||\n        type == \"endPlugin\"\n    )\n      return cont();\n    if (type == \"endPlugin\") {pushContext(curState.pluginName, startOfLine); return cont();}\n    return cont();\n  };\n}\n\nfunction endcloseplugin(err) {\n  return function(type) {\n    if (err) setStyle = \"error\";\n    if (type == \"endPlugin\") return cont();\n    return pass();\n  };\n}\n\nfunction attributes(type) {\n  if (type == \"keyword\") {setStyle = \"attribute\"; return cont(attributes);}\n  if (type == \"equals\") return cont(attvalue, attributes);\n  return pass();\n}\nfunction attvalue(type) {\n  if (type == \"keyword\") {setStyle = \"string\"; return cont();}\n  if (type == \"string\") return cont(attvaluemaybe);\n  return pass();\n}\nfunction attvaluemaybe(type) {\n  if (type == \"string\") return cont(attvaluemaybe);\n  else return pass();\n}\nexport const tiki = {\n  name: \"tiki\",\n  startState: function() {\n    return {tokenize: inText, cc: [], indented: 0, startOfLine: true, pluginName: null, context: null};\n  },\n  token: function(stream, state) {\n    if (stream.sol()) {\n      state.startOfLine = true;\n      state.indented = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n\n    setStyle = type = pluginName = null;\n    var style = state.tokenize(stream, state);\n    if ((style || type) && style != \"comment\") {\n      curState = state;\n      while (true) {\n        var comb = state.cc.pop() || element;\n        if (comb(type || style)) break;\n      }\n    }\n    state.startOfLine = false;\n    return setStyle || style;\n  },\n  indent: function(state, textAfter, cx) {\n    var context = state.context;\n    if (context && context.noIndent) return 0;\n    if (context && /^{\\//.test(textAfter))\n      context = context.prev;\n    while (context && !context.startOfLine)\n      context = context.prev;\n    if (context) return context.indent + cx.unit;\n    else return 0;\n  }\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","$95e36864251484c4$var$pluginName","$95e36864251484c4$var$type","$95e36864251484c4$var$curState","$95e36864251484c4$var$setStyle","$95e36864251484c4$var$inBlock","style","terminator","returnTokenizer","stream","state","eol","match","tokenize","$95e36864251484c4$var$inText","next","$95e36864251484c4$var$inLine","chain","parser","sol","ch","eat","eatSpace","eatWhile","$95e36864251484c4$var$inPlugin","quote","peek","test","$95e36864251484c4$var$pass","i","arguments","length","cc","push","$95e36864251484c4$var$cont","apply","$95e36864251484c4$var$pushContext","pluginName","startOfLine","noIndent","context","prev","indent","indented","$95e36864251484c4$var$popContext","Object","defineProperty","get","$95e36864251484c4$export$3db67b4227f7baa","set","s","enumerable","configurable","$95e36864251484c4$var$attributes","type","$95e36864251484c4$var$attvalue","$95e36864251484c4$var$attvaluemaybe","name","startState","token","indentation","comb","pop","err","textAfter","cx","unit"],"version":3,"file":"tiki.21b2ece8.js.map"}