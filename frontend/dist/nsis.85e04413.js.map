{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/nsis.js","node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"fbz3F\", function(module, exports) {\n\n$parcel$export(module.exports, \"nsis\", () => $b0e313e856648e49$export$8722e3e7c666eec9);\n\nvar $dp0dU = parcelRequire(\"dp0dU\");\nconst $b0e313e856648e49$export$8722e3e7c666eec9 = (0, $dp0dU.simpleMode)({\n    start: [\n        // Numbers\n        {\n            regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/,\n            token: \"number\"\n        },\n        // Strings\n        {\n            regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n            token: \"string\"\n        },\n        {\n            regex: /'(?:[^\\\\']|\\\\.)*'?/,\n            token: \"string\"\n        },\n        {\n            regex: /`(?:[^\\\\`]|\\\\.)*`?/,\n            token: \"string\"\n        },\n        // Compile Time Commands\n        {\n            regex: /^\\s*(?:\\!(addincludedir|addplugindir|appendfile|assert|cd|define|delfile|echo|error|execute|finalize|getdllversion|gettlbversion|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|uninstfinalize|verbose|warning))\\b/i,\n            token: \"keyword\"\n        },\n        // Conditional Compilation\n        {\n            regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/i,\n            token: \"keyword\",\n            indent: true\n        },\n        {\n            regex: /^\\s*(?:\\!(else|endif|macroend))\\b/i,\n            token: \"keyword\",\n            dedent: true\n        },\n        // Runtime Commands\n        {\n            regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetKnownFolderPath|GetLabelAddress|GetTempFileName|GetWinVer|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfRtlLanguage|IfShellVarContextAll|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadAndSetImage|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestLongPathAware|ManifestMaxVersionTested|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEAddResource|PEDllCharacteristics|PERemoveResource|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Target|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\\b/i,\n            token: \"keyword\"\n        },\n        {\n            regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/i,\n            token: \"keyword\",\n            indent: true\n        },\n        {\n            regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/i,\n            token: \"keyword\",\n            dedent: true\n        },\n        // Command Options\n        {\n            regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/i,\n            token: \"atom\"\n        },\n        {\n            regex: /\\b(?:admin|all|amd64-unicode|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|x-86-(ansi|unicode)|zlib)\\b/i,\n            token: \"builtin\"\n        },\n        // LogicLib.nsh\n        {\n            regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:2|3|4|5|Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/i,\n            token: \"variable-2\",\n            indent: true\n        },\n        // FileFunc.nsh\n        {\n            regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/i,\n            token: \"variable-2\",\n            dedent: true\n        },\n        // Memento.nsh\n        {\n            regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/i,\n            token: \"variable-2\",\n            dedent: true\n        },\n        // TextFunc.nsh\n        {\n            regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/i,\n            token: \"variable-2\",\n            dedent: true\n        },\n        // WinVer.nsh\n        {\n            regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/i,\n            token: \"variable\",\n            dedent: true\n        },\n        // WordFunc.nsh\n        {\n            regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/i,\n            token: \"keyword\",\n            dedent: true\n        },\n        // x64.nsh\n        {\n            regex: /\\$\\{(?:RunningX64)\\}/i,\n            token: \"variable\",\n            dedent: true\n        },\n        {\n            regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/i,\n            token: \"keyword\",\n            dedent: true\n        },\n        // Line Comment\n        {\n            regex: /(#|;).*/,\n            token: \"comment\"\n        },\n        // Block Comment\n        {\n            regex: /\\/\\*/,\n            token: \"comment\",\n            next: \"comment\"\n        },\n        // Operator\n        {\n            regex: /[-+\\/*=<>!]+/,\n            token: \"operator\"\n        },\n        // Variable\n        {\n            regex: /\\$\\w[\\w\\.]*/,\n            token: \"variable\"\n        },\n        // Constant\n        {\n            regex: /\\${[\\!\\w\\.:-]+}/,\n            token: \"variableName.constant\"\n        },\n        // Language String\n        {\n            regex: /\\$\\([\\!\\w\\.:-]+\\)/,\n            token: \"atom\"\n        }\n    ],\n    comment: [\n        {\n            regex: /.*?\\*\\//,\n            token: \"comment\",\n            next: \"start\"\n        },\n        {\n            regex: /.*/,\n            token: \"comment\"\n        }\n    ],\n    languageData: {\n        name: \"nsis\",\n        indentOnInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/i,\n        commentTokens: {\n            line: \"#\",\n            block: {\n                open: \"/*\",\n                close: \"*/\"\n            }\n        }\n    }\n});\n\n});\nparcelRegister(\"dp0dU\", function(module, exports) {\n\n$parcel$export(module.exports, \"simpleMode\", () => $9c1dc886b83c7a05$export$cda2c962bd756348);\nfunction $9c1dc886b83c7a05$export$cda2c962bd756348(states) {\n    $9c1dc886b83c7a05$var$ensureState(states, \"start\");\n    var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n    for(var state in states)if (state != meta && states.hasOwnProperty(state)) {\n        var list = states_[state] = [], orig = states[state];\n        for(var i = 0; i < orig.length; i++){\n            var data = orig[i];\n            list.push(new $9c1dc886b83c7a05$var$Rule(data, states));\n            if (data.indent || data.dedent) hasIndentation = true;\n        }\n    }\n    return {\n        name: meta.name,\n        startState: function() {\n            return {\n                state: \"start\",\n                pending: null,\n                indent: hasIndentation ? [] : null\n            };\n        },\n        copyState: function(state) {\n            var s = {\n                state: state.state,\n                pending: state.pending,\n                indent: state.indent && state.indent.slice(0)\n            };\n            if (state.stack) s.stack = state.stack.slice(0);\n            return s;\n        },\n        token: $9c1dc886b83c7a05$var$tokenFunction(states_),\n        indent: $9c1dc886b83c7a05$var$indentFunction(states_, meta),\n        mergeTokens: meta.mergeTokens,\n        languageData: meta\n    };\n}\nfunction $9c1dc886b83c7a05$var$ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\nfunction $9c1dc886b83c7a05$var$toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n        if (val.ignoreCase) flags = \"i\";\n        val = val.source;\n    } else val = String(val);\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\nfunction $9c1dc886b83c7a05$var$asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for(var i = 0; i < val.length; i++)result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n}\nfunction $9c1dc886b83c7a05$var$Rule(data, states) {\n    if (data.next || data.push) $9c1dc886b83c7a05$var$ensureState(states, data.next || data.push);\n    this.regex = $9c1dc886b83c7a05$var$toRegex(data.regex);\n    this.token = $9c1dc886b83c7a05$var$asToken(data.token);\n    this.data = data;\n}\nfunction $9c1dc886b83c7a05$var$tokenFunction(states) {\n    return function(stream, state) {\n        if (state.pending) {\n            var pend = state.pending.shift();\n            if (state.pending.length == 0) state.pending = null;\n            stream.pos += pend.text.length;\n            return pend.token;\n        }\n        var curState = states[state.state];\n        for(var i = 0; i < curState.length; i++){\n            var rule = curState[i];\n            var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n            if (matches) {\n                if (rule.data.next) state.state = rule.data.next;\n                else if (rule.data.push) {\n                    (state.stack || (state.stack = [])).push(state.state);\n                    state.state = rule.data.push;\n                } else if (rule.data.pop && state.stack && state.stack.length) state.state = state.stack.pop();\n                if (rule.data.indent) state.indent.push(stream.indentation() + stream.indentUnit);\n                if (rule.data.dedent) state.indent.pop();\n                var token = rule.token;\n                if (token && token.apply) token = token(matches);\n                if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n                    state.pending = [];\n                    for(var j = 2; j < matches.length; j++)if (matches[j]) state.pending.push({\n                        text: matches[j],\n                        token: rule.token[j - 1]\n                    });\n                    stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n                    return token[0];\n                } else if (token && token.join) return token[0];\n                else return token;\n            }\n        }\n        stream.next();\n        return null;\n    };\n}\nfunction $9c1dc886b83c7a05$var$indentFunction(states, meta) {\n    return function(state, textAfter) {\n        if (state.indent == null || meta.dontIndentStates && meta.dontIndentStates.indexOf(state.state) > -1) return null;\n        var pos = state.indent.length - 1, rules = states[state.state];\n        scan: for(;;){\n            for(var i = 0; i < rules.length; i++){\n                var rule = rules[i];\n                if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n                    var m = rule.regex.exec(textAfter);\n                    if (m && m[0]) {\n                        pos--;\n                        if (rule.next || rule.push) rules = states[rule.next || rule.push];\n                        textAfter = textAfter.slice(m[0].length);\n                        continue scan;\n                    }\n                }\n            }\n            break;\n        }\n        return pos < 0 ? 0 : state.indent[pos];\n    };\n}\n\n});\n\n\n\n//# sourceMappingURL=nsis.85e04413.js.map\n","import {simpleMode} from \"./simple-mode.js\"\nexport const nsis = simpleMode({\n  start:[\n    // Numbers\n    {regex: /(?:[+-]?)(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\d+.?\\d*)/, token: \"number\"},\n\n    // Strings\n    { regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/, token: \"string\" },\n    { regex: /'(?:[^\\\\']|\\\\.)*'?/, token: \"string\" },\n    { regex: /`(?:[^\\\\`]|\\\\.)*`?/, token: \"string\" },\n\n    // Compile Time Commands\n    {regex: /^\\s*(?:\\!(addincludedir|addplugindir|appendfile|assert|cd|define|delfile|echo|error|execute|finalize|getdllversion|gettlbversion|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|uninstfinalize|verbose|warning))\\b/i, token: \"keyword\"},\n\n    // Conditional Compilation\n    {regex: /^\\s*(?:\\!(if(?:n?def)?|ifmacron?def|macro))\\b/i, token: \"keyword\", indent: true},\n    {regex: /^\\s*(?:\\!(else|endif|macroend))\\b/i, token: \"keyword\", dedent: true},\n\n    // Runtime Commands\n    {regex: /^\\s*(?:Abort|AddBrandingImage|AddSize|AllowRootDirInstall|AllowSkipFiles|AutoCloseWindow|BGFont|BGGradient|BrandingText|BringToFront|Call|CallInstDLL|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|CreateDirectory|CreateFont|CreateShortCut|Delete|DeleteINISec|DeleteINIStr|DeleteRegKey|DeleteRegValue|DetailPrint|DetailsButtonText|DirText|DirVar|DirVerify|EnableWindow|EnumRegKey|EnumRegValue|Exch|Exec|ExecShell|ExecShellWait|ExecWait|ExpandEnvStrings|File|FileBufSize|FileClose|FileErrorText|FileOpen|FileRead|FileReadByte|FileReadUTF16LE|FileReadWord|FileWriteUTF16LE|FileSeek|FileWrite|FileWriteByte|FileWriteWord|FindClose|FindFirst|FindNext|FindWindow|FlushINI|GetCurInstType|GetCurrentAddress|GetDlgItem|GetDLLVersion|GetDLLVersionLocal|GetErrorLevel|GetFileTime|GetFileTimeLocal|GetFullPathName|GetFunctionAddress|GetInstDirError|GetKnownFolderPath|GetLabelAddress|GetTempFileName|GetWinVer|Goto|HideWindow|Icon|IfAbort|IfErrors|IfFileExists|IfRebootFlag|IfRtlLanguage|IfShellVarContextAll|IfSilent|InitPluginsDir|InstallButtonText|InstallColors|InstallDir|InstallDirRegKey|InstProgressFlags|InstType|InstTypeGetText|InstTypeSetText|Int64Cmp|Int64CmpU|Int64Fmt|IntCmp|IntCmpU|IntFmt|IntOp|IntPtrCmp|IntPtrCmpU|IntPtrOp|IsWindow|LangString|LicenseBkColor|LicenseData|LicenseForceSelection|LicenseLangString|LicenseText|LoadAndSetImage|LoadLanguageFile|LockWindow|LogSet|LogText|ManifestDPIAware|ManifestLongPathAware|ManifestMaxVersionTested|ManifestSupportedOS|MessageBox|MiscButtonText|Name|Nop|OutFile|Page|PageCallbacks|PEAddResource|PEDllCharacteristics|PERemoveResource|PESubsysVer|Pop|Push|Quit|ReadEnvStr|ReadINIStr|ReadRegDWORD|ReadRegStr|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|SectionGetFlags|SectionGetInstTypes|SectionGetSize|SectionGetText|SectionIn|SectionSetFlags|SectionSetInstTypes|SectionSetSize|SectionSetText|SendMessage|SetAutoClose|SetBrandingImage|SetCompress|SetCompressor|SetCompressorDictSize|SetCtlColors|SetCurInstType|SetDatablockOptimize|SetDateSave|SetDetailsPrint|SetDetailsView|SetErrorLevel|SetErrors|SetFileAttributes|SetFont|SetOutPath|SetOverwrite|SetRebootFlag|SetRegView|SetShellVarContext|SetSilent|ShowInstDetails|ShowUninstDetails|ShowWindow|SilentInstall|SilentUnInstall|Sleep|SpaceTexts|StrCmp|StrCmpS|StrCpy|StrLen|SubCaption|Target|Unicode|UninstallButtonText|UninstallCaption|UninstallIcon|UninstallSubCaption|UninstallText|UninstPage|UnRegDLL|Var|VIAddVersionKey|VIFileVersion|VIProductVersion|WindowIcon|WriteINIStr|WriteRegBin|WriteRegDWORD|WriteRegExpandStr|WriteRegMultiStr|WriteRegNone|WriteRegStr|WriteUninstaller|XPStyle)\\b/i, token: \"keyword\"},\n    {regex: /^\\s*(?:Function|PageEx|Section(?:Group)?)\\b/i, token: \"keyword\", indent: true},\n    {regex: /^\\s*(?:(Function|PageEx|Section(?:Group)?)End)\\b/i, token: \"keyword\", dedent: true},\n\n    // Command Options\n    {regex: /\\b(?:ARCHIVE|FILE_ATTRIBUTE_ARCHIVE|FILE_ATTRIBUTE_HIDDEN|FILE_ATTRIBUTE_NORMAL|FILE_ATTRIBUTE_OFFLINE|FILE_ATTRIBUTE_READONLY|FILE_ATTRIBUTE_SYSTEM|FILE_ATTRIBUTE_TEMPORARY|HIDDEN|HKCC|HKCR(32|64)?|HKCU(32|64)?|HKDD|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_DYN_DATA|HKEY_LOCAL_MACHINE|HKEY_PERFORMANCE_DATA|HKEY_USERS|HKLM(32|64)?|HKPD|HKU|IDABORT|IDCANCEL|IDD_DIR|IDD_INST|IDD_INSTFILES|IDD_LICENSE|IDD_SELCOM|IDD_UNINST|IDD_VERIFY|IDIGNORE|IDNO|IDOK|IDRETRY|IDYES|MB_ABORTRETRYIGNORE|MB_DEFBUTTON1|MB_DEFBUTTON2|MB_DEFBUTTON3|MB_DEFBUTTON4|MB_ICONEXCLAMATION|MB_ICONINFORMATION|MB_ICONQUESTION|MB_ICONSTOP|MB_OK|MB_OKCANCEL|MB_RETRYCANCEL|MB_RIGHT|MB_RTLREADING|MB_SETFOREGROUND|MB_TOPMOST|MB_USERICON|MB_YESNO|MB_YESNOCANCEL|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SW_HIDE|SW_SHOWDEFAULT|SW_SHOWMAXIMIZED|SW_SHOWMINIMIZED|SW_SHOWNORMAL|SYSTEM|TEMPORARY)\\b/i, token: \"atom\"},\n    {regex: /\\b(?:admin|all|amd64-unicode|auto|both|bottom|bzip2|components|current|custom|directory|false|force|hide|highest|ifdiff|ifnewer|instfiles|lastused|leave|left|license|listonly|lzma|nevershow|none|normal|notset|off|on|right|show|silent|silentlog|textonly|top|true|try|un\\.components|un\\.custom|un\\.directory|un\\.instfiles|un\\.license|uninstConfirm|user|Win10|Win7|Win8|WinVista|x-86-(ansi|unicode)|zlib)\\b/i, token: \"builtin\"},\n\n    // LogicLib.nsh\n    {regex: /\\$\\{(?:And(?:If(?:Not)?|Unless)|Break|Case(?:2|3|4|5|Else)?|Continue|Default|Do(?:Until|While)?|Else(?:If(?:Not)?|Unless)?|End(?:If|Select|Switch)|Exit(?:Do|For|While)|For(?:Each)?|If(?:Cmd|Not(?:Then)?|Then)?|Loop(?:Until|While)?|Or(?:If(?:Not)?|Unless)|Select|Switch|Unless|While)\\}/i, token: \"variable-2\", indent: true},\n\n    // FileFunc.nsh\n    {regex: /\\$\\{(?:BannerTrimPath|DirState|DriveSpace|Get(BaseName|Drives|ExeName|ExePath|FileAttributes|FileExt|FileName|FileVersion|Options|OptionsS|Parameters|Parent|Root|Size|Time)|Locate|RefreshShellIcons)\\}/i, token: \"variable-2\", dedent: true},\n\n    // Memento.nsh\n    {regex: /\\$\\{(?:Memento(?:Section(?:Done|End|Restore|Save)?|UnselectedSection))\\}/i, token: \"variable-2\", dedent: true},\n\n    // TextFunc.nsh\n    {regex: /\\$\\{(?:Config(?:Read|ReadS|Write|WriteS)|File(?:Join|ReadFromEnd|Recode)|Line(?:Find|Read|Sum)|Text(?:Compare|CompareS)|TrimNewLines)\\}/i, token: \"variable-2\", dedent: true},\n\n    // WinVer.nsh\n    {regex: /\\$\\{(?:(?:At(?:Least|Most)|Is)(?:ServicePack|Win(?:7|8|10|95|98|200(?:0|3|8(?:R2)?)|ME|NT4|Vista|XP))|Is(?:NT|Server))\\}/i, token: \"variable\", dedent: true},\n\n    // WordFunc.nsh\n    {regex: /\\$\\{(?:StrFilterS?|Version(?:Compare|Convert)|Word(?:AddS?|Find(?:(?:2|3)X)?S?|InsertS?|ReplaceS?))\\}/i, token: \"keyword\", dedent: true},\n\n    // x64.nsh\n    {regex: /\\$\\{(?:RunningX64)\\}/i, token: \"variable\", dedent: true},\n    {regex: /\\$\\{(?:Disable|Enable)X64FSRedirection\\}/i, token: \"keyword\", dedent: true},\n\n    // Line Comment\n    {regex: /(#|;).*/, token: \"comment\"},\n\n    // Block Comment\n    {regex: /\\/\\*/, token: \"comment\", next: \"comment\"},\n\n    // Operator\n    {regex: /[-+\\/*=<>!]+/, token: \"operator\"},\n\n    // Variable\n    {regex: /\\$\\w[\\w\\.]*/, token: \"variable\"},\n\n    // Constant\n    {regex: /\\${[\\!\\w\\.:-]+}/, token: \"variableName.constant\"},\n\n    // Language String\n    {regex: /\\$\\([\\!\\w\\.:-]+\\)/, token: \"atom\"}\n  ],\n  comment: [\n    {regex: /.*?\\*\\//, token: \"comment\", next: \"start\"},\n    {regex: /.*/, token: \"comment\"}\n  ],\n  languageData: {\n    name: \"nsis\",\n    indentOnInput: /^\\s*((Function|PageEx|Section|Section(Group)?)End|(\\!(endif|macroend))|\\$\\{(End(If|Unless|While)|Loop(Until)|Next)\\})$/i,\n    commentTokens: {line: \"#\", block: {open: \"/*\", close: \"*/\"}}\n  }\n});\n\n","export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    name: meta.name,\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    mergeTokens: meta.mergeTokens,\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.dontIndentStates.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$b0e313e856648e49$export$8722e3e7c666eec9","$dp0dU","simpleMode","start","regex","token","indent","dedent","next","comment","languageData","name","indentOnInput","commentTokens","line","block","open","close","$9c1dc886b83c7a05$export$cda2c962bd756348","states","$9c1dc886b83c7a05$var$ensureState","meta","states_","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","$9c1dc886b83c7a05$var$Rule","startState","pending","copyState","slice","stack","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","apply","j","backUp","join","textAfter","dontIndentStates","indexOf","rules","scan","dedentIfLineStart","m","exec","mergeTokens","Error","$9c1dc886b83c7a05$var$toRegex","val","caret","flags","RegExp","ignoreCase","source","String","$9c1dc886b83c7a05$var$asToken","replace","result"],"version":3,"file":"nsis.85e04413.js.map"}