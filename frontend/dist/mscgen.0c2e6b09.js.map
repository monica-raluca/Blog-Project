{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/mscgen.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"onVtj\", function(module, exports) {\n\n$parcel$export(module.exports, \"mscgen\", () => $0494cd342bb048ee$export$fbcaba7374b16152);\n$parcel$export(module.exports, \"msgenny\", () => $0494cd342bb048ee$export$a71fb50f46a83b65);\n$parcel$export(module.exports, \"xu\", () => $0494cd342bb048ee$export$1a6e78f0df7d0ce3);\nfunction $0494cd342bb048ee$var$mkParser(lang) {\n    return {\n        name: \"mscgen\",\n        startState: $0494cd342bb048ee$var$startStateFn,\n        copyState: $0494cd342bb048ee$var$copyStateFn,\n        token: $0494cd342bb048ee$var$produceTokenFunction(lang),\n        languageData: {\n            commentTokens: {\n                line: \"#\",\n                block: {\n                    open: \"/*\",\n                    close: \"*/\"\n                }\n            }\n        }\n    };\n}\nconst $0494cd342bb048ee$export$fbcaba7374b16152 = $0494cd342bb048ee$var$mkParser({\n    \"keywords\": [\n        \"msc\"\n    ],\n    \"options\": [\n        \"hscale\",\n        \"width\",\n        \"arcgradient\",\n        \"wordwraparcs\"\n    ],\n    \"constants\": [\n        \"true\",\n        \"false\",\n        \"on\",\n        \"off\"\n    ],\n    \"attributes\": [\n        \"label\",\n        \"idurl\",\n        \"id\",\n        \"url\",\n        \"linecolor\",\n        \"linecolour\",\n        \"textcolor\",\n        \"textcolour\",\n        \"textbgcolor\",\n        \"textbgcolour\",\n        \"arclinecolor\",\n        \"arclinecolour\",\n        \"arctextcolor\",\n        \"arctextcolour\",\n        \"arctextbgcolor\",\n        \"arctextbgcolour\",\n        \"arcskip\"\n    ],\n    \"brackets\": [\n        \"\\\\{\",\n        \"\\\\}\"\n    ],\n    \"arcsWords\": [\n        \"note\",\n        \"abox\",\n        \"rbox\",\n        \"box\"\n    ],\n    \"arcsOthers\": [\n        \"\\\\|\\\\|\\\\|\",\n        \"\\\\.\\\\.\\\\.\",\n        \"---\",\n        \"--\",\n        \"<->\",\n        \"==\",\n        \"<<=>>\",\n        \"<=>\",\n        \"\\\\.\\\\.\",\n        \"<<>>\",\n        \"::\",\n        \"<:>\",\n        \"->\",\n        \"=>>\",\n        \"=>\",\n        \">>\",\n        \":>\",\n        \"<-\",\n        \"<<=\",\n        \"<=\",\n        \"<<\",\n        \"<:\",\n        \"x-\",\n        \"-x\"\n    ],\n    \"singlecomment\": [\n        \"//\",\n        \"#\"\n    ],\n    \"operators\": [\n        \"=\"\n    ]\n});\nconst $0494cd342bb048ee$export$a71fb50f46a83b65 = $0494cd342bb048ee$var$mkParser({\n    \"keywords\": null,\n    \"options\": [\n        \"hscale\",\n        \"width\",\n        \"arcgradient\",\n        \"wordwraparcs\",\n        \"wordwrapentities\",\n        \"watermark\"\n    ],\n    \"constants\": [\n        \"true\",\n        \"false\",\n        \"on\",\n        \"off\",\n        \"auto\"\n    ],\n    \"attributes\": null,\n    \"brackets\": [\n        \"\\\\{\",\n        \"\\\\}\"\n    ],\n    \"arcsWords\": [\n        \"note\",\n        \"abox\",\n        \"rbox\",\n        \"box\",\n        \"alt\",\n        \"else\",\n        \"opt\",\n        \"break\",\n        \"par\",\n        \"seq\",\n        \"strict\",\n        \"neg\",\n        \"critical\",\n        \"ignore\",\n        \"consider\",\n        \"assert\",\n        \"loop\",\n        \"ref\",\n        \"exc\"\n    ],\n    \"arcsOthers\": [\n        \"\\\\|\\\\|\\\\|\",\n        \"\\\\.\\\\.\\\\.\",\n        \"---\",\n        \"--\",\n        \"<->\",\n        \"==\",\n        \"<<=>>\",\n        \"<=>\",\n        \"\\\\.\\\\.\",\n        \"<<>>\",\n        \"::\",\n        \"<:>\",\n        \"->\",\n        \"=>>\",\n        \"=>\",\n        \">>\",\n        \":>\",\n        \"<-\",\n        \"<<=\",\n        \"<=\",\n        \"<<\",\n        \"<:\",\n        \"x-\",\n        \"-x\"\n    ],\n    \"singlecomment\": [\n        \"//\",\n        \"#\"\n    ],\n    \"operators\": [\n        \"=\"\n    ]\n});\nconst $0494cd342bb048ee$export$1a6e78f0df7d0ce3 = $0494cd342bb048ee$var$mkParser({\n    \"keywords\": [\n        \"msc\",\n        \"xu\"\n    ],\n    \"options\": [\n        \"hscale\",\n        \"width\",\n        \"arcgradient\",\n        \"wordwraparcs\",\n        \"wordwrapentities\",\n        \"watermark\"\n    ],\n    \"constants\": [\n        \"true\",\n        \"false\",\n        \"on\",\n        \"off\",\n        \"auto\"\n    ],\n    \"attributes\": [\n        \"label\",\n        \"idurl\",\n        \"id\",\n        \"url\",\n        \"linecolor\",\n        \"linecolour\",\n        \"textcolor\",\n        \"textcolour\",\n        \"textbgcolor\",\n        \"textbgcolour\",\n        \"arclinecolor\",\n        \"arclinecolour\",\n        \"arctextcolor\",\n        \"arctextcolour\",\n        \"arctextbgcolor\",\n        \"arctextbgcolour\",\n        \"arcskip\",\n        \"title\",\n        \"deactivate\",\n        \"activate\",\n        \"activation\"\n    ],\n    \"brackets\": [\n        \"\\\\{\",\n        \"\\\\}\"\n    ],\n    \"arcsWords\": [\n        \"note\",\n        \"abox\",\n        \"rbox\",\n        \"box\",\n        \"alt\",\n        \"else\",\n        \"opt\",\n        \"break\",\n        \"par\",\n        \"seq\",\n        \"strict\",\n        \"neg\",\n        \"critical\",\n        \"ignore\",\n        \"consider\",\n        \"assert\",\n        \"loop\",\n        \"ref\",\n        \"exc\"\n    ],\n    \"arcsOthers\": [\n        \"\\\\|\\\\|\\\\|\",\n        \"\\\\.\\\\.\\\\.\",\n        \"---\",\n        \"--\",\n        \"<->\",\n        \"==\",\n        \"<<=>>\",\n        \"<=>\",\n        \"\\\\.\\\\.\",\n        \"<<>>\",\n        \"::\",\n        \"<:>\",\n        \"->\",\n        \"=>>\",\n        \"=>\",\n        \">>\",\n        \":>\",\n        \"<-\",\n        \"<<=\",\n        \"<=\",\n        \"<<\",\n        \"<:\",\n        \"x-\",\n        \"-x\"\n    ],\n    \"singlecomment\": [\n        \"//\",\n        \"#\"\n    ],\n    \"operators\": [\n        \"=\"\n    ]\n});\nfunction $0494cd342bb048ee$var$wordRegexpBoundary(pWords) {\n    return new RegExp(\"^\\\\b(\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n}\nfunction $0494cd342bb048ee$var$wordRegexp(pWords) {\n    return new RegExp(\"^(?:\" + pWords.join(\"|\") + \")\", \"i\");\n}\nfunction $0494cd342bb048ee$var$startStateFn() {\n    return {\n        inComment: false,\n        inString: false,\n        inAttributeList: false,\n        inScript: false\n    };\n}\nfunction $0494cd342bb048ee$var$copyStateFn(pState) {\n    return {\n        inComment: pState.inComment,\n        inString: pState.inString,\n        inAttributeList: pState.inAttributeList,\n        inScript: pState.inScript\n    };\n}\nfunction $0494cd342bb048ee$var$produceTokenFunction(pConfig) {\n    return function(pStream, pState) {\n        if (pStream.match($0494cd342bb048ee$var$wordRegexp(pConfig.brackets), true, true)) return \"bracket\";\n        /* comments */ if (!pState.inComment) {\n            if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n                pState.inComment = true;\n                return \"comment\";\n            }\n            if (pStream.match($0494cd342bb048ee$var$wordRegexp(pConfig.singlecomment), true, true)) {\n                pStream.skipToEnd();\n                return \"comment\";\n            }\n        }\n        if (pState.inComment) {\n            if (pStream.match(/[^\\*\\/]*\\*\\//, true, true)) pState.inComment = false;\n            else pStream.skipToEnd();\n            return \"comment\";\n        }\n        /* strings */ if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n            pState.inString = true;\n            return \"string\";\n        }\n        if (pState.inString) {\n            if (pStream.match(/[^\\\"]*\\\"/, true, true)) pState.inString = false;\n            else pStream.skipToEnd();\n            return \"string\";\n        }\n        /* keywords & operators */ if (!!pConfig.keywords && pStream.match($0494cd342bb048ee$var$wordRegexpBoundary(pConfig.keywords), true, true)) return \"keyword\";\n        if (pStream.match($0494cd342bb048ee$var$wordRegexpBoundary(pConfig.options), true, true)) return \"keyword\";\n        if (pStream.match($0494cd342bb048ee$var$wordRegexpBoundary(pConfig.arcsWords), true, true)) return \"keyword\";\n        if (pStream.match($0494cd342bb048ee$var$wordRegexp(pConfig.arcsOthers), true, true)) return \"keyword\";\n        if (!!pConfig.operators && pStream.match($0494cd342bb048ee$var$wordRegexp(pConfig.operators), true, true)) return \"operator\";\n        if (!!pConfig.constants && pStream.match($0494cd342bb048ee$var$wordRegexp(pConfig.constants), true, true)) return \"variable\";\n        /* attribute lists */ if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match('[', true, true)) {\n            pConfig.inAttributeList = true;\n            return \"bracket\";\n        }\n        if (pConfig.inAttributeList) {\n            if (pConfig.attributes !== null && pStream.match($0494cd342bb048ee$var$wordRegexpBoundary(pConfig.attributes), true, true)) return \"attribute\";\n            if (pStream.match(']', true, true)) {\n                pConfig.inAttributeList = false;\n                return \"bracket\";\n            }\n        }\n        pStream.next();\n        return null;\n    };\n}\n\n});\n\n\n//# sourceMappingURL=mscgen.0c2e6b09.js.map\n","function mkParser(lang) {\n  return {\n    name: \"mscgen\",\n    startState: startStateFn,\n    copyState: copyStateFn,\n    token: produceTokenFunction(lang),\n    languageData: {\n      commentTokens: {line: \"#\", block: {open: \"/*\", close: \"*/\"}}\n    }\n  }\n}\n\nexport const mscgen = mkParser({\n  \"keywords\" : [\"msc\"],\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\"],\n  \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"], // [ and  ] are brackets too, but these get handled in with lists\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nexport const msgenny = mkParser({\n  \"keywords\" : null,\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n  \"attributes\" : null,\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"],\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nexport const xu = mkParser({\n  \"keywords\" : [\"msc\", \"xu\"],\n  \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n  \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n  \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n  \"brackets\" : [\"\\\\{\", \"\\\\}\"],  // [ and  ] are brackets too, but these get handled in with lists\n  \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n  \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n  \"singlecomment\" : [\"//\", \"#\"],\n  \"operators\" : [\"=\"]\n})\n\nfunction wordRegexpBoundary(pWords) {\n  return new RegExp(\"^\\\\b(\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n}\n\nfunction wordRegexp(pWords) {\n  return new RegExp(\"^(?:\" + pWords.join(\"|\") + \")\", \"i\");\n}\n\nfunction startStateFn() {\n  return {\n    inComment : false,\n    inString : false,\n    inAttributeList : false,\n    inScript : false\n  };\n}\n\nfunction copyStateFn(pState) {\n  return {\n    inComment : pState.inComment,\n    inString : pState.inString,\n    inAttributeList : pState.inAttributeList,\n    inScript : pState.inScript\n  };\n}\n\nfunction produceTokenFunction(pConfig) {\n  return function(pStream, pState) {\n    if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n      return \"bracket\";\n    }\n    /* comments */\n    if (!pState.inComment) {\n      if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n        pState.inComment = true;\n        return \"comment\";\n      }\n      if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n        pStream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (pState.inComment) {\n      if (pStream.match(/[^\\*\\/]*\\*\\//, true, true))\n        pState.inComment = false;\n      else\n        pStream.skipToEnd();\n      return \"comment\";\n    }\n    /* strings */\n    if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n      pState.inString = true;\n      return \"string\";\n    }\n    if (pState.inString) {\n      if (pStream.match(/[^\\\"]*\\\"/, true, true))\n        pState.inString = false;\n      else\n        pStream.skipToEnd();\n      return \"string\";\n    }\n    /* keywords & operators */\n    if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexpBoundary(pConfig.options), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true))\n      return \"keyword\";\n\n    if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true))\n      return \"keyword\";\n\n    if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true))\n      return \"operator\";\n\n    if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true))\n      return \"variable\";\n\n    /* attribute lists */\n    if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match('[', true, true)) {\n      pConfig.inAttributeList = true;\n      return \"bracket\";\n    }\n    if (pConfig.inAttributeList) {\n      if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n        return \"attribute\";\n      }\n      if (pStream.match(']', true, true)) {\n        pConfig.inAttributeList = false;\n        return \"bracket\";\n      }\n    }\n\n    pStream.next();\n    return null\n  };\n}\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRegister","parcelRequire","$parcel$global","globalThis","register","module","exports","$0494cd342bb048ee$var$mkParser","lang","pConfig","name","startState","$0494cd342bb048ee$var$startStateFn","copyState","$0494cd342bb048ee$var$copyStateFn","token","pStream","pState","match","$0494cd342bb048ee$var$wordRegexp","brackets","inComment","singlecomment","skipToEnd","inString","keywords","$0494cd342bb048ee$var$wordRegexpBoundary","options","arcsWords","arcsOthers","operators","constants","inAttributeList","attributes","next","languageData","commentTokens","line","block","open","close","$0494cd342bb048ee$export$fbcaba7374b16152","$0494cd342bb048ee$export$a71fb50f46a83b65","$0494cd342bb048ee$export$1a6e78f0df7d0ce3","pWords","RegExp","join","inScript"],"version":3,"file":"mscgen.0c2e6b09.js.map"}