{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/css.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"eapvQ\", function(module, exports) {\n\n$parcel$export(module.exports, \"gss\", () => $a505ca269043c5f6$export$2c0d8580e75af113);\nfunction $a505ca269043c5f6$export$43cdd2f42edcd6b7(parserConfig) {\n    parserConfig = {\n        ...$a505ca269043c5f6$var$defaults,\n        ...parserConfig\n    };\n    var inline = parserConfig.inline;\n    var tokenHooks = parserConfig.tokenHooks, documentTypes = parserConfig.documentTypes || {}, mediaTypes = parserConfig.mediaTypes || {}, mediaFeatures = parserConfig.mediaFeatures || {}, mediaValueKeywords = parserConfig.mediaValueKeywords || {}, propertyKeywords = parserConfig.propertyKeywords || {}, nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {}, fontProperties = parserConfig.fontProperties || {}, counterDescriptors = parserConfig.counterDescriptors || {}, colorKeywords = parserConfig.colorKeywords || {}, valueKeywords = parserConfig.valueKeywords || {}, allowNested = parserConfig.allowNested, lineComment = parserConfig.lineComment, supportsAtComponent = parserConfig.supportsAtComponent === true, highlightNonStandardPropertyKeywords = parserConfig.highlightNonStandardPropertyKeywords !== false;\n    var type, override;\n    function ret(style, tp) {\n        type = tp;\n        return style;\n    }\n    // Tokenizers\n    function tokenBase(stream, state) {\n        var ch = stream.next();\n        if (tokenHooks[ch]) {\n            var result = tokenHooks[ch](stream, state);\n            if (result !== false) return result;\n        }\n        if (ch == \"@\") {\n            stream.eatWhile(/[\\w\\\\\\-]/);\n            return ret(\"def\", stream.current());\n        } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) return ret(null, \"compare\");\n        else if (ch == \"\\\"\" || ch == \"'\") {\n            state.tokenize = tokenString(ch);\n            return state.tokenize(stream, state);\n        } else if (ch == \"#\") {\n            stream.eatWhile(/[\\w\\\\\\-]/);\n            return ret(\"atom\", \"hash\");\n        } else if (ch == \"!\") {\n            stream.match(/^\\s*\\w*/);\n            return ret(\"keyword\", \"important\");\n        } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\n            stream.eatWhile(/[\\w.%]/);\n            return ret(\"number\", \"unit\");\n        } else if (ch === \"-\") {\n            if (/[\\d.]/.test(stream.peek())) {\n                stream.eatWhile(/[\\w.%]/);\n                return ret(\"number\", \"unit\");\n            } else if (stream.match(/^-[\\w\\\\\\-]*/)) {\n                stream.eatWhile(/[\\w\\\\\\-]/);\n                if (stream.match(/^\\s*:/, false)) return ret(\"def\", \"variable-definition\");\n                return ret(\"variableName\", \"variable\");\n            } else if (stream.match(/^\\w+-/)) return ret(\"meta\", \"meta\");\n        } else if (/[,+>*\\/]/.test(ch)) return ret(null, \"select-op\");\n        else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) return ret(\"qualifier\", \"qualifier\");\n        else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) return ret(null, ch);\n        else if (stream.match(/^[\\w-.]+(?=\\()/)) {\n            if (/^(url(-prefix)?|domain|regexp)$/i.test(stream.current())) state.tokenize = tokenParenthesized;\n            return ret(\"variableName.function\", \"variable\");\n        } else if (/[\\w\\\\\\-]/.test(ch)) {\n            stream.eatWhile(/[\\w\\\\\\-]/);\n            return ret(\"property\", \"word\");\n        } else return ret(null, null);\n    }\n    function tokenString(quote) {\n        return function(stream, state) {\n            var escaped = false, ch;\n            while((ch = stream.next()) != null){\n                if (ch == quote && !escaped) {\n                    if (quote == \")\") stream.backUp(1);\n                    break;\n                }\n                escaped = !escaped && ch == \"\\\\\";\n            }\n            if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n            return ret(\"string\", \"string\");\n        };\n    }\n    function tokenParenthesized(stream, state) {\n        stream.next(); // Must be '('\n        if (!stream.match(/^\\s*[\\\"\\')]/, false)) state.tokenize = tokenString(\")\");\n        else state.tokenize = null;\n        return ret(null, \"(\");\n    }\n    // Context management\n    function Context(type, indent, prev) {\n        this.type = type;\n        this.indent = indent;\n        this.prev = prev;\n    }\n    function pushContext(state, stream, type, indent) {\n        state.context = new Context(type, stream.indentation() + (indent === false ? 0 : stream.indentUnit), state.context);\n        return type;\n    }\n    function popContext(state) {\n        if (state.context.prev) state.context = state.context.prev;\n        return state.context.type;\n    }\n    function pass(type, stream, state) {\n        return states[state.context.type](type, stream, state);\n    }\n    function popAndPass(type, stream, state, n) {\n        for(var i = n || 1; i > 0; i--)state.context = state.context.prev;\n        return pass(type, stream, state);\n    }\n    // Parser\n    function wordAsValue(stream) {\n        var word = stream.current().toLowerCase();\n        if (valueKeywords.hasOwnProperty(word)) override = \"atom\";\n        else if (colorKeywords.hasOwnProperty(word)) override = \"keyword\";\n        else override = \"variable\";\n    }\n    var states = {};\n    states.top = function(type, stream, state) {\n        if (type == \"{\") return pushContext(state, stream, \"block\");\n        else if (type == \"}\" && state.context.prev) return popContext(state);\n        else if (supportsAtComponent && /@component/i.test(type)) return pushContext(state, stream, \"atComponentBlock\");\n        else if (/^@(-moz-)?document$/i.test(type)) return pushContext(state, stream, \"documentTypes\");\n        else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) return pushContext(state, stream, \"atBlock\");\n        else if (/^@(font-face|counter-style)/i.test(type)) {\n            state.stateArg = type;\n            return \"restricted_atBlock_before\";\n        } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) return \"keyframes\";\n        else if (type && type.charAt(0) == \"@\") return pushContext(state, stream, \"at\");\n        else if (type == \"hash\") override = \"builtin\";\n        else if (type == \"word\") override = \"tag\";\n        else if (type == \"variable-definition\") return \"maybeprop\";\n        else if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n        else if (type == \":\") return \"pseudo\";\n        else if (allowNested && type == \"(\") return pushContext(state, stream, \"parens\");\n        return state.context.type;\n    };\n    states.block = function(type, stream, state) {\n        if (type == \"word\") {\n            var word = stream.current().toLowerCase();\n            if (propertyKeywords.hasOwnProperty(word)) {\n                override = \"property\";\n                return \"maybeprop\";\n            } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\n                override = highlightNonStandardPropertyKeywords ? \"string.special\" : \"property\";\n                return \"maybeprop\";\n            } else if (allowNested) {\n                override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\n                return \"block\";\n            } else {\n                override = \"error\";\n                return \"maybeprop\";\n            }\n        } else if (type == \"meta\") return \"block\";\n        else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\n            override = \"error\";\n            return \"block\";\n        } else return states.top(type, stream, state);\n    };\n    states.maybeprop = function(type, stream, state) {\n        if (type == \":\") return pushContext(state, stream, \"prop\");\n        return pass(type, stream, state);\n    };\n    states.prop = function(type, stream, state) {\n        if (type == \";\") return popContext(state);\n        if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\n        if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\n        if (type == \"(\") return pushContext(state, stream, \"parens\");\n        if (type == \"hash\" && !/^#([0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})$/.test(stream.current())) override = \"error\";\n        else if (type == \"word\") wordAsValue(stream);\n        else if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n        return \"prop\";\n    };\n    states.propBlock = function(type, _stream, state) {\n        if (type == \"}\") return popContext(state);\n        if (type == \"word\") {\n            override = \"property\";\n            return \"maybeprop\";\n        }\n        return state.context.type;\n    };\n    states.parens = function(type, stream, state) {\n        if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n        if (type == \")\") return popContext(state);\n        if (type == \"(\") return pushContext(state, stream, \"parens\");\n        if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n        if (type == \"word\") wordAsValue(stream);\n        return \"parens\";\n    };\n    states.pseudo = function(type, stream, state) {\n        if (type == \"meta\") return \"pseudo\";\n        if (type == \"word\") {\n            override = \"variableName.constant\";\n            return state.context.type;\n        }\n        return pass(type, stream, state);\n    };\n    states.documentTypes = function(type, stream, state) {\n        if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\n            override = \"tag\";\n            return state.context.type;\n        } else return states.atBlock(type, stream, state);\n    };\n    states.atBlock = function(type, stream, state) {\n        if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n        if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\n        if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\n        if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n        if (type == \"word\") {\n            var word = stream.current().toLowerCase();\n            if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\") override = \"keyword\";\n            else if (mediaTypes.hasOwnProperty(word)) override = \"attribute\";\n            else if (mediaFeatures.hasOwnProperty(word)) override = \"property\";\n            else if (mediaValueKeywords.hasOwnProperty(word)) override = \"keyword\";\n            else if (propertyKeywords.hasOwnProperty(word)) override = \"property\";\n            else if (nonStandardPropertyKeywords.hasOwnProperty(word)) override = highlightNonStandardPropertyKeywords ? \"string.special\" : \"property\";\n            else if (valueKeywords.hasOwnProperty(word)) override = \"atom\";\n            else if (colorKeywords.hasOwnProperty(word)) override = \"keyword\";\n            else override = \"error\";\n        }\n        return state.context.type;\n    };\n    states.atComponentBlock = function(type, stream, state) {\n        if (type == \"}\") return popAndPass(type, stream, state);\n        if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\n        if (type == \"word\") override = \"error\";\n        return state.context.type;\n    };\n    states.atBlock_parens = function(type, stream, state) {\n        if (type == \")\") return popContext(state);\n        if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\n        return states.atBlock(type, stream, state);\n    };\n    states.restricted_atBlock_before = function(type, stream, state) {\n        if (type == \"{\") return pushContext(state, stream, \"restricted_atBlock\");\n        if (type == \"word\" && state.stateArg == \"@counter-style\") {\n            override = \"variable\";\n            return \"restricted_atBlock_before\";\n        }\n        return pass(type, stream, state);\n    };\n    states.restricted_atBlock = function(type, stream, state) {\n        if (type == \"}\") {\n            state.stateArg = null;\n            return popContext(state);\n        }\n        if (type == \"word\") {\n            if (state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase()) || state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())) override = \"error\";\n            else override = \"property\";\n            return \"maybeprop\";\n        }\n        return \"restricted_atBlock\";\n    };\n    states.keyframes = function(type, stream, state) {\n        if (type == \"word\") {\n            override = \"variable\";\n            return \"keyframes\";\n        }\n        if (type == \"{\") return pushContext(state, stream, \"top\");\n        return pass(type, stream, state);\n    };\n    states.at = function(type, stream, state) {\n        if (type == \";\") return popContext(state);\n        if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n        if (type == \"word\") override = \"tag\";\n        else if (type == \"hash\") override = \"builtin\";\n        return \"at\";\n    };\n    states.interpolation = function(type, stream, state) {\n        if (type == \"}\") return popContext(state);\n        if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\n        if (type == \"word\") override = \"variable\";\n        else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\n        return \"interpolation\";\n    };\n    return {\n        name: parserConfig.name,\n        startState: function() {\n            return {\n                tokenize: null,\n                state: inline ? \"block\" : \"top\",\n                stateArg: null,\n                context: new Context(inline ? \"block\" : \"top\", 0, null)\n            };\n        },\n        token: function(stream, state) {\n            if (!state.tokenize && stream.eatSpace()) return null;\n            var style = (state.tokenize || tokenBase)(stream, state);\n            if (style && typeof style == \"object\") {\n                type = style[1];\n                style = style[0];\n            }\n            override = style;\n            if (type != \"comment\") state.state = states[state.state](type, stream, state);\n            return override;\n        },\n        indent: function(state, textAfter, iCx) {\n            var cx = state.context, ch = textAfter && textAfter.charAt(0);\n            var indent = cx.indent;\n            if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\n            if (cx.prev) {\n                if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" || cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\n                    // Resume indentation from parent context.\n                    cx = cx.prev;\n                    indent = cx.indent;\n                } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") || ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) // Dedent relative to current context.\n                indent = Math.max(0, cx.indent - iCx.unit);\n            }\n            return indent;\n        },\n        languageData: {\n            indentOnInput: /^\\s*\\}$/,\n            commentTokens: {\n                line: lineComment,\n                block: {\n                    open: \"/*\",\n                    close: \"*/\"\n                }\n            },\n            autocomplete: $a505ca269043c5f6$var$allWords\n        }\n    };\n}\nfunction $a505ca269043c5f6$var$keySet(array) {\n    var keys = {};\n    for(var i = 0; i < array.length; ++i)keys[array[i].toLowerCase()] = true;\n    return keys;\n}\nvar $a505ca269043c5f6$var$documentTypes_ = [\n    \"domain\",\n    \"regexp\",\n    \"url\",\n    \"url-prefix\"\n], $a505ca269043c5f6$var$documentTypes = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$documentTypes_);\nvar $a505ca269043c5f6$var$mediaTypes_ = [\n    \"all\",\n    \"aural\",\n    \"braille\",\n    \"handheld\",\n    \"print\",\n    \"projection\",\n    \"screen\",\n    \"tty\",\n    \"tv\",\n    \"embossed\"\n], $a505ca269043c5f6$var$mediaTypes = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$mediaTypes_);\nvar $a505ca269043c5f6$var$mediaFeatures_ = [\n    \"width\",\n    \"min-width\",\n    \"max-width\",\n    \"height\",\n    \"min-height\",\n    \"max-height\",\n    \"device-width\",\n    \"min-device-width\",\n    \"max-device-width\",\n    \"device-height\",\n    \"min-device-height\",\n    \"max-device-height\",\n    \"aspect-ratio\",\n    \"min-aspect-ratio\",\n    \"max-aspect-ratio\",\n    \"device-aspect-ratio\",\n    \"min-device-aspect-ratio\",\n    \"max-device-aspect-ratio\",\n    \"color\",\n    \"min-color\",\n    \"max-color\",\n    \"color-index\",\n    \"min-color-index\",\n    \"max-color-index\",\n    \"monochrome\",\n    \"min-monochrome\",\n    \"max-monochrome\",\n    \"resolution\",\n    \"min-resolution\",\n    \"max-resolution\",\n    \"scan\",\n    \"grid\",\n    \"orientation\",\n    \"device-pixel-ratio\",\n    \"min-device-pixel-ratio\",\n    \"max-device-pixel-ratio\",\n    \"pointer\",\n    \"any-pointer\",\n    \"hover\",\n    \"any-hover\",\n    \"prefers-color-scheme\",\n    \"dynamic-range\",\n    \"video-dynamic-range\"\n], $a505ca269043c5f6$var$mediaFeatures = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$mediaFeatures_);\nvar $a505ca269043c5f6$var$mediaValueKeywords_ = [\n    \"landscape\",\n    \"portrait\",\n    \"none\",\n    \"coarse\",\n    \"fine\",\n    \"on-demand\",\n    \"hover\",\n    \"interlace\",\n    \"progressive\",\n    \"dark\",\n    \"light\",\n    \"standard\",\n    \"high\"\n], $a505ca269043c5f6$var$mediaValueKeywords = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$mediaValueKeywords_);\nvar $a505ca269043c5f6$var$propertyKeywords_ = [\n    \"align-content\",\n    \"align-items\",\n    \"align-self\",\n    \"alignment-adjust\",\n    \"alignment-baseline\",\n    \"all\",\n    \"anchor-point\",\n    \"animation\",\n    \"animation-delay\",\n    \"animation-direction\",\n    \"animation-duration\",\n    \"animation-fill-mode\",\n    \"animation-iteration-count\",\n    \"animation-name\",\n    \"animation-play-state\",\n    \"animation-timing-function\",\n    \"appearance\",\n    \"azimuth\",\n    \"backdrop-filter\",\n    \"backface-visibility\",\n    \"background\",\n    \"background-attachment\",\n    \"background-blend-mode\",\n    \"background-clip\",\n    \"background-color\",\n    \"background-image\",\n    \"background-origin\",\n    \"background-position\",\n    \"background-position-x\",\n    \"background-position-y\",\n    \"background-repeat\",\n    \"background-size\",\n    \"baseline-shift\",\n    \"binding\",\n    \"bleed\",\n    \"block-size\",\n    \"bookmark-label\",\n    \"bookmark-level\",\n    \"bookmark-state\",\n    \"bookmark-target\",\n    \"border\",\n    \"border-bottom\",\n    \"border-bottom-color\",\n    \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-style\",\n    \"border-bottom-width\",\n    \"border-collapse\",\n    \"border-color\",\n    \"border-image\",\n    \"border-image-outset\",\n    \"border-image-repeat\",\n    \"border-image-slice\",\n    \"border-image-source\",\n    \"border-image-width\",\n    \"border-left\",\n    \"border-left-color\",\n    \"border-left-style\",\n    \"border-left-width\",\n    \"border-radius\",\n    \"border-right\",\n    \"border-right-color\",\n    \"border-right-style\",\n    \"border-right-width\",\n    \"border-spacing\",\n    \"border-style\",\n    \"border-top\",\n    \"border-top-color\",\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-top-style\",\n    \"border-top-width\",\n    \"border-width\",\n    \"bottom\",\n    \"box-decoration-break\",\n    \"box-shadow\",\n    \"box-sizing\",\n    \"break-after\",\n    \"break-before\",\n    \"break-inside\",\n    \"caption-side\",\n    \"caret-color\",\n    \"clear\",\n    \"clip\",\n    \"color\",\n    \"color-profile\",\n    \"column-count\",\n    \"column-fill\",\n    \"column-gap\",\n    \"column-rule\",\n    \"column-rule-color\",\n    \"column-rule-style\",\n    \"column-rule-width\",\n    \"column-span\",\n    \"column-width\",\n    \"columns\",\n    \"contain\",\n    \"content\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"crop\",\n    \"cue\",\n    \"cue-after\",\n    \"cue-before\",\n    \"cursor\",\n    \"direction\",\n    \"display\",\n    \"dominant-baseline\",\n    \"drop-initial-after-adjust\",\n    \"drop-initial-after-align\",\n    \"drop-initial-before-adjust\",\n    \"drop-initial-before-align\",\n    \"drop-initial-size\",\n    \"drop-initial-value\",\n    \"elevation\",\n    \"empty-cells\",\n    \"fit\",\n    \"fit-content\",\n    \"fit-position\",\n    \"flex\",\n    \"flex-basis\",\n    \"flex-direction\",\n    \"flex-flow\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"flex-wrap\",\n    \"float\",\n    \"float-offset\",\n    \"flow-from\",\n    \"flow-into\",\n    \"font\",\n    \"font-family\",\n    \"font-feature-settings\",\n    \"font-kerning\",\n    \"font-language-override\",\n    \"font-optical-sizing\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-synthesis\",\n    \"font-variant\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-variant-position\",\n    \"font-variation-settings\",\n    \"font-weight\",\n    \"gap\",\n    \"grid\",\n    \"grid-area\",\n    \"grid-auto-columns\",\n    \"grid-auto-flow\",\n    \"grid-auto-rows\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-gap\",\n    \"grid-column-start\",\n    \"grid-gap\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-gap\",\n    \"grid-row-start\",\n    \"grid-template\",\n    \"grid-template-areas\",\n    \"grid-template-columns\",\n    \"grid-template-rows\",\n    \"hanging-punctuation\",\n    \"height\",\n    \"hyphens\",\n    \"icon\",\n    \"image-orientation\",\n    \"image-rendering\",\n    \"image-resolution\",\n    \"inline-box-align\",\n    \"inset\",\n    \"inset-block\",\n    \"inset-block-end\",\n    \"inset-block-start\",\n    \"inset-inline\",\n    \"inset-inline-end\",\n    \"inset-inline-start\",\n    \"isolation\",\n    \"justify-content\",\n    \"justify-items\",\n    \"justify-self\",\n    \"left\",\n    \"letter-spacing\",\n    \"line-break\",\n    \"line-height\",\n    \"line-height-step\",\n    \"line-stacking\",\n    \"line-stacking-ruby\",\n    \"line-stacking-shift\",\n    \"line-stacking-strategy\",\n    \"list-style\",\n    \"list-style-image\",\n    \"list-style-position\",\n    \"list-style-type\",\n    \"margin\",\n    \"margin-bottom\",\n    \"margin-left\",\n    \"margin-right\",\n    \"margin-top\",\n    \"marks\",\n    \"marquee-direction\",\n    \"marquee-loop\",\n    \"marquee-play-count\",\n    \"marquee-speed\",\n    \"marquee-style\",\n    \"mask-clip\",\n    \"mask-composite\",\n    \"mask-image\",\n    \"mask-mode\",\n    \"mask-origin\",\n    \"mask-position\",\n    \"mask-repeat\",\n    \"mask-size\",\n    \"mask-type\",\n    \"max-block-size\",\n    \"max-height\",\n    \"max-inline-size\",\n    \"max-width\",\n    \"min-block-size\",\n    \"min-height\",\n    \"min-inline-size\",\n    \"min-width\",\n    \"mix-blend-mode\",\n    \"move-to\",\n    \"nav-down\",\n    \"nav-index\",\n    \"nav-left\",\n    \"nav-right\",\n    \"nav-up\",\n    \"object-fit\",\n    \"object-position\",\n    \"offset\",\n    \"offset-anchor\",\n    \"offset-distance\",\n    \"offset-path\",\n    \"offset-position\",\n    \"offset-rotate\",\n    \"opacity\",\n    \"order\",\n    \"orphans\",\n    \"outline\",\n    \"outline-color\",\n    \"outline-offset\",\n    \"outline-style\",\n    \"outline-width\",\n    \"overflow\",\n    \"overflow-style\",\n    \"overflow-wrap\",\n    \"overflow-x\",\n    \"overflow-y\",\n    \"padding\",\n    \"padding-bottom\",\n    \"padding-left\",\n    \"padding-right\",\n    \"padding-top\",\n    \"page\",\n    \"page-break-after\",\n    \"page-break-before\",\n    \"page-break-inside\",\n    \"page-policy\",\n    \"pause\",\n    \"pause-after\",\n    \"pause-before\",\n    \"perspective\",\n    \"perspective-origin\",\n    \"pitch\",\n    \"pitch-range\",\n    \"place-content\",\n    \"place-items\",\n    \"place-self\",\n    \"play-during\",\n    \"position\",\n    \"presentation-level\",\n    \"punctuation-trim\",\n    \"quotes\",\n    \"region-break-after\",\n    \"region-break-before\",\n    \"region-break-inside\",\n    \"region-fragment\",\n    \"rendering-intent\",\n    \"resize\",\n    \"rest\",\n    \"rest-after\",\n    \"rest-before\",\n    \"richness\",\n    \"right\",\n    \"rotate\",\n    \"rotation\",\n    \"rotation-point\",\n    \"row-gap\",\n    \"ruby-align\",\n    \"ruby-overhang\",\n    \"ruby-position\",\n    \"ruby-span\",\n    \"scale\",\n    \"scroll-behavior\",\n    \"scroll-margin\",\n    \"scroll-margin-block\",\n    \"scroll-margin-block-end\",\n    \"scroll-margin-block-start\",\n    \"scroll-margin-bottom\",\n    \"scroll-margin-inline\",\n    \"scroll-margin-inline-end\",\n    \"scroll-margin-inline-start\",\n    \"scroll-margin-left\",\n    \"scroll-margin-right\",\n    \"scroll-margin-top\",\n    \"scroll-padding\",\n    \"scroll-padding-block\",\n    \"scroll-padding-block-end\",\n    \"scroll-padding-block-start\",\n    \"scroll-padding-bottom\",\n    \"scroll-padding-inline\",\n    \"scroll-padding-inline-end\",\n    \"scroll-padding-inline-start\",\n    \"scroll-padding-left\",\n    \"scroll-padding-right\",\n    \"scroll-padding-top\",\n    \"scroll-snap-align\",\n    \"scroll-snap-type\",\n    \"shape-image-threshold\",\n    \"shape-inside\",\n    \"shape-margin\",\n    \"shape-outside\",\n    \"size\",\n    \"speak\",\n    \"speak-as\",\n    \"speak-header\",\n    \"speak-numeral\",\n    \"speak-punctuation\",\n    \"speech-rate\",\n    \"stress\",\n    \"string-set\",\n    \"tab-size\",\n    \"table-layout\",\n    \"target\",\n    \"target-name\",\n    \"target-new\",\n    \"target-position\",\n    \"text-align\",\n    \"text-align-last\",\n    \"text-combine-upright\",\n    \"text-decoration\",\n    \"text-decoration-color\",\n    \"text-decoration-line\",\n    \"text-decoration-skip\",\n    \"text-decoration-skip-ink\",\n    \"text-decoration-style\",\n    \"text-emphasis\",\n    \"text-emphasis-color\",\n    \"text-emphasis-position\",\n    \"text-emphasis-style\",\n    \"text-height\",\n    \"text-indent\",\n    \"text-justify\",\n    \"text-orientation\",\n    \"text-outline\",\n    \"text-overflow\",\n    \"text-rendering\",\n    \"text-shadow\",\n    \"text-size-adjust\",\n    \"text-space-collapse\",\n    \"text-transform\",\n    \"text-underline-position\",\n    \"text-wrap\",\n    \"top\",\n    \"touch-action\",\n    \"transform\",\n    \"transform-origin\",\n    \"transform-style\",\n    \"transition\",\n    \"transition-delay\",\n    \"transition-duration\",\n    \"transition-property\",\n    \"transition-timing-function\",\n    \"translate\",\n    \"unicode-bidi\",\n    \"user-select\",\n    \"vertical-align\",\n    \"visibility\",\n    \"voice-balance\",\n    \"voice-duration\",\n    \"voice-family\",\n    \"voice-pitch\",\n    \"voice-range\",\n    \"voice-rate\",\n    \"voice-stress\",\n    \"voice-volume\",\n    \"volume\",\n    \"white-space\",\n    \"widows\",\n    \"width\",\n    \"will-change\",\n    \"word-break\",\n    \"word-spacing\",\n    \"word-wrap\",\n    \"writing-mode\",\n    \"z-index\",\n    // SVG-specific\n    \"clip-path\",\n    \"clip-rule\",\n    \"mask\",\n    \"enable-background\",\n    \"filter\",\n    \"flood-color\",\n    \"flood-opacity\",\n    \"lighting-color\",\n    \"stop-color\",\n    \"stop-opacity\",\n    \"pointer-events\",\n    \"color-interpolation\",\n    \"color-interpolation-filters\",\n    \"color-rendering\",\n    \"fill\",\n    \"fill-opacity\",\n    \"fill-rule\",\n    \"image-rendering\",\n    \"marker\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"marker-start\",\n    \"paint-order\",\n    \"shape-rendering\",\n    \"stroke\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-linecap\",\n    \"stroke-linejoin\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\",\n    \"text-rendering\",\n    \"baseline-shift\",\n    \"dominant-baseline\",\n    \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\",\n    \"text-anchor\",\n    \"writing-mode\"\n], $a505ca269043c5f6$var$propertyKeywords = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$propertyKeywords_);\nvar $a505ca269043c5f6$var$nonStandardPropertyKeywords_ = [\n    \"accent-color\",\n    \"aspect-ratio\",\n    \"border-block\",\n    \"border-block-color\",\n    \"border-block-end\",\n    \"border-block-end-color\",\n    \"border-block-end-style\",\n    \"border-block-end-width\",\n    \"border-block-start\",\n    \"border-block-start-color\",\n    \"border-block-start-style\",\n    \"border-block-start-width\",\n    \"border-block-style\",\n    \"border-block-width\",\n    \"border-inline\",\n    \"border-inline-color\",\n    \"border-inline-end\",\n    \"border-inline-end-color\",\n    \"border-inline-end-style\",\n    \"border-inline-end-width\",\n    \"border-inline-start\",\n    \"border-inline-start-color\",\n    \"border-inline-start-style\",\n    \"border-inline-start-width\",\n    \"border-inline-style\",\n    \"border-inline-width\",\n    \"content-visibility\",\n    \"margin-block\",\n    \"margin-block-end\",\n    \"margin-block-start\",\n    \"margin-inline\",\n    \"margin-inline-end\",\n    \"margin-inline-start\",\n    \"overflow-anchor\",\n    \"overscroll-behavior\",\n    \"padding-block\",\n    \"padding-block-end\",\n    \"padding-block-start\",\n    \"padding-inline\",\n    \"padding-inline-end\",\n    \"padding-inline-start\",\n    \"scroll-snap-stop\",\n    \"scrollbar-3d-light-color\",\n    \"scrollbar-arrow-color\",\n    \"scrollbar-base-color\",\n    \"scrollbar-dark-shadow-color\",\n    \"scrollbar-face-color\",\n    \"scrollbar-highlight-color\",\n    \"scrollbar-shadow-color\",\n    \"scrollbar-track-color\",\n    \"searchfield-cancel-button\",\n    \"searchfield-decoration\",\n    \"searchfield-results-button\",\n    \"searchfield-results-decoration\",\n    \"shape-inside\",\n    \"zoom\"\n], $a505ca269043c5f6$var$nonStandardPropertyKeywords = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$nonStandardPropertyKeywords_);\nvar $a505ca269043c5f6$var$fontProperties_ = [\n    \"font-display\",\n    \"font-family\",\n    \"src\",\n    \"unicode-range\",\n    \"font-variant\",\n    \"font-feature-settings\",\n    \"font-stretch\",\n    \"font-weight\",\n    \"font-style\"\n], $a505ca269043c5f6$var$fontProperties = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$fontProperties_);\nvar $a505ca269043c5f6$var$counterDescriptors_ = [\n    \"additive-symbols\",\n    \"fallback\",\n    \"negative\",\n    \"pad\",\n    \"prefix\",\n    \"range\",\n    \"speak-as\",\n    \"suffix\",\n    \"symbols\",\n    \"system\"\n], $a505ca269043c5f6$var$counterDescriptors = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$counterDescriptors_);\nvar $a505ca269043c5f6$var$colorKeywords_ = [\n    \"aliceblue\",\n    \"antiquewhite\",\n    \"aqua\",\n    \"aquamarine\",\n    \"azure\",\n    \"beige\",\n    \"bisque\",\n    \"black\",\n    \"blanchedalmond\",\n    \"blue\",\n    \"blueviolet\",\n    \"brown\",\n    \"burlywood\",\n    \"cadetblue\",\n    \"chartreuse\",\n    \"chocolate\",\n    \"coral\",\n    \"cornflowerblue\",\n    \"cornsilk\",\n    \"crimson\",\n    \"cyan\",\n    \"darkblue\",\n    \"darkcyan\",\n    \"darkgoldenrod\",\n    \"darkgray\",\n    \"darkgreen\",\n    \"darkgrey\",\n    \"darkkhaki\",\n    \"darkmagenta\",\n    \"darkolivegreen\",\n    \"darkorange\",\n    \"darkorchid\",\n    \"darkred\",\n    \"darksalmon\",\n    \"darkseagreen\",\n    \"darkslateblue\",\n    \"darkslategray\",\n    \"darkslategrey\",\n    \"darkturquoise\",\n    \"darkviolet\",\n    \"deeppink\",\n    \"deepskyblue\",\n    \"dimgray\",\n    \"dimgrey\",\n    \"dodgerblue\",\n    \"firebrick\",\n    \"floralwhite\",\n    \"forestgreen\",\n    \"fuchsia\",\n    \"gainsboro\",\n    \"ghostwhite\",\n    \"gold\",\n    \"goldenrod\",\n    \"gray\",\n    \"grey\",\n    \"green\",\n    \"greenyellow\",\n    \"honeydew\",\n    \"hotpink\",\n    \"indianred\",\n    \"indigo\",\n    \"ivory\",\n    \"khaki\",\n    \"lavender\",\n    \"lavenderblush\",\n    \"lawngreen\",\n    \"lemonchiffon\",\n    \"lightblue\",\n    \"lightcoral\",\n    \"lightcyan\",\n    \"lightgoldenrodyellow\",\n    \"lightgray\",\n    \"lightgreen\",\n    \"lightgrey\",\n    \"lightpink\",\n    \"lightsalmon\",\n    \"lightseagreen\",\n    \"lightskyblue\",\n    \"lightslategray\",\n    \"lightslategrey\",\n    \"lightsteelblue\",\n    \"lightyellow\",\n    \"lime\",\n    \"limegreen\",\n    \"linen\",\n    \"magenta\",\n    \"maroon\",\n    \"mediumaquamarine\",\n    \"mediumblue\",\n    \"mediumorchid\",\n    \"mediumpurple\",\n    \"mediumseagreen\",\n    \"mediumslateblue\",\n    \"mediumspringgreen\",\n    \"mediumturquoise\",\n    \"mediumvioletred\",\n    \"midnightblue\",\n    \"mintcream\",\n    \"mistyrose\",\n    \"moccasin\",\n    \"navajowhite\",\n    \"navy\",\n    \"oldlace\",\n    \"olive\",\n    \"olivedrab\",\n    \"orange\",\n    \"orangered\",\n    \"orchid\",\n    \"palegoldenrod\",\n    \"palegreen\",\n    \"paleturquoise\",\n    \"palevioletred\",\n    \"papayawhip\",\n    \"peachpuff\",\n    \"peru\",\n    \"pink\",\n    \"plum\",\n    \"powderblue\",\n    \"purple\",\n    \"rebeccapurple\",\n    \"red\",\n    \"rosybrown\",\n    \"royalblue\",\n    \"saddlebrown\",\n    \"salmon\",\n    \"sandybrown\",\n    \"seagreen\",\n    \"seashell\",\n    \"sienna\",\n    \"silver\",\n    \"skyblue\",\n    \"slateblue\",\n    \"slategray\",\n    \"slategrey\",\n    \"snow\",\n    \"springgreen\",\n    \"steelblue\",\n    \"tan\",\n    \"teal\",\n    \"thistle\",\n    \"tomato\",\n    \"turquoise\",\n    \"violet\",\n    \"wheat\",\n    \"white\",\n    \"whitesmoke\",\n    \"yellow\",\n    \"yellowgreen\"\n], $a505ca269043c5f6$var$colorKeywords = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$colorKeywords_);\nvar $a505ca269043c5f6$var$valueKeywords_ = [\n    \"above\",\n    \"absolute\",\n    \"activeborder\",\n    \"additive\",\n    \"activecaption\",\n    \"afar\",\n    \"after-white-space\",\n    \"ahead\",\n    \"alias\",\n    \"all\",\n    \"all-scroll\",\n    \"alphabetic\",\n    \"alternate\",\n    \"always\",\n    \"amharic\",\n    \"amharic-abegede\",\n    \"antialiased\",\n    \"appworkspace\",\n    \"arabic-indic\",\n    \"armenian\",\n    \"asterisks\",\n    \"attr\",\n    \"auto\",\n    \"auto-flow\",\n    \"avoid\",\n    \"avoid-column\",\n    \"avoid-page\",\n    \"avoid-region\",\n    \"axis-pan\",\n    \"background\",\n    \"backwards\",\n    \"baseline\",\n    \"below\",\n    \"bidi-override\",\n    \"binary\",\n    \"bengali\",\n    \"blink\",\n    \"block\",\n    \"block-axis\",\n    \"blur\",\n    \"bold\",\n    \"bolder\",\n    \"border\",\n    \"border-box\",\n    \"both\",\n    \"bottom\",\n    \"break\",\n    \"break-all\",\n    \"break-word\",\n    \"brightness\",\n    \"bullets\",\n    \"button\",\n    \"buttonface\",\n    \"buttonhighlight\",\n    \"buttonshadow\",\n    \"buttontext\",\n    \"calc\",\n    \"cambodian\",\n    \"capitalize\",\n    \"caps-lock-indicator\",\n    \"caption\",\n    \"captiontext\",\n    \"caret\",\n    \"cell\",\n    \"center\",\n    \"checkbox\",\n    \"circle\",\n    \"cjk-decimal\",\n    \"cjk-earthly-branch\",\n    \"cjk-heavenly-stem\",\n    \"cjk-ideographic\",\n    \"clear\",\n    \"clip\",\n    \"close-quote\",\n    \"col-resize\",\n    \"collapse\",\n    \"color\",\n    \"color-burn\",\n    \"color-dodge\",\n    \"column\",\n    \"column-reverse\",\n    \"compact\",\n    \"condensed\",\n    \"conic-gradient\",\n    \"contain\",\n    \"content\",\n    \"contents\",\n    \"content-box\",\n    \"context-menu\",\n    \"continuous\",\n    \"contrast\",\n    \"copy\",\n    \"counter\",\n    \"counters\",\n    \"cover\",\n    \"crop\",\n    \"cross\",\n    \"crosshair\",\n    \"cubic-bezier\",\n    \"currentcolor\",\n    \"cursive\",\n    \"cyclic\",\n    \"darken\",\n    \"dashed\",\n    \"decimal\",\n    \"decimal-leading-zero\",\n    \"default\",\n    \"default-button\",\n    \"dense\",\n    \"destination-atop\",\n    \"destination-in\",\n    \"destination-out\",\n    \"destination-over\",\n    \"devanagari\",\n    \"difference\",\n    \"disc\",\n    \"discard\",\n    \"disclosure-closed\",\n    \"disclosure-open\",\n    \"document\",\n    \"dot-dash\",\n    \"dot-dot-dash\",\n    \"dotted\",\n    \"double\",\n    \"down\",\n    \"drop-shadow\",\n    \"e-resize\",\n    \"ease\",\n    \"ease-in\",\n    \"ease-in-out\",\n    \"ease-out\",\n    \"element\",\n    \"ellipse\",\n    \"ellipsis\",\n    \"embed\",\n    \"end\",\n    \"ethiopic\",\n    \"ethiopic-abegede\",\n    \"ethiopic-abegede-am-et\",\n    \"ethiopic-abegede-gez\",\n    \"ethiopic-abegede-ti-er\",\n    \"ethiopic-abegede-ti-et\",\n    \"ethiopic-halehame-aa-er\",\n    \"ethiopic-halehame-aa-et\",\n    \"ethiopic-halehame-am-et\",\n    \"ethiopic-halehame-gez\",\n    \"ethiopic-halehame-om-et\",\n    \"ethiopic-halehame-sid-et\",\n    \"ethiopic-halehame-so-et\",\n    \"ethiopic-halehame-ti-er\",\n    \"ethiopic-halehame-ti-et\",\n    \"ethiopic-halehame-tig\",\n    \"ethiopic-numeric\",\n    \"ew-resize\",\n    \"exclusion\",\n    \"expanded\",\n    \"extends\",\n    \"extra-condensed\",\n    \"extra-expanded\",\n    \"fantasy\",\n    \"fast\",\n    \"fill\",\n    \"fill-box\",\n    \"fixed\",\n    \"flat\",\n    \"flex\",\n    \"flex-end\",\n    \"flex-start\",\n    \"footnotes\",\n    \"forwards\",\n    \"from\",\n    \"geometricPrecision\",\n    \"georgian\",\n    \"grayscale\",\n    \"graytext\",\n    \"grid\",\n    \"groove\",\n    \"gujarati\",\n    \"gurmukhi\",\n    \"hand\",\n    \"hangul\",\n    \"hangul-consonant\",\n    \"hard-light\",\n    \"hebrew\",\n    \"help\",\n    \"hidden\",\n    \"hide\",\n    \"higher\",\n    \"highlight\",\n    \"highlighttext\",\n    \"hiragana\",\n    \"hiragana-iroha\",\n    \"horizontal\",\n    \"hsl\",\n    \"hsla\",\n    \"hue\",\n    \"hue-rotate\",\n    \"icon\",\n    \"ignore\",\n    \"inactiveborder\",\n    \"inactivecaption\",\n    \"inactivecaptiontext\",\n    \"infinite\",\n    \"infobackground\",\n    \"infotext\",\n    \"inherit\",\n    \"initial\",\n    \"inline\",\n    \"inline-axis\",\n    \"inline-block\",\n    \"inline-flex\",\n    \"inline-grid\",\n    \"inline-table\",\n    \"inset\",\n    \"inside\",\n    \"intrinsic\",\n    \"invert\",\n    \"italic\",\n    \"japanese-formal\",\n    \"japanese-informal\",\n    \"justify\",\n    \"kannada\",\n    \"katakana\",\n    \"katakana-iroha\",\n    \"keep-all\",\n    \"khmer\",\n    \"korean-hangul-formal\",\n    \"korean-hanja-formal\",\n    \"korean-hanja-informal\",\n    \"landscape\",\n    \"lao\",\n    \"large\",\n    \"larger\",\n    \"left\",\n    \"level\",\n    \"lighter\",\n    \"lighten\",\n    \"line-through\",\n    \"linear\",\n    \"linear-gradient\",\n    \"lines\",\n    \"list-item\",\n    \"listbox\",\n    \"listitem\",\n    \"local\",\n    \"logical\",\n    \"loud\",\n    \"lower\",\n    \"lower-alpha\",\n    \"lower-armenian\",\n    \"lower-greek\",\n    \"lower-hexadecimal\",\n    \"lower-latin\",\n    \"lower-norwegian\",\n    \"lower-roman\",\n    \"lowercase\",\n    \"ltr\",\n    \"luminosity\",\n    \"malayalam\",\n    \"manipulation\",\n    \"match\",\n    \"matrix\",\n    \"matrix3d\",\n    \"media-play-button\",\n    \"media-slider\",\n    \"media-sliderthumb\",\n    \"media-volume-slider\",\n    \"media-volume-sliderthumb\",\n    \"medium\",\n    \"menu\",\n    \"menulist\",\n    \"menulist-button\",\n    \"menutext\",\n    \"message-box\",\n    \"middle\",\n    \"min-intrinsic\",\n    \"mix\",\n    \"mongolian\",\n    \"monospace\",\n    \"move\",\n    \"multiple\",\n    \"multiple_mask_images\",\n    \"multiply\",\n    \"myanmar\",\n    \"n-resize\",\n    \"narrower\",\n    \"ne-resize\",\n    \"nesw-resize\",\n    \"no-close-quote\",\n    \"no-drop\",\n    \"no-open-quote\",\n    \"no-repeat\",\n    \"none\",\n    \"normal\",\n    \"not-allowed\",\n    \"nowrap\",\n    \"ns-resize\",\n    \"numbers\",\n    \"numeric\",\n    \"nw-resize\",\n    \"nwse-resize\",\n    \"oblique\",\n    \"octal\",\n    \"opacity\",\n    \"open-quote\",\n    \"optimizeLegibility\",\n    \"optimizeSpeed\",\n    \"oriya\",\n    \"oromo\",\n    \"outset\",\n    \"outside\",\n    \"outside-shape\",\n    \"overlay\",\n    \"overline\",\n    \"padding\",\n    \"padding-box\",\n    \"painted\",\n    \"page\",\n    \"paused\",\n    \"persian\",\n    \"perspective\",\n    \"pinch-zoom\",\n    \"plus-darker\",\n    \"plus-lighter\",\n    \"pointer\",\n    \"polygon\",\n    \"portrait\",\n    \"pre\",\n    \"pre-line\",\n    \"pre-wrap\",\n    \"preserve-3d\",\n    \"progress\",\n    \"push-button\",\n    \"radial-gradient\",\n    \"radio\",\n    \"read-only\",\n    \"read-write\",\n    \"read-write-plaintext-only\",\n    \"rectangle\",\n    \"region\",\n    \"relative\",\n    \"repeat\",\n    \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\",\n    \"repeating-conic-gradient\",\n    \"repeat-x\",\n    \"repeat-y\",\n    \"reset\",\n    \"reverse\",\n    \"rgb\",\n    \"rgba\",\n    \"ridge\",\n    \"right\",\n    \"rotate\",\n    \"rotate3d\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"round\",\n    \"row\",\n    \"row-resize\",\n    \"row-reverse\",\n    \"rtl\",\n    \"run-in\",\n    \"running\",\n    \"s-resize\",\n    \"sans-serif\",\n    \"saturate\",\n    \"saturation\",\n    \"scale\",\n    \"scale3d\",\n    \"scaleX\",\n    \"scaleY\",\n    \"scaleZ\",\n    \"screen\",\n    \"scroll\",\n    \"scrollbar\",\n    \"scroll-position\",\n    \"se-resize\",\n    \"searchfield\",\n    \"searchfield-cancel-button\",\n    \"searchfield-decoration\",\n    \"searchfield-results-button\",\n    \"searchfield-results-decoration\",\n    \"self-start\",\n    \"self-end\",\n    \"semi-condensed\",\n    \"semi-expanded\",\n    \"separate\",\n    \"sepia\",\n    \"serif\",\n    \"show\",\n    \"sidama\",\n    \"simp-chinese-formal\",\n    \"simp-chinese-informal\",\n    \"single\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n    \"skip-white-space\",\n    \"slide\",\n    \"slider-horizontal\",\n    \"slider-vertical\",\n    \"sliderthumb-horizontal\",\n    \"sliderthumb-vertical\",\n    \"slow\",\n    \"small\",\n    \"small-caps\",\n    \"small-caption\",\n    \"smaller\",\n    \"soft-light\",\n    \"solid\",\n    \"somali\",\n    \"source-atop\",\n    \"source-in\",\n    \"source-out\",\n    \"source-over\",\n    \"space\",\n    \"space-around\",\n    \"space-between\",\n    \"space-evenly\",\n    \"spell-out\",\n    \"square\",\n    \"square-button\",\n    \"start\",\n    \"static\",\n    \"status-bar\",\n    \"stretch\",\n    \"stroke\",\n    \"stroke-box\",\n    \"sub\",\n    \"subpixel-antialiased\",\n    \"svg_masks\",\n    \"super\",\n    \"sw-resize\",\n    \"symbolic\",\n    \"symbols\",\n    \"system-ui\",\n    \"table\",\n    \"table-caption\",\n    \"table-cell\",\n    \"table-column\",\n    \"table-column-group\",\n    \"table-footer-group\",\n    \"table-header-group\",\n    \"table-row\",\n    \"table-row-group\",\n    \"tamil\",\n    \"telugu\",\n    \"text\",\n    \"text-bottom\",\n    \"text-top\",\n    \"textarea\",\n    \"textfield\",\n    \"thai\",\n    \"thick\",\n    \"thin\",\n    \"threeddarkshadow\",\n    \"threedface\",\n    \"threedhighlight\",\n    \"threedlightshadow\",\n    \"threedshadow\",\n    \"tibetan\",\n    \"tigre\",\n    \"tigrinya-er\",\n    \"tigrinya-er-abegede\",\n    \"tigrinya-et\",\n    \"tigrinya-et-abegede\",\n    \"to\",\n    \"top\",\n    \"trad-chinese-formal\",\n    \"trad-chinese-informal\",\n    \"transform\",\n    \"translate\",\n    \"translate3d\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"transparent\",\n    \"ultra-condensed\",\n    \"ultra-expanded\",\n    \"underline\",\n    \"unidirectional-pan\",\n    \"unset\",\n    \"up\",\n    \"upper-alpha\",\n    \"upper-armenian\",\n    \"upper-greek\",\n    \"upper-hexadecimal\",\n    \"upper-latin\",\n    \"upper-norwegian\",\n    \"upper-roman\",\n    \"uppercase\",\n    \"urdu\",\n    \"url\",\n    \"var\",\n    \"vertical\",\n    \"vertical-text\",\n    \"view-box\",\n    \"visible\",\n    \"visibleFill\",\n    \"visiblePainted\",\n    \"visibleStroke\",\n    \"visual\",\n    \"w-resize\",\n    \"wait\",\n    \"wave\",\n    \"wider\",\n    \"window\",\n    \"windowframe\",\n    \"windowtext\",\n    \"words\",\n    \"wrap\",\n    \"wrap-reverse\",\n    \"x-large\",\n    \"x-small\",\n    \"xor\",\n    \"xx-large\",\n    \"xx-small\"\n], $a505ca269043c5f6$var$valueKeywords = $a505ca269043c5f6$var$keySet($a505ca269043c5f6$var$valueKeywords_);\nvar $a505ca269043c5f6$var$allWords = $a505ca269043c5f6$var$documentTypes_.concat($a505ca269043c5f6$var$mediaTypes_).concat($a505ca269043c5f6$var$mediaFeatures_).concat($a505ca269043c5f6$var$mediaValueKeywords_).concat($a505ca269043c5f6$var$propertyKeywords_).concat($a505ca269043c5f6$var$nonStandardPropertyKeywords_).concat($a505ca269043c5f6$var$colorKeywords_).concat($a505ca269043c5f6$var$valueKeywords_);\nconst $a505ca269043c5f6$export$eebaaf2b24d91f63 = {\n    properties: $a505ca269043c5f6$var$propertyKeywords_,\n    colors: $a505ca269043c5f6$var$colorKeywords_,\n    fonts: $a505ca269043c5f6$var$fontProperties_,\n    values: $a505ca269043c5f6$var$valueKeywords_,\n    all: $a505ca269043c5f6$var$allWords\n};\nconst $a505ca269043c5f6$var$defaults = {\n    documentTypes: $a505ca269043c5f6$var$documentTypes,\n    mediaTypes: $a505ca269043c5f6$var$mediaTypes,\n    mediaFeatures: $a505ca269043c5f6$var$mediaFeatures,\n    mediaValueKeywords: $a505ca269043c5f6$var$mediaValueKeywords,\n    propertyKeywords: $a505ca269043c5f6$var$propertyKeywords,\n    nonStandardPropertyKeywords: $a505ca269043c5f6$var$nonStandardPropertyKeywords,\n    fontProperties: $a505ca269043c5f6$var$fontProperties,\n    counterDescriptors: $a505ca269043c5f6$var$counterDescriptors,\n    colorKeywords: $a505ca269043c5f6$var$colorKeywords,\n    valueKeywords: $a505ca269043c5f6$var$valueKeywords,\n    tokenHooks: {\n        \"/\": function(stream, state) {\n            if (!stream.eat(\"*\")) return false;\n            state.tokenize = $a505ca269043c5f6$var$tokenCComment;\n            return $a505ca269043c5f6$var$tokenCComment(stream, state);\n        }\n    }\n};\nconst $a505ca269043c5f6$export$dbf350e5966cf602 = $a505ca269043c5f6$export$43cdd2f42edcd6b7({\n    name: \"css\"\n});\nfunction $a505ca269043c5f6$var$tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while((ch = stream.next()) != null){\n        if (maybeEnd && ch == \"/\") {\n            state.tokenize = null;\n            break;\n        }\n        maybeEnd = ch == \"*\";\n    }\n    return [\n        \"comment\",\n        \"comment\"\n    ];\n}\nconst $a505ca269043c5f6$export$f9e2ba49188a3826 = $a505ca269043c5f6$export$43cdd2f42edcd6b7({\n    name: \"scss\",\n    mediaTypes: $a505ca269043c5f6$var$mediaTypes,\n    mediaFeatures: $a505ca269043c5f6$var$mediaFeatures,\n    mediaValueKeywords: $a505ca269043c5f6$var$mediaValueKeywords,\n    propertyKeywords: $a505ca269043c5f6$var$propertyKeywords,\n    nonStandardPropertyKeywords: $a505ca269043c5f6$var$nonStandardPropertyKeywords,\n    colorKeywords: $a505ca269043c5f6$var$colorKeywords,\n    valueKeywords: $a505ca269043c5f6$var$valueKeywords,\n    fontProperties: $a505ca269043c5f6$var$fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n        \"/\": function(stream, state) {\n            if (stream.eat(\"/\")) {\n                stream.skipToEnd();\n                return [\n                    \"comment\",\n                    \"comment\"\n                ];\n            } else if (stream.eat(\"*\")) {\n                state.tokenize = $a505ca269043c5f6$var$tokenCComment;\n                return $a505ca269043c5f6$var$tokenCComment(stream, state);\n            } else return [\n                \"operator\",\n                \"operator\"\n            ];\n        },\n        \":\": function(stream) {\n            if (stream.match(/^\\s*\\{/, false)) return [\n                null,\n                null\n            ];\n            return false;\n        },\n        \"$\": function(stream) {\n            stream.match(/^[\\w-]+/);\n            if (stream.match(/^\\s*:/, false)) return [\n                \"def\",\n                \"variable-definition\"\n            ];\n            return [\n                \"variableName.special\",\n                \"variable\"\n            ];\n        },\n        \"#\": function(stream) {\n            if (!stream.eat(\"{\")) return false;\n            return [\n                null,\n                \"interpolation\"\n            ];\n        }\n    }\n});\nconst $a505ca269043c5f6$export$bb1a638da8ad190f = $a505ca269043c5f6$export$43cdd2f42edcd6b7({\n    name: \"less\",\n    mediaTypes: $a505ca269043c5f6$var$mediaTypes,\n    mediaFeatures: $a505ca269043c5f6$var$mediaFeatures,\n    mediaValueKeywords: $a505ca269043c5f6$var$mediaValueKeywords,\n    propertyKeywords: $a505ca269043c5f6$var$propertyKeywords,\n    nonStandardPropertyKeywords: $a505ca269043c5f6$var$nonStandardPropertyKeywords,\n    colorKeywords: $a505ca269043c5f6$var$colorKeywords,\n    valueKeywords: $a505ca269043c5f6$var$valueKeywords,\n    fontProperties: $a505ca269043c5f6$var$fontProperties,\n    allowNested: true,\n    lineComment: \"//\",\n    tokenHooks: {\n        \"/\": function(stream, state) {\n            if (stream.eat(\"/\")) {\n                stream.skipToEnd();\n                return [\n                    \"comment\",\n                    \"comment\"\n                ];\n            } else if (stream.eat(\"*\")) {\n                state.tokenize = $a505ca269043c5f6$var$tokenCComment;\n                return $a505ca269043c5f6$var$tokenCComment(stream, state);\n            } else return [\n                \"operator\",\n                \"operator\"\n            ];\n        },\n        \"@\": function(stream) {\n            if (stream.eat(\"{\")) return [\n                null,\n                \"interpolation\"\n            ];\n            if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/i, false)) return false;\n            stream.eatWhile(/[\\w\\\\\\-]/);\n            if (stream.match(/^\\s*:/, false)) return [\n                \"def\",\n                \"variable-definition\"\n            ];\n            return [\n                \"variableName\",\n                \"variable\"\n            ];\n        },\n        \"&\": function() {\n            return [\n                \"atom\",\n                \"atom\"\n            ];\n        }\n    }\n});\nconst $a505ca269043c5f6$export$2c0d8580e75af113 = $a505ca269043c5f6$export$43cdd2f42edcd6b7({\n    name: \"gss\",\n    documentTypes: $a505ca269043c5f6$var$documentTypes,\n    mediaTypes: $a505ca269043c5f6$var$mediaTypes,\n    mediaFeatures: $a505ca269043c5f6$var$mediaFeatures,\n    propertyKeywords: $a505ca269043c5f6$var$propertyKeywords,\n    nonStandardPropertyKeywords: $a505ca269043c5f6$var$nonStandardPropertyKeywords,\n    fontProperties: $a505ca269043c5f6$var$fontProperties,\n    counterDescriptors: $a505ca269043c5f6$var$counterDescriptors,\n    colorKeywords: $a505ca269043c5f6$var$colorKeywords,\n    valueKeywords: $a505ca269043c5f6$var$valueKeywords,\n    supportsAtComponent: true,\n    tokenHooks: {\n        \"/\": function(stream, state) {\n            if (!stream.eat(\"*\")) return false;\n            state.tokenize = $a505ca269043c5f6$var$tokenCComment;\n            return $a505ca269043c5f6$var$tokenCComment(stream, state);\n        }\n    }\n});\n\n});\n\n\n//# sourceMappingURL=css.45498338.js.map\n","export function mkCSS(parserConfig) {\n  parserConfig = {...defaults, ...parserConfig}\n  var inline = parserConfig.inline\n\n  var tokenHooks = parserConfig.tokenHooks,\n      documentTypes = parserConfig.documentTypes || {},\n      mediaTypes = parserConfig.mediaTypes || {},\n      mediaFeatures = parserConfig.mediaFeatures || {},\n      mediaValueKeywords = parserConfig.mediaValueKeywords || {},\n      propertyKeywords = parserConfig.propertyKeywords || {},\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\n      fontProperties = parserConfig.fontProperties || {},\n      counterDescriptors = parserConfig.counterDescriptors || {},\n      colorKeywords = parserConfig.colorKeywords || {},\n      valueKeywords = parserConfig.valueKeywords || {},\n      allowNested = parserConfig.allowNested,\n      lineComment = parserConfig.lineComment,\n      supportsAtComponent = parserConfig.supportsAtComponent === true,\n      highlightNonStandardPropertyKeywords = parserConfig.highlightNonStandardPropertyKeywords !== false;\n\n  var type, override;\n  function ret(style, tp) { type = tp; return style; }\n\n  // Tokenizers\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (tokenHooks[ch]) {\n      var result = tokenHooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == \"@\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"def\", stream.current());\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\n      return ret(null, \"compare\");\n    } else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (ch == \"#\") {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"atom\", \"hash\");\n    } else if (ch == \"!\") {\n      stream.match(/^\\s*\\w*/);\n      return ret(\"keyword\", \"important\");\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\n      stream.eatWhile(/[\\w.%]/);\n      return ret(\"number\", \"unit\");\n    } else if (ch === \"-\") {\n      if (/[\\d.]/.test(stream.peek())) {\n        stream.eatWhile(/[\\w.%]/);\n        return ret(\"number\", \"unit\");\n      } else if (stream.match(/^-[\\w\\\\\\-]*/)) {\n        stream.eatWhile(/[\\w\\\\\\-]/);\n        if (stream.match(/^\\s*:/, false))\n          return ret(\"def\", \"variable-definition\");\n        return ret(\"variableName\", \"variable\");\n      } else if (stream.match(/^\\w+-/)) {\n        return ret(\"meta\", \"meta\");\n      }\n    } else if (/[,+>*\\/]/.test(ch)) {\n      return ret(null, \"select-op\");\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\n      return ret(\"qualifier\", \"qualifier\");\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\n      return ret(null, ch);\n    } else if (stream.match(/^[\\w-.]+(?=\\()/)) {\n      if (/^(url(-prefix)?|domain|regexp)$/i.test(stream.current())) {\n        state.tokenize = tokenParenthesized;\n      }\n      return ret(\"variableName.function\", \"variable\");\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      return ret(\"property\", \"word\");\n    } else {\n      return ret(null, null);\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          if (quote == \")\") stream.backUp(1);\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n      return ret(\"string\", \"string\");\n    };\n  }\n\n  function tokenParenthesized(stream, state) {\n    stream.next(); // Must be '('\n    if (!stream.match(/^\\s*[\\\"\\')]/, false))\n      state.tokenize = tokenString(\")\");\n    else\n      state.tokenize = null;\n    return ret(null, \"(\");\n  }\n\n  // Context management\n\n  function Context(type, indent, prev) {\n    this.type = type;\n    this.indent = indent;\n    this.prev = prev;\n  }\n\n  function pushContext(state, stream, type, indent) {\n    state.context = new Context(type, stream.indentation() + (indent === false ? 0 : stream.indentUnit), state.context);\n    return type;\n  }\n\n  function popContext(state) {\n    if (state.context.prev)\n      state.context = state.context.prev;\n    return state.context.type;\n  }\n\n  function pass(type, stream, state) {\n    return states[state.context.type](type, stream, state);\n  }\n  function popAndPass(type, stream, state, n) {\n    for (var i = n || 1; i > 0; i--)\n      state.context = state.context.prev;\n    return pass(type, stream, state);\n  }\n\n  // Parser\n\n  function wordAsValue(stream) {\n    var word = stream.current().toLowerCase();\n    if (valueKeywords.hasOwnProperty(word))\n      override = \"atom\";\n    else if (colorKeywords.hasOwnProperty(word))\n      override = \"keyword\";\n    else\n      override = \"variable\";\n  }\n\n  var states = {};\n\n  states.top = function(type, stream, state) {\n    if (type == \"{\") {\n      return pushContext(state, stream, \"block\");\n    } else if (type == \"}\" && state.context.prev) {\n      return popContext(state);\n    } else if (supportsAtComponent && /@component/i.test(type)) {\n      return pushContext(state, stream, \"atComponentBlock\");\n    } else if (/^@(-moz-)?document$/i.test(type)) {\n      return pushContext(state, stream, \"documentTypes\");\n    } else if (/^@(media|supports|(-moz-)?document|import)$/i.test(type)) {\n      return pushContext(state, stream, \"atBlock\");\n    } else if (/^@(font-face|counter-style)/i.test(type)) {\n      state.stateArg = type;\n      return \"restricted_atBlock_before\";\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/i.test(type)) {\n      return \"keyframes\";\n    } else if (type && type.charAt(0) == \"@\") {\n      return pushContext(state, stream, \"at\");\n    } else if (type == \"hash\") {\n      override = \"builtin\";\n    } else if (type == \"word\") {\n      override = \"tag\";\n    } else if (type == \"variable-definition\") {\n      return \"maybeprop\";\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    } else if (type == \":\") {\n      return \"pseudo\";\n    } else if (allowNested && type == \"(\") {\n      return pushContext(state, stream, \"parens\");\n    }\n    return state.context.type;\n  };\n\n  states.block = function(type, stream, state) {\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (propertyKeywords.hasOwnProperty(word)) {\n        override = \"property\";\n        return \"maybeprop\";\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\n        override = highlightNonStandardPropertyKeywords ? \"string.special\" : \"property\";\n        return \"maybeprop\";\n      } else if (allowNested) {\n        override = stream.match(/^\\s*:(?:\\s|$)/, false) ? \"property\" : \"tag\";\n        return \"block\";\n      } else {\n        override = \"error\";\n        return \"maybeprop\";\n      }\n    } else if (type == \"meta\") {\n      return \"block\";\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\n      override = \"error\";\n      return \"block\";\n    } else {\n      return states.top(type, stream, state);\n    }\n  };\n\n  states.maybeprop = function(type, stream, state) {\n    if (type == \":\") return pushContext(state, stream, \"prop\");\n    return pass(type, stream, state);\n  };\n\n  states.prop = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n\n    if (type == \"hash\" && !/^#([0-9a-fA-F]{3,4}|[0-9a-fA-F]{6}|[0-9a-fA-F]{8})$/.test(stream.current())) {\n      override = \"error\";\n    } else if (type == \"word\") {\n      wordAsValue(stream);\n    } else if (type == \"interpolation\") {\n      return pushContext(state, stream, \"interpolation\");\n    }\n    return \"prop\";\n  };\n\n  states.propBlock = function(type, _stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"word\") { override = \"property\"; return \"maybeprop\"; }\n    return state.context.type;\n  };\n\n  states.parens = function(type, stream, state) {\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \")\") return popContext(state);\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n    if (type == \"word\") wordAsValue(stream);\n    return \"parens\";\n  };\n\n  states.pseudo = function(type, stream, state) {\n    if (type == \"meta\") return \"pseudo\";\n\n    if (type == \"word\") {\n      override = \"variableName.constant\";\n      return state.context.type;\n    }\n    return pass(type, stream, state);\n  };\n\n  states.documentTypes = function(type, stream, state) {\n    if (type == \"word\" && documentTypes.hasOwnProperty(stream.current())) {\n      override = \"tag\";\n      return state.context.type;\n    } else {\n      return states.atBlock(type, stream, state);\n    }\n  };\n\n  states.atBlock = function(type, stream, state) {\n    if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n    if (type == \"}\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\n\n    if (type == \"interpolation\") return pushContext(state, stream, \"interpolation\");\n\n    if (type == \"word\") {\n      var word = stream.current().toLowerCase();\n      if (word == \"only\" || word == \"not\" || word == \"and\" || word == \"or\")\n        override = \"keyword\";\n      else if (mediaTypes.hasOwnProperty(word))\n        override = \"attribute\";\n      else if (mediaFeatures.hasOwnProperty(word))\n        override = \"property\";\n      else if (mediaValueKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else if (propertyKeywords.hasOwnProperty(word))\n        override = \"property\";\n      else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n        override = highlightNonStandardPropertyKeywords ? \"string.special\" : \"property\";\n      else if (valueKeywords.hasOwnProperty(word))\n        override = \"atom\";\n      else if (colorKeywords.hasOwnProperty(word))\n        override = \"keyword\";\n      else\n        override = \"error\";\n    }\n    return state.context.type;\n  };\n\n  states.atComponentBlock = function(type, stream, state) {\n    if (type == \"}\")\n      return popAndPass(type, stream, state);\n    if (type == \"{\")\n      return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\", false);\n    if (type == \"word\")\n      override = \"error\";\n    return state.context.type;\n  };\n\n  states.atBlock_parens = function(type, stream, state) {\n    if (type == \")\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\n    return states.atBlock(type, stream, state);\n  };\n\n  states.restricted_atBlock_before = function(type, stream, state) {\n    if (type == \"{\")\n      return pushContext(state, stream, \"restricted_atBlock\");\n    if (type == \"word\" && state.stateArg == \"@counter-style\") {\n      override = \"variable\";\n      return \"restricted_atBlock_before\";\n    }\n    return pass(type, stream, state);\n  };\n\n  states.restricted_atBlock = function(type, stream, state) {\n    if (type == \"}\") {\n      state.stateArg = null;\n      return popContext(state);\n    }\n    if (type == \"word\") {\n      if ((state.stateArg == \"@font-face\" && !fontProperties.hasOwnProperty(stream.current().toLowerCase())) ||\n          (state.stateArg == \"@counter-style\" && !counterDescriptors.hasOwnProperty(stream.current().toLowerCase())))\n        override = \"error\";\n      else\n        override = \"property\";\n      return \"maybeprop\";\n    }\n    return \"restricted_atBlock\";\n  };\n\n  states.keyframes = function(type, stream, state) {\n    if (type == \"word\") { override = \"variable\"; return \"keyframes\"; }\n    if (type == \"{\") return pushContext(state, stream, \"top\");\n    return pass(type, stream, state);\n  };\n\n  states.at = function(type, stream, state) {\n    if (type == \";\") return popContext(state);\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"tag\";\n    else if (type == \"hash\") override = \"builtin\";\n    return \"at\";\n  };\n\n  states.interpolation = function(type, stream, state) {\n    if (type == \"}\") return popContext(state);\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\n    if (type == \"word\") override = \"variable\";\n    else if (type != \"variable\" && type != \"(\" && type != \")\") override = \"error\";\n    return \"interpolation\";\n  };\n\n  return {\n    name: parserConfig.name,\n    startState: function() {\n      return {tokenize: null,\n              state: inline ? \"block\" : \"top\",\n              stateArg: null,\n              context: new Context(inline ? \"block\" : \"top\", 0, null)};\n    },\n\n    token: function(stream, state) {\n      if (!state.tokenize && stream.eatSpace()) return null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style && typeof style == \"object\") {\n        type = style[1];\n        style = style[0];\n      }\n      override = style;\n      if (type != \"comment\")\n        state.state = states[state.state](type, stream, state);\n      return override;\n    },\n\n    indent: function(state, textAfter, iCx) {\n      var cx = state.context, ch = textAfter && textAfter.charAt(0);\n      var indent = cx.indent;\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\n      if (cx.prev) {\n        if (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" ||\n                          cx.type == \"interpolation\" || cx.type == \"restricted_atBlock\")) {\n          // Resume indentation from parent context.\n          cx = cx.prev;\n          indent = cx.indent;\n        } else if (ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n                   ch == \"{\" && (cx.type == \"at\" || cx.type == \"atBlock\")) {\n          // Dedent relative to current context.\n          indent = Math.max(0, cx.indent - iCx.unit);\n        }\n      }\n      return indent;\n    },\n\n    languageData: {\n      indentOnInput: /^\\s*\\}$/,\n      commentTokens: {line: lineComment, block: {open: \"/*\", close: \"*/\"}},\n      autocomplete: allWords\n    }\n  };\n};\n\nfunction keySet(array) {\n  var keys = {};\n  for (var i = 0; i < array.length; ++i) {\n    keys[array[i].toLowerCase()] = true;\n  }\n  return keys;\n}\n\nvar documentTypes_ = [\n  \"domain\", \"regexp\", \"url\", \"url-prefix\"\n], documentTypes = keySet(documentTypes_);\n\nvar mediaTypes_ = [\n  \"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\",\n  \"tty\", \"tv\", \"embossed\"\n], mediaTypes = keySet(mediaTypes_);\n\nvar mediaFeatures_ = [\n  \"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\",\n  \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\",\n  \"min-device-height\", \"max-device-height\", \"aspect-ratio\",\n  \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\",\n  \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\",\n  \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\",\n  \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\",\n  \"min-resolution\", \"max-resolution\", \"scan\", \"grid\", \"orientation\",\n  \"device-pixel-ratio\", \"min-device-pixel-ratio\", \"max-device-pixel-ratio\",\n  \"pointer\", \"any-pointer\", \"hover\", \"any-hover\", \"prefers-color-scheme\",\n  \"dynamic-range\", \"video-dynamic-range\"\n], mediaFeatures = keySet(mediaFeatures_);\n\nvar mediaValueKeywords_ = [\n  \"landscape\", \"portrait\", \"none\", \"coarse\", \"fine\", \"on-demand\", \"hover\",\n  \"interlace\", \"progressive\",\n  \"dark\", \"light\",\n  \"standard\", \"high\"\n], mediaValueKeywords = keySet(mediaValueKeywords_);\n\nvar propertyKeywords_ = [\n  \"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\",\n  \"alignment-baseline\", \"all\", \"anchor-point\", \"animation\", \"animation-delay\",\n  \"animation-direction\", \"animation-duration\", \"animation-fill-mode\",\n  \"animation-iteration-count\", \"animation-name\", \"animation-play-state\",\n  \"animation-timing-function\", \"appearance\", \"azimuth\", \"backdrop-filter\",\n  \"backface-visibility\", \"background\", \"background-attachment\",\n  \"background-blend-mode\", \"background-clip\", \"background-color\",\n  \"background-image\", \"background-origin\", \"background-position\",\n  \"background-position-x\", \"background-position-y\", \"background-repeat\",\n  \"background-size\", \"baseline-shift\", \"binding\", \"bleed\", \"block-size\",\n  \"bookmark-label\", \"bookmark-level\", \"bookmark-state\", \"bookmark-target\",\n  \"border\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\",\n  \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\",\n  \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\",\n  \"border-image-repeat\", \"border-image-slice\", \"border-image-source\",\n  \"border-image-width\", \"border-left\", \"border-left-color\", \"border-left-style\",\n  \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\",\n  \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\",\n  \"border-top\", \"border-top-color\", \"border-top-left-radius\",\n  \"border-top-right-radius\", \"border-top-style\", \"border-top-width\",\n  \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\",\n  \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"caret-color\",\n  \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\", \"column-fill\",\n  \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\",\n  \"column-rule-width\", \"column-span\", \"column-width\", \"columns\", \"contain\",\n  \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\", \"cue-after\",\n  \"cue-before\", \"cursor\", \"direction\", \"display\", \"dominant-baseline\",\n  \"drop-initial-after-adjust\", \"drop-initial-after-align\",\n  \"drop-initial-before-adjust\", \"drop-initial-before-align\", \"drop-initial-size\",\n  \"drop-initial-value\", \"elevation\", \"empty-cells\", \"fit\", \"fit-content\", \"fit-position\",\n  \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\",\n  \"flex-shrink\", \"flex-wrap\", \"float\", \"float-offset\", \"flow-from\", \"flow-into\",\n  \"font\", \"font-family\", \"font-feature-settings\", \"font-kerning\",\n  \"font-language-override\", \"font-optical-sizing\", \"font-size\",\n  \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\",\n  \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\",\n  \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\",\n  \"font-variant-position\", \"font-variation-settings\", \"font-weight\", \"gap\",\n  \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-rows\",\n  \"grid-column\", \"grid-column-end\", \"grid-column-gap\", \"grid-column-start\",\n  \"grid-gap\", \"grid-row\", \"grid-row-end\", \"grid-row-gap\", \"grid-row-start\",\n  \"grid-template\", \"grid-template-areas\", \"grid-template-columns\",\n  \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\", \"icon\",\n  \"image-orientation\", \"image-rendering\", \"image-resolution\", \"inline-box-align\",\n  \"inset\", \"inset-block\", \"inset-block-end\", \"inset-block-start\", \"inset-inline\",\n  \"inset-inline-end\", \"inset-inline-start\", \"isolation\", \"justify-content\",\n  \"justify-items\", \"justify-self\", \"left\", \"letter-spacing\", \"line-break\",\n  \"line-height\", \"line-height-step\", \"line-stacking\", \"line-stacking-ruby\",\n  \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\",\n  \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\",\n  \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"marks\",\n  \"marquee-direction\", \"marquee-loop\", \"marquee-play-count\", \"marquee-speed\",\n  \"marquee-style\", \"mask-clip\", \"mask-composite\", \"mask-image\", \"mask-mode\",\n  \"mask-origin\", \"mask-position\", \"mask-repeat\", \"mask-size\",\"mask-type\",\n  \"max-block-size\", \"max-height\", \"max-inline-size\",\n  \"max-width\", \"min-block-size\", \"min-height\", \"min-inline-size\", \"min-width\",\n  \"mix-blend-mode\", \"move-to\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\",\n  \"nav-up\", \"object-fit\", \"object-position\", \"offset\", \"offset-anchor\",\n  \"offset-distance\", \"offset-path\", \"offset-position\", \"offset-rotate\",\n  \"opacity\", \"order\", \"orphans\", \"outline\", \"outline-color\", \"outline-offset\",\n  \"outline-style\", \"outline-width\", \"overflow\", \"overflow-style\",\n  \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"padding\", \"padding-bottom\",\n  \"padding-left\", \"padding-right\", \"padding-top\", \"page\", \"page-break-after\",\n  \"page-break-before\", \"page-break-inside\", \"page-policy\", \"pause\",\n  \"pause-after\", \"pause-before\", \"perspective\", \"perspective-origin\", \"pitch\",\n  \"pitch-range\", \"place-content\", \"place-items\", \"place-self\", \"play-during\",\n  \"position\", \"presentation-level\", \"punctuation-trim\", \"quotes\",\n  \"region-break-after\", \"region-break-before\", \"region-break-inside\",\n  \"region-fragment\", \"rendering-intent\", \"resize\", \"rest\", \"rest-after\",\n  \"rest-before\", \"richness\", \"right\", \"rotate\", \"rotation\", \"rotation-point\",\n  \"row-gap\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\",\n  \"scale\", \"scroll-behavior\", \"scroll-margin\", \"scroll-margin-block\",\n  \"scroll-margin-block-end\", \"scroll-margin-block-start\", \"scroll-margin-bottom\",\n  \"scroll-margin-inline\", \"scroll-margin-inline-end\",\n  \"scroll-margin-inline-start\", \"scroll-margin-left\", \"scroll-margin-right\",\n  \"scroll-margin-top\", \"scroll-padding\", \"scroll-padding-block\",\n  \"scroll-padding-block-end\", \"scroll-padding-block-start\",\n  \"scroll-padding-bottom\", \"scroll-padding-inline\", \"scroll-padding-inline-end\",\n  \"scroll-padding-inline-start\", \"scroll-padding-left\", \"scroll-padding-right\",\n  \"scroll-padding-top\", \"scroll-snap-align\", \"scroll-snap-type\",\n  \"shape-image-threshold\", \"shape-inside\", \"shape-margin\", \"shape-outside\",\n  \"size\", \"speak\", \"speak-as\", \"speak-header\", \"speak-numeral\",\n  \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\", \"tab-size\",\n  \"table-layout\", \"target\", \"target-name\", \"target-new\", \"target-position\",\n  \"text-align\", \"text-align-last\", \"text-combine-upright\", \"text-decoration\",\n  \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\",\n  \"text-decoration-skip-ink\", \"text-decoration-style\", \"text-emphasis\",\n  \"text-emphasis-color\", \"text-emphasis-position\", \"text-emphasis-style\",\n  \"text-height\", \"text-indent\", \"text-justify\", \"text-orientation\",\n  \"text-outline\", \"text-overflow\", \"text-rendering\", \"text-shadow\",\n  \"text-size-adjust\", \"text-space-collapse\", \"text-transform\",\n  \"text-underline-position\", \"text-wrap\", \"top\", \"touch-action\", \"transform\", \"transform-origin\",\n  \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\",\n  \"transition-property\", \"transition-timing-function\", \"translate\",\n  \"unicode-bidi\", \"user-select\", \"vertical-align\", \"visibility\", \"voice-balance\",\n  \"voice-duration\", \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\",\n  \"voice-stress\", \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\",\n  \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"writing-mode\", \"z-index\",\n  // SVG-specific\n  \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\",\n  \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\",\n  \"color-interpolation\", \"color-interpolation-filters\",\n  \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\",\n  \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"paint-order\", \"shape-rendering\", \"stroke\",\n  \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\",\n  \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\",\n  \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\",\n  \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\",\n], propertyKeywords = keySet(propertyKeywords_);\n\nvar nonStandardPropertyKeywords_ = [\n  \"accent-color\", \"aspect-ratio\", \"border-block\", \"border-block-color\", \"border-block-end\",\n  \"border-block-end-color\", \"border-block-end-style\", \"border-block-end-width\",\n  \"border-block-start\", \"border-block-start-color\", \"border-block-start-style\",\n  \"border-block-start-width\", \"border-block-style\", \"border-block-width\",\n  \"border-inline\", \"border-inline-color\", \"border-inline-end\",\n  \"border-inline-end-color\", \"border-inline-end-style\",\n  \"border-inline-end-width\", \"border-inline-start\", \"border-inline-start-color\",\n  \"border-inline-start-style\", \"border-inline-start-width\",\n  \"border-inline-style\", \"border-inline-width\", \"content-visibility\", \"margin-block\",\n  \"margin-block-end\", \"margin-block-start\", \"margin-inline\", \"margin-inline-end\",\n  \"margin-inline-start\", \"overflow-anchor\", \"overscroll-behavior\", \"padding-block\", \"padding-block-end\",\n  \"padding-block-start\", \"padding-inline\", \"padding-inline-end\",\n  \"padding-inline-start\", \"scroll-snap-stop\", \"scrollbar-3d-light-color\",\n  \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\",\n  \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\",\n  \"scrollbar-track-color\", \"searchfield-cancel-button\", \"searchfield-decoration\",\n  \"searchfield-results-button\", \"searchfield-results-decoration\", \"shape-inside\", \"zoom\"\n], nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\n\nvar fontProperties_ = [\n  \"font-display\", \"font-family\", \"src\", \"unicode-range\", \"font-variant\",\n  \"font-feature-settings\", \"font-stretch\", \"font-weight\", \"font-style\"\n], fontProperties = keySet(fontProperties_);\n\nvar counterDescriptors_ = [\n  \"additive-symbols\", \"fallback\", \"negative\", \"pad\", \"prefix\", \"range\",\n  \"speak-as\", \"suffix\", \"symbols\", \"system\"\n], counterDescriptors = keySet(counterDescriptors_);\n\nvar colorKeywords_ = [\n  \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n  \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n  \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n  \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n  \"darkgray\", \"darkgreen\", \"darkgrey\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n  \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n  \"darkslateblue\", \"darkslategray\", \"darkslategrey\", \"darkturquoise\", \"darkviolet\",\n  \"deeppink\", \"deepskyblue\", \"dimgray\", \"dimgrey\", \"dodgerblue\", \"firebrick\",\n  \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n  \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n  \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n  \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n  \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightgrey\", \"lightpink\",\n  \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightslategrey\",\n  \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n  \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n  \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n  \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n  \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n  \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n  \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n  \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n  \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n  \"slateblue\", \"slategray\", \"slategrey\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n  \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n  \"whitesmoke\", \"yellow\", \"yellowgreen\"\n], colorKeywords = keySet(colorKeywords_);\n\nvar valueKeywords_ = [\n  \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\",\n  \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\",\n  \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\",\n  \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\", \"avoid-page\",\n  \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\",\n  \"bengali\", \"blink\", \"block\", \"block-axis\", \"blur\", \"bold\", \"bolder\", \"border\", \"border-box\",\n  \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"brightness\", \"bullets\", \"button\",\n  \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\",\n  \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\",\n  \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\",\n  \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\",\n  \"col-resize\", \"collapse\", \"color\", \"color-burn\", \"color-dodge\", \"column\", \"column-reverse\",\n  \"compact\", \"condensed\", \"conic-gradient\", \"contain\", \"content\", \"contents\",\n  \"content-box\", \"context-menu\", \"continuous\", \"contrast\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\",\n  \"cross\", \"crosshair\", \"cubic-bezier\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n  \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\",\n  \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"difference\",\n  \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\",\n  \"dot-dash\", \"dot-dot-dash\",\n  \"dotted\", \"double\", \"down\", \"drop-shadow\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\",\n  \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\",\n  \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\",\n  \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\",\n  \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\",\n  \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\",\n  \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\",\n  \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\",\n  \"ethiopic-numeric\", \"ew-resize\", \"exclusion\", \"expanded\", \"extends\", \"extra-condensed\",\n  \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\", \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\",\n  \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"grayscale\", \"graytext\", \"grid\", \"groove\",\n  \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hard-light\", \"hebrew\",\n  \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\",\n  \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"hue-rotate\", \"icon\", \"ignore\",\n  \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\",\n  \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\",\n  \"inline-block\", \"inline-flex\", \"inline-grid\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\",\n  \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\",\n  \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\",\n  \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\",\n  \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\",\n  \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\",\n  \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\",\n  \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\",\n  \"lower-roman\", \"lowercase\", \"ltr\", \"luminosity\", \"malayalam\", \"manipulation\", \"match\", \"matrix\", \"matrix3d\",\n  \"media-play-button\", \"media-slider\", \"media-sliderthumb\",\n  \"media-volume-slider\", \"media-volume-sliderthumb\", \"medium\",\n  \"menu\", \"menulist\", \"menulist-button\",\n  \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n  \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"myanmar\", \"n-resize\",\n  \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\",\n  \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\",\n  \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"opacity\", \"open-quote\",\n  \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\",\n  \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\",\n  \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\",\n  \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\",\n  \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\",\n  \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\",\n  \"relative\", \"repeat\", \"repeating-linear-gradient\", \"repeating-radial-gradient\",\n  \"repeating-conic-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n  \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\",\n  \"rotateZ\", \"round\", \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\",\n  \"s-resize\", \"sans-serif\", \"saturate\", \"saturation\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\",\n  \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\",\n  \"searchfield-cancel-button\", \"searchfield-decoration\",\n  \"searchfield-results-button\", \"searchfield-results-decoration\", \"self-start\", \"self-end\",\n  \"semi-condensed\", \"semi-expanded\", \"separate\", \"sepia\", \"serif\", \"show\", \"sidama\",\n  \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\",\n  \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n  \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\",\n  \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"somali\",\n  \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\",\n  \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\",\n  \"subpixel-antialiased\", \"svg_masks\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\",\n  \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\",\n  \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\",\n  \"tamil\",\n  \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\",\n  \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\",\n  \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\",\n  \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\",\n  \"trad-chinese-formal\", \"trad-chinese-informal\", \"transform\",\n  \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\",\n  \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\",\n  \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\",\n  \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\",\n  \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\", \"visiblePainted\",\n  \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\",\n  \"window\", \"windowframe\", \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\",\n  \"xx-large\", \"xx-small\"\n], valueKeywords = keySet(valueKeywords_);\n\nvar allWords = documentTypes_.concat(mediaTypes_).concat(mediaFeatures_).concat(mediaValueKeywords_)\n    .concat(propertyKeywords_).concat(nonStandardPropertyKeywords_).concat(colorKeywords_)\n    .concat(valueKeywords_);\n\nexport const keywords = {properties: propertyKeywords_, colors: colorKeywords_,\n                         fonts: fontProperties_, values: valueKeywords_, all: allWords}\n\nconst defaults = {\n  documentTypes: documentTypes,\n  mediaTypes: mediaTypes,\n  mediaFeatures: mediaFeatures,\n  mediaValueKeywords: mediaValueKeywords,\n  propertyKeywords: propertyKeywords,\n  nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n  fontProperties: fontProperties,\n  counterDescriptors: counterDescriptors,\n  colorKeywords: colorKeywords,\n  valueKeywords: valueKeywords,\n  tokenHooks: {\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenCComment;\n      return tokenCComment(stream, state);\n    }\n  }\n}\n\nexport const css = mkCSS({name: \"css\"})\n\nfunction tokenCComment(stream, state) {\n  var maybeEnd = false, ch;\n  while ((ch = stream.next()) != null) {\n    if (maybeEnd && ch == \"/\") {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return [\"comment\", \"comment\"];\n}\n\nexport const sCSS = mkCSS({\n  name: \"scss\",\n  mediaTypes: mediaTypes,\n  mediaFeatures: mediaFeatures,\n  mediaValueKeywords: mediaValueKeywords,\n  propertyKeywords: propertyKeywords,\n  nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n  colorKeywords: colorKeywords,\n  valueKeywords: valueKeywords,\n  fontProperties: fontProperties,\n  allowNested: true,\n  lineComment: \"//\",\n  tokenHooks: {\n    \"/\": function(stream, state) {\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      } else if (stream.eat(\"*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      } else {\n        return [\"operator\", \"operator\"];\n      }\n    },\n    \":\": function(stream) {\n      if (stream.match(/^\\s*\\{/, false))\n        return [null, null]\n      return false;\n    },\n    \"$\": function(stream) {\n      stream.match(/^[\\w-]+/);\n      if (stream.match(/^\\s*:/, false))\n        return [\"def\", \"variable-definition\"];\n      return [\"variableName.special\", \"variable\"];\n    },\n    \"#\": function(stream) {\n      if (!stream.eat(\"{\")) return false;\n      return [null, \"interpolation\"];\n    }\n  }\n})\n\nexport const less = mkCSS({\n  name: \"less\",\n  mediaTypes: mediaTypes,\n  mediaFeatures: mediaFeatures,\n  mediaValueKeywords: mediaValueKeywords,\n  propertyKeywords: propertyKeywords,\n  nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n  colorKeywords: colorKeywords,\n  valueKeywords: valueKeywords,\n  fontProperties: fontProperties,\n  allowNested: true,\n  lineComment: \"//\",\n  tokenHooks: {\n    \"/\": function(stream, state) {\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      } else if (stream.eat(\"*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      } else {\n        return [\"operator\", \"operator\"];\n      }\n    },\n    \"@\": function(stream) {\n      if (stream.eat(\"{\")) return [null, \"interpolation\"];\n      if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/i, false)) return false;\n      stream.eatWhile(/[\\w\\\\\\-]/);\n      if (stream.match(/^\\s*:/, false))\n        return [\"def\", \"variable-definition\"];\n      return [\"variableName\", \"variable\"];\n    },\n    \"&\": function() {\n      return [\"atom\", \"atom\"];\n    }\n  }\n})\n\nexport const gss = mkCSS({\n  name: \"gss\",\n  documentTypes: documentTypes,\n  mediaTypes: mediaTypes,\n  mediaFeatures: mediaFeatures,\n  propertyKeywords: propertyKeywords,\n  nonStandardPropertyKeywords: nonStandardPropertyKeywords,\n  fontProperties: fontProperties,\n  counterDescriptors: counterDescriptors,\n  colorKeywords: colorKeywords,\n  valueKeywords: valueKeywords,\n  supportsAtComponent: true,\n  tokenHooks: {\n    \"/\": function(stream, state) {\n      if (!stream.eat(\"*\")) return false;\n      state.tokenize = tokenCComment;\n      return tokenCComment(stream, state);\n    }\n  }\n})\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","$a505ca269043c5f6$export$43cdd2f42edcd6b7","parserConfig","type","override","inline","$a505ca269043c5f6$var$defaults","tokenHooks","documentTypes","mediaTypes","mediaFeatures","mediaValueKeywords","propertyKeywords","nonStandardPropertyKeywords","fontProperties","counterDescriptors","colorKeywords","valueKeywords","allowNested","lineComment","supportsAtComponent","highlightNonStandardPropertyKeywords","tokenString","quote","stream","state","ch","escaped","next","backUp","tokenize","tokenParenthesized","match","Context","indent","prev","pushContext","context","indentation","indentUnit","popContext","pass","states","popAndPass","n","i","wordAsValue","word","current","toLowerCase","hasOwnProperty","top","test","stateArg","charAt","block","maybeprop","prop","propBlock","_stream","parens","pseudo","atBlock","atComponentBlock","atBlock_parens","restricted_atBlock_before","restricted_atBlock","keyframes","at","interpolation","name","startState","token","eatSpace","style","result","eatWhile","eat","peek","textAfter","iCx","cx","Math","max","unit","languageData","indentOnInput","commentTokens","line","open","close","autocomplete","$a505ca269043c5f6$var$allWords","$a505ca269043c5f6$var$keySet","array","keys","length","e","Object","defineProperty","get","$a505ca269043c5f6$export$2c0d8580e75af113","set","s","enumerable","configurable","$a505ca269043c5f6$var$documentTypes_","$a505ca269043c5f6$var$documentTypes","$a505ca269043c5f6$var$mediaTypes_","$a505ca269043c5f6$var$mediaTypes","$a505ca269043c5f6$var$mediaFeatures_","$a505ca269043c5f6$var$mediaFeatures","$a505ca269043c5f6$var$mediaValueKeywords_","$a505ca269043c5f6$var$mediaValueKeywords","$a505ca269043c5f6$var$propertyKeywords_","$a505ca269043c5f6$var$propertyKeywords","$a505ca269043c5f6$var$nonStandardPropertyKeywords_","$a505ca269043c5f6$var$nonStandardPropertyKeywords","$a505ca269043c5f6$var$fontProperties","$a505ca269043c5f6$var$counterDescriptors","$a505ca269043c5f6$var$colorKeywords_","$a505ca269043c5f6$var$colorKeywords","$a505ca269043c5f6$var$valueKeywords_","$a505ca269043c5f6$var$valueKeywords","concat","$a505ca269043c5f6$var$tokenCComment","maybeEnd","skipToEnd"],"version":3,"file":"css.45498338.js.map"}