{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/vhdl.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"lyTG6\", function(module, exports) {\n\n$parcel$export(module.exports, \"vhdl\", () => $fb27f6764b875eca$export$99b7c4f08874178b);\nfunction $fb27f6764b875eca$var$words(str) {\n    var obj = {}, words = str.split(\",\");\n    for(var i = 0; i < words.length; ++i){\n        var allCaps = words[i].toUpperCase();\n        var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n        obj[words[i]] = true;\n        obj[allCaps] = true;\n        obj[firstCap] = true;\n    }\n    return obj;\n}\nfunction $fb27f6764b875eca$var$metaHook(stream) {\n    stream.eatWhile(/[\\w\\$_]/);\n    return \"meta\";\n}\nvar $fb27f6764b875eca$var$atoms = $fb27f6764b875eca$var$words(\"null\"), $fb27f6764b875eca$var$hooks = {\n    \"`\": $fb27f6764b875eca$var$metaHook,\n    \"$\": $fb27f6764b875eca$var$metaHook\n}, $fb27f6764b875eca$var$multiLineStrings = false;\nvar $fb27f6764b875eca$var$keywords = $fb27f6764b875eca$var$words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\nvar $fb27f6764b875eca$var$blockKeywords = $fb27f6764b875eca$var$words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\nvar $fb27f6764b875eca$var$isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\nvar $fb27f6764b875eca$var$curPunc;\nfunction $fb27f6764b875eca$var$tokenBase(stream, state) {\n    var ch = stream.next();\n    if ($fb27f6764b875eca$var$hooks[ch]) {\n        var result = $fb27f6764b875eca$var$hooks[ch](stream, state);\n        if (result !== false) return result;\n    }\n    if (ch == '\"') {\n        state.tokenize = $fb27f6764b875eca$var$tokenString2(ch);\n        return state.tokenize(stream, state);\n    }\n    if (ch == \"'\") {\n        state.tokenize = $fb27f6764b875eca$var$tokenString(ch);\n        return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n        $fb27f6764b875eca$var$curPunc = ch;\n        return null;\n    }\n    if (/[\\d']/.test(ch)) {\n        stream.eatWhile(/[\\w\\.']/);\n        return \"number\";\n    }\n    if (ch == \"-\") {\n        if (stream.eat(\"-\")) {\n            stream.skipToEnd();\n            return \"comment\";\n        }\n    }\n    if ($fb27f6764b875eca$var$isOperatorChar.test(ch)) {\n        stream.eatWhile($fb27f6764b875eca$var$isOperatorChar);\n        return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    var cur = stream.current();\n    if ($fb27f6764b875eca$var$keywords.propertyIsEnumerable(cur.toLowerCase())) {\n        if ($fb27f6764b875eca$var$blockKeywords.propertyIsEnumerable(cur)) $fb27f6764b875eca$var$curPunc = \"newstatement\";\n        return \"keyword\";\n    }\n    if ($fb27f6764b875eca$var$atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n}\nfunction $fb27f6764b875eca$var$tokenString(quote) {\n    return function(stream, state) {\n        var escaped = false, next, end = false;\n        while((next = stream.next()) != null){\n            if (next == quote && !escaped) {\n                end = true;\n                break;\n            }\n            escaped = !escaped && next == \"--\";\n        }\n        if (end || !(escaped || $fb27f6764b875eca$var$multiLineStrings)) state.tokenize = $fb27f6764b875eca$var$tokenBase;\n        return \"string\";\n    };\n}\nfunction $fb27f6764b875eca$var$tokenString2(quote) {\n    return function(stream, state) {\n        var escaped = false, next, end = false;\n        while((next = stream.next()) != null){\n            if (next == quote && !escaped) {\n                end = true;\n                break;\n            }\n            escaped = !escaped && next == \"--\";\n        }\n        if (end || !(escaped || $fb27f6764b875eca$var$multiLineStrings)) state.tokenize = $fb27f6764b875eca$var$tokenBase;\n        return \"string.special\";\n    };\n}\nfunction $fb27f6764b875eca$var$Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n}\nfunction $fb27f6764b875eca$var$pushContext(state, col, type) {\n    return state.context = new $fb27f6764b875eca$var$Context(state.indented, col, type, null, state.context);\n}\nfunction $fb27f6764b875eca$var$popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n    return state.context = state.context.prev;\n}\nconst $fb27f6764b875eca$export$99b7c4f08874178b = {\n    name: \"vhdl\",\n    startState: function(indentUnit) {\n        return {\n            tokenize: null,\n            context: new $fb27f6764b875eca$var$Context(-indentUnit, 0, \"top\", false),\n            indented: 0,\n            startOfLine: true\n        };\n    },\n    token: function(stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n            if (ctx.align == null) ctx.align = false;\n            state.indented = stream.indentation();\n            state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        $fb27f6764b875eca$var$curPunc = null;\n        var style = (state.tokenize || $fb27f6764b875eca$var$tokenBase)(stream, state);\n        if (style == \"comment\" || style == \"meta\") return style;\n        if (ctx.align == null) ctx.align = true;\n        if (($fb27f6764b875eca$var$curPunc == \";\" || $fb27f6764b875eca$var$curPunc == \":\") && ctx.type == \"statement\") $fb27f6764b875eca$var$popContext(state);\n        else if ($fb27f6764b875eca$var$curPunc == \"{\") $fb27f6764b875eca$var$pushContext(state, stream.column(), \"}\");\n        else if ($fb27f6764b875eca$var$curPunc == \"[\") $fb27f6764b875eca$var$pushContext(state, stream.column(), \"]\");\n        else if ($fb27f6764b875eca$var$curPunc == \"(\") $fb27f6764b875eca$var$pushContext(state, stream.column(), \")\");\n        else if ($fb27f6764b875eca$var$curPunc == \"}\") {\n            while(ctx.type == \"statement\")ctx = $fb27f6764b875eca$var$popContext(state);\n            if (ctx.type == \"}\") ctx = $fb27f6764b875eca$var$popContext(state);\n            while(ctx.type == \"statement\")ctx = $fb27f6764b875eca$var$popContext(state);\n        } else if ($fb27f6764b875eca$var$curPunc == ctx.type) $fb27f6764b875eca$var$popContext(state);\n        else if (ctx.type == \"}\" || ctx.type == \"top\" || ctx.type == \"statement\" && $fb27f6764b875eca$var$curPunc == \"newstatement\") $fb27f6764b875eca$var$pushContext(state, stream.column(), \"statement\");\n        state.startOfLine = false;\n        return style;\n    },\n    indent: function(state, textAfter, cx) {\n        if (state.tokenize != $fb27f6764b875eca$var$tokenBase && state.tokenize != null) return 0;\n        var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n        if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);\n        else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n        else return ctx.indented + (closing ? 0 : cx.unit);\n    },\n    languageData: {\n        indentOnInput: /^\\s*[{}]$/,\n        commentTokens: {\n            line: \"--\"\n        }\n    }\n};\n\n});\n\n\n//# sourceMappingURL=vhdl.ac4a6e3f.js.map\n","function words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nvar atoms = words(\"null\"),\n    hooks = {\"`\": metaHook, \"$\": metaHook},\n    multiLineStrings = false;\n\nvar keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n                     \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n                     \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n                     \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n                     \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n                     \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n                     \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\nvar blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\nvar isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\nvar curPunc;\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (hooks[ch]) {\n    var result = hooks[ch](stream, state);\n    if (result !== false) return result;\n  }\n  if (ch == '\"') {\n    state.tokenize = tokenString2(ch);\n    return state.tokenize(stream, state);\n  }\n  if (ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    curPunc = ch;\n    return null;\n  }\n  if (/[\\d']/.test(ch)) {\n    stream.eatWhile(/[\\w\\.']/);\n    return \"number\";\n  }\n  if (ch == \"-\") {\n    if (stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n  }\n  if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return \"operator\";\n  }\n  stream.eatWhile(/[\\w\\$_]/);\n  var cur = stream.current();\n  if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n    return \"keyword\";\n  }\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n  return \"variable\";\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"--\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\nfunction tokenString2(quote) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {end = true; break;}\n      escaped = !escaped && next == \"--\";\n    }\n    if (end || !(escaped || multiLineStrings))\n      state.tokenize = tokenBase;\n    return \"string.special\";\n  };\n}\n\nfunction Context(indented, column, type, align, prev) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.align = align;\n  this.prev = prev;\n}\nfunction pushContext(state, col, type) {\n  return state.context = new Context(state.indented, col, type, null, state.context);\n}\nfunction popContext(state) {\n  var t = state.context.type;\n  if (t == \")\" || t == \"]\" || t == \"}\")\n    state.indented = state.context.indented;\n  return state.context = state.context.prev;\n}\n\n// Interface\nexport const vhdl = {\n  name: \"vhdl\",\n  startState: function(indentUnit) {\n    return {\n      tokenize: null,\n      context: new Context(-indentUnit, 0, \"top\", false),\n      indented: 0,\n      startOfLine: true\n    };\n  },\n\n  token: function(stream, state) {\n    var ctx = state.context;\n    if (stream.sol()) {\n      if (ctx.align == null) ctx.align = false;\n      state.indented = stream.indentation();\n      state.startOfLine = true;\n    }\n    if (stream.eatSpace()) return null;\n    curPunc = null;\n    var style = (state.tokenize || tokenBase)(stream, state);\n    if (style == \"comment\" || style == \"meta\") return style;\n    if (ctx.align == null) ctx.align = true;\n\n    if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n    else if (curPunc == \"}\") {\n      while (ctx.type == \"statement\") ctx = popContext(state);\n      if (ctx.type == \"}\") ctx = popContext(state);\n      while (ctx.type == \"statement\") ctx = popContext(state);\n    }\n    else if (curPunc == ctx.type) popContext(state);\n    else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n      pushContext(state, stream.column(), \"statement\");\n    state.startOfLine = false;\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);\n    else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n    else return ctx.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"--\"}\n  }\n}\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","$fb27f6764b875eca$var$words","str","obj","words","split","i","length","allCaps","toUpperCase","firstCap","charAt","slice","$fb27f6764b875eca$var$metaHook","stream","eatWhile","Object","defineProperty","get","$fb27f6764b875eca$export$99b7c4f08874178b","set","s","enumerable","configurable","$fb27f6764b875eca$var$curPunc","$fb27f6764b875eca$var$atoms","$fb27f6764b875eca$var$hooks","$fb27f6764b875eca$var$keywords","$fb27f6764b875eca$var$blockKeywords","$fb27f6764b875eca$var$isOperatorChar","$fb27f6764b875eca$var$tokenBase","state","quote","ch","next","result","tokenize","escaped","end","test","eat","skipToEnd","cur","current","propertyIsEnumerable","toLowerCase","$fb27f6764b875eca$var$Context","indented","column","type","align","prev","$fb27f6764b875eca$var$pushContext","col","context","$fb27f6764b875eca$var$popContext","t","name","startState","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","cx","firstChar","closing","unit","languageData","indentOnInput","commentTokens","line"],"version":3,"file":"vhdl.ac4a6e3f.js.map"}