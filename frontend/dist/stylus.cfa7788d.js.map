{"mappings":"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","sources":["<anon>","node_modules/@codemirror/legacy-modes/mode/stylus.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"eOdmE\", function(module, exports) {\n\n$parcel$export(module.exports, \"stylus\", () => $ac801a1925d6ffe9$export$f387b57d18d2701f);\n// developer.mozilla.org/en-US/docs/Web/HTML/Element\nvar $ac801a1925d6ffe9$var$tagKeywords_ = [\n    \"a\",\n    \"abbr\",\n    \"address\",\n    \"area\",\n    \"article\",\n    \"aside\",\n    \"audio\",\n    \"b\",\n    \"base\",\n    \"bdi\",\n    \"bdo\",\n    \"bgsound\",\n    \"blockquote\",\n    \"body\",\n    \"br\",\n    \"button\",\n    \"canvas\",\n    \"caption\",\n    \"cite\",\n    \"code\",\n    \"col\",\n    \"colgroup\",\n    \"data\",\n    \"datalist\",\n    \"dd\",\n    \"del\",\n    \"details\",\n    \"dfn\",\n    \"div\",\n    \"dl\",\n    \"dt\",\n    \"em\",\n    \"embed\",\n    \"fieldset\",\n    \"figcaption\",\n    \"figure\",\n    \"footer\",\n    \"form\",\n    \"h1\",\n    \"h2\",\n    \"h3\",\n    \"h4\",\n    \"h5\",\n    \"h6\",\n    \"head\",\n    \"header\",\n    \"hgroup\",\n    \"hr\",\n    \"html\",\n    \"i\",\n    \"iframe\",\n    \"img\",\n    \"input\",\n    \"ins\",\n    \"kbd\",\n    \"keygen\",\n    \"label\",\n    \"legend\",\n    \"li\",\n    \"link\",\n    \"main\",\n    \"map\",\n    \"mark\",\n    \"marquee\",\n    \"menu\",\n    \"menuitem\",\n    \"meta\",\n    \"meter\",\n    \"nav\",\n    \"nobr\",\n    \"noframes\",\n    \"noscript\",\n    \"object\",\n    \"ol\",\n    \"optgroup\",\n    \"option\",\n    \"output\",\n    \"p\",\n    \"param\",\n    \"pre\",\n    \"progress\",\n    \"q\",\n    \"rp\",\n    \"rt\",\n    \"ruby\",\n    \"s\",\n    \"samp\",\n    \"script\",\n    \"section\",\n    \"select\",\n    \"small\",\n    \"source\",\n    \"span\",\n    \"strong\",\n    \"style\",\n    \"sub\",\n    \"summary\",\n    \"sup\",\n    \"table\",\n    \"tbody\",\n    \"td\",\n    \"textarea\",\n    \"tfoot\",\n    \"th\",\n    \"thead\",\n    \"time\",\n    \"tr\",\n    \"track\",\n    \"u\",\n    \"ul\",\n    \"var\",\n    \"video\"\n];\n// github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n// Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\nvar $ac801a1925d6ffe9$var$documentTypes_ = [\n    \"domain\",\n    \"regexp\",\n    \"url-prefix\",\n    \"url\"\n];\nvar $ac801a1925d6ffe9$var$mediaTypes_ = [\n    \"all\",\n    \"aural\",\n    \"braille\",\n    \"handheld\",\n    \"print\",\n    \"projection\",\n    \"screen\",\n    \"tty\",\n    \"tv\",\n    \"embossed\"\n];\nvar $ac801a1925d6ffe9$var$mediaFeatures_ = [\n    \"width\",\n    \"min-width\",\n    \"max-width\",\n    \"height\",\n    \"min-height\",\n    \"max-height\",\n    \"device-width\",\n    \"min-device-width\",\n    \"max-device-width\",\n    \"device-height\",\n    \"min-device-height\",\n    \"max-device-height\",\n    \"aspect-ratio\",\n    \"min-aspect-ratio\",\n    \"max-aspect-ratio\",\n    \"device-aspect-ratio\",\n    \"min-device-aspect-ratio\",\n    \"max-device-aspect-ratio\",\n    \"color\",\n    \"min-color\",\n    \"max-color\",\n    \"color-index\",\n    \"min-color-index\",\n    \"max-color-index\",\n    \"monochrome\",\n    \"min-monochrome\",\n    \"max-monochrome\",\n    \"resolution\",\n    \"min-resolution\",\n    \"max-resolution\",\n    \"scan\",\n    \"grid\",\n    \"dynamic-range\",\n    \"video-dynamic-range\"\n];\nvar $ac801a1925d6ffe9$var$propertyKeywords_ = [\n    \"align-content\",\n    \"align-items\",\n    \"align-self\",\n    \"alignment-adjust\",\n    \"alignment-baseline\",\n    \"anchor-point\",\n    \"animation\",\n    \"animation-delay\",\n    \"animation-direction\",\n    \"animation-duration\",\n    \"animation-fill-mode\",\n    \"animation-iteration-count\",\n    \"animation-name\",\n    \"animation-play-state\",\n    \"animation-timing-function\",\n    \"appearance\",\n    \"azimuth\",\n    \"backface-visibility\",\n    \"background\",\n    \"background-attachment\",\n    \"background-clip\",\n    \"background-color\",\n    \"background-image\",\n    \"background-origin\",\n    \"background-position\",\n    \"background-repeat\",\n    \"background-size\",\n    \"baseline-shift\",\n    \"binding\",\n    \"bleed\",\n    \"bookmark-label\",\n    \"bookmark-level\",\n    \"bookmark-state\",\n    \"bookmark-target\",\n    \"border\",\n    \"border-bottom\",\n    \"border-bottom-color\",\n    \"border-bottom-left-radius\",\n    \"border-bottom-right-radius\",\n    \"border-bottom-style\",\n    \"border-bottom-width\",\n    \"border-collapse\",\n    \"border-color\",\n    \"border-image\",\n    \"border-image-outset\",\n    \"border-image-repeat\",\n    \"border-image-slice\",\n    \"border-image-source\",\n    \"border-image-width\",\n    \"border-left\",\n    \"border-left-color\",\n    \"border-left-style\",\n    \"border-left-width\",\n    \"border-radius\",\n    \"border-right\",\n    \"border-right-color\",\n    \"border-right-style\",\n    \"border-right-width\",\n    \"border-spacing\",\n    \"border-style\",\n    \"border-top\",\n    \"border-top-color\",\n    \"border-top-left-radius\",\n    \"border-top-right-radius\",\n    \"border-top-style\",\n    \"border-top-width\",\n    \"border-width\",\n    \"bottom\",\n    \"box-decoration-break\",\n    \"box-shadow\",\n    \"box-sizing\",\n    \"break-after\",\n    \"break-before\",\n    \"break-inside\",\n    \"caption-side\",\n    \"clear\",\n    \"clip\",\n    \"color\",\n    \"color-profile\",\n    \"column-count\",\n    \"column-fill\",\n    \"column-gap\",\n    \"column-rule\",\n    \"column-rule-color\",\n    \"column-rule-style\",\n    \"column-rule-width\",\n    \"column-span\",\n    \"column-width\",\n    \"columns\",\n    \"content\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"crop\",\n    \"cue\",\n    \"cue-after\",\n    \"cue-before\",\n    \"cursor\",\n    \"direction\",\n    \"display\",\n    \"dominant-baseline\",\n    \"drop-initial-after-adjust\",\n    \"drop-initial-after-align\",\n    \"drop-initial-before-adjust\",\n    \"drop-initial-before-align\",\n    \"drop-initial-size\",\n    \"drop-initial-value\",\n    \"elevation\",\n    \"empty-cells\",\n    \"fit\",\n    \"fit-position\",\n    \"flex\",\n    \"flex-basis\",\n    \"flex-direction\",\n    \"flex-flow\",\n    \"flex-grow\",\n    \"flex-shrink\",\n    \"flex-wrap\",\n    \"float\",\n    \"float-offset\",\n    \"flow-from\",\n    \"flow-into\",\n    \"font\",\n    \"font-feature-settings\",\n    \"font-family\",\n    \"font-kerning\",\n    \"font-language-override\",\n    \"font-size\",\n    \"font-size-adjust\",\n    \"font-stretch\",\n    \"font-style\",\n    \"font-synthesis\",\n    \"font-variant\",\n    \"font-variant-alternates\",\n    \"font-variant-caps\",\n    \"font-variant-east-asian\",\n    \"font-variant-ligatures\",\n    \"font-variant-numeric\",\n    \"font-variant-position\",\n    \"font-weight\",\n    \"grid\",\n    \"grid-area\",\n    \"grid-auto-columns\",\n    \"grid-auto-flow\",\n    \"grid-auto-position\",\n    \"grid-auto-rows\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-start\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-start\",\n    \"grid-template\",\n    \"grid-template-areas\",\n    \"grid-template-columns\",\n    \"grid-template-rows\",\n    \"hanging-punctuation\",\n    \"height\",\n    \"hyphens\",\n    \"icon\",\n    \"image-orientation\",\n    \"image-rendering\",\n    \"image-resolution\",\n    \"inline-box-align\",\n    \"justify-content\",\n    \"left\",\n    \"letter-spacing\",\n    \"line-break\",\n    \"line-height\",\n    \"line-stacking\",\n    \"line-stacking-ruby\",\n    \"line-stacking-shift\",\n    \"line-stacking-strategy\",\n    \"list-style\",\n    \"list-style-image\",\n    \"list-style-position\",\n    \"list-style-type\",\n    \"margin\",\n    \"margin-bottom\",\n    \"margin-left\",\n    \"margin-right\",\n    \"margin-top\",\n    \"marker-offset\",\n    \"marks\",\n    \"marquee-direction\",\n    \"marquee-loop\",\n    \"marquee-play-count\",\n    \"marquee-speed\",\n    \"marquee-style\",\n    \"max-height\",\n    \"max-width\",\n    \"min-height\",\n    \"min-width\",\n    \"move-to\",\n    \"nav-down\",\n    \"nav-index\",\n    \"nav-left\",\n    \"nav-right\",\n    \"nav-up\",\n    \"object-fit\",\n    \"object-position\",\n    \"opacity\",\n    \"order\",\n    \"orphans\",\n    \"outline\",\n    \"outline-color\",\n    \"outline-offset\",\n    \"outline-style\",\n    \"outline-width\",\n    \"overflow\",\n    \"overflow-style\",\n    \"overflow-wrap\",\n    \"overflow-x\",\n    \"overflow-y\",\n    \"padding\",\n    \"padding-bottom\",\n    \"padding-left\",\n    \"padding-right\",\n    \"padding-top\",\n    \"page\",\n    \"page-break-after\",\n    \"page-break-before\",\n    \"page-break-inside\",\n    \"page-policy\",\n    \"pause\",\n    \"pause-after\",\n    \"pause-before\",\n    \"perspective\",\n    \"perspective-origin\",\n    \"pitch\",\n    \"pitch-range\",\n    \"play-during\",\n    \"position\",\n    \"presentation-level\",\n    \"punctuation-trim\",\n    \"quotes\",\n    \"region-break-after\",\n    \"region-break-before\",\n    \"region-break-inside\",\n    \"region-fragment\",\n    \"rendering-intent\",\n    \"resize\",\n    \"rest\",\n    \"rest-after\",\n    \"rest-before\",\n    \"richness\",\n    \"right\",\n    \"rotation\",\n    \"rotation-point\",\n    \"ruby-align\",\n    \"ruby-overhang\",\n    \"ruby-position\",\n    \"ruby-span\",\n    \"shape-image-threshold\",\n    \"shape-inside\",\n    \"shape-margin\",\n    \"shape-outside\",\n    \"size\",\n    \"speak\",\n    \"speak-as\",\n    \"speak-header\",\n    \"speak-numeral\",\n    \"speak-punctuation\",\n    \"speech-rate\",\n    \"stress\",\n    \"string-set\",\n    \"tab-size\",\n    \"table-layout\",\n    \"target\",\n    \"target-name\",\n    \"target-new\",\n    \"target-position\",\n    \"text-align\",\n    \"text-align-last\",\n    \"text-decoration\",\n    \"text-decoration-color\",\n    \"text-decoration-line\",\n    \"text-decoration-skip\",\n    \"text-decoration-style\",\n    \"text-emphasis\",\n    \"text-emphasis-color\",\n    \"text-emphasis-position\",\n    \"text-emphasis-style\",\n    \"text-height\",\n    \"text-indent\",\n    \"text-justify\",\n    \"text-outline\",\n    \"text-overflow\",\n    \"text-shadow\",\n    \"text-size-adjust\",\n    \"text-space-collapse\",\n    \"text-transform\",\n    \"text-underline-position\",\n    \"text-wrap\",\n    \"top\",\n    \"transform\",\n    \"transform-origin\",\n    \"transform-style\",\n    \"transition\",\n    \"transition-delay\",\n    \"transition-duration\",\n    \"transition-property\",\n    \"transition-timing-function\",\n    \"unicode-bidi\",\n    \"vertical-align\",\n    \"visibility\",\n    \"voice-balance\",\n    \"voice-duration\",\n    \"voice-family\",\n    \"voice-pitch\",\n    \"voice-range\",\n    \"voice-rate\",\n    \"voice-stress\",\n    \"voice-volume\",\n    \"volume\",\n    \"white-space\",\n    \"widows\",\n    \"width\",\n    \"will-change\",\n    \"word-break\",\n    \"word-spacing\",\n    \"word-wrap\",\n    \"z-index\",\n    \"clip-path\",\n    \"clip-rule\",\n    \"mask\",\n    \"enable-background\",\n    \"filter\",\n    \"flood-color\",\n    \"flood-opacity\",\n    \"lighting-color\",\n    \"stop-color\",\n    \"stop-opacity\",\n    \"pointer-events\",\n    \"color-interpolation\",\n    \"color-interpolation-filters\",\n    \"color-rendering\",\n    \"fill\",\n    \"fill-opacity\",\n    \"fill-rule\",\n    \"image-rendering\",\n    \"marker\",\n    \"marker-end\",\n    \"marker-mid\",\n    \"marker-start\",\n    \"shape-rendering\",\n    \"stroke\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-linecap\",\n    \"stroke-linejoin\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\",\n    \"text-rendering\",\n    \"baseline-shift\",\n    \"dominant-baseline\",\n    \"glyph-orientation-horizontal\",\n    \"glyph-orientation-vertical\",\n    \"text-anchor\",\n    \"writing-mode\",\n    \"font-smoothing\",\n    \"osx-font-smoothing\"\n];\nvar $ac801a1925d6ffe9$var$nonStandardPropertyKeywords_ = [\n    \"scrollbar-arrow-color\",\n    \"scrollbar-base-color\",\n    \"scrollbar-dark-shadow-color\",\n    \"scrollbar-face-color\",\n    \"scrollbar-highlight-color\",\n    \"scrollbar-shadow-color\",\n    \"scrollbar-3d-light-color\",\n    \"scrollbar-track-color\",\n    \"shape-inside\",\n    \"searchfield-cancel-button\",\n    \"searchfield-decoration\",\n    \"searchfield-results-button\",\n    \"searchfield-results-decoration\",\n    \"zoom\"\n];\nvar $ac801a1925d6ffe9$var$fontProperties_ = [\n    \"font-family\",\n    \"src\",\n    \"unicode-range\",\n    \"font-variant\",\n    \"font-feature-settings\",\n    \"font-stretch\",\n    \"font-weight\",\n    \"font-style\"\n];\nvar $ac801a1925d6ffe9$var$colorKeywords_ = [\n    \"aliceblue\",\n    \"antiquewhite\",\n    \"aqua\",\n    \"aquamarine\",\n    \"azure\",\n    \"beige\",\n    \"bisque\",\n    \"black\",\n    \"blanchedalmond\",\n    \"blue\",\n    \"blueviolet\",\n    \"brown\",\n    \"burlywood\",\n    \"cadetblue\",\n    \"chartreuse\",\n    \"chocolate\",\n    \"coral\",\n    \"cornflowerblue\",\n    \"cornsilk\",\n    \"crimson\",\n    \"cyan\",\n    \"darkblue\",\n    \"darkcyan\",\n    \"darkgoldenrod\",\n    \"darkgray\",\n    \"darkgreen\",\n    \"darkkhaki\",\n    \"darkmagenta\",\n    \"darkolivegreen\",\n    \"darkorange\",\n    \"darkorchid\",\n    \"darkred\",\n    \"darksalmon\",\n    \"darkseagreen\",\n    \"darkslateblue\",\n    \"darkslategray\",\n    \"darkturquoise\",\n    \"darkviolet\",\n    \"deeppink\",\n    \"deepskyblue\",\n    \"dimgray\",\n    \"dodgerblue\",\n    \"firebrick\",\n    \"floralwhite\",\n    \"forestgreen\",\n    \"fuchsia\",\n    \"gainsboro\",\n    \"ghostwhite\",\n    \"gold\",\n    \"goldenrod\",\n    \"gray\",\n    \"grey\",\n    \"green\",\n    \"greenyellow\",\n    \"honeydew\",\n    \"hotpink\",\n    \"indianred\",\n    \"indigo\",\n    \"ivory\",\n    \"khaki\",\n    \"lavender\",\n    \"lavenderblush\",\n    \"lawngreen\",\n    \"lemonchiffon\",\n    \"lightblue\",\n    \"lightcoral\",\n    \"lightcyan\",\n    \"lightgoldenrodyellow\",\n    \"lightgray\",\n    \"lightgreen\",\n    \"lightpink\",\n    \"lightsalmon\",\n    \"lightseagreen\",\n    \"lightskyblue\",\n    \"lightslategray\",\n    \"lightsteelblue\",\n    \"lightyellow\",\n    \"lime\",\n    \"limegreen\",\n    \"linen\",\n    \"magenta\",\n    \"maroon\",\n    \"mediumaquamarine\",\n    \"mediumblue\",\n    \"mediumorchid\",\n    \"mediumpurple\",\n    \"mediumseagreen\",\n    \"mediumslateblue\",\n    \"mediumspringgreen\",\n    \"mediumturquoise\",\n    \"mediumvioletred\",\n    \"midnightblue\",\n    \"mintcream\",\n    \"mistyrose\",\n    \"moccasin\",\n    \"navajowhite\",\n    \"navy\",\n    \"oldlace\",\n    \"olive\",\n    \"olivedrab\",\n    \"orange\",\n    \"orangered\",\n    \"orchid\",\n    \"palegoldenrod\",\n    \"palegreen\",\n    \"paleturquoise\",\n    \"palevioletred\",\n    \"papayawhip\",\n    \"peachpuff\",\n    \"peru\",\n    \"pink\",\n    \"plum\",\n    \"powderblue\",\n    \"purple\",\n    \"rebeccapurple\",\n    \"red\",\n    \"rosybrown\",\n    \"royalblue\",\n    \"saddlebrown\",\n    \"salmon\",\n    \"sandybrown\",\n    \"seagreen\",\n    \"seashell\",\n    \"sienna\",\n    \"silver\",\n    \"skyblue\",\n    \"slateblue\",\n    \"slategray\",\n    \"snow\",\n    \"springgreen\",\n    \"steelblue\",\n    \"tan\",\n    \"teal\",\n    \"thistle\",\n    \"tomato\",\n    \"turquoise\",\n    \"violet\",\n    \"wheat\",\n    \"white\",\n    \"whitesmoke\",\n    \"yellow\",\n    \"yellowgreen\"\n];\nvar $ac801a1925d6ffe9$var$valueKeywords_ = [\n    \"above\",\n    \"absolute\",\n    \"activeborder\",\n    \"additive\",\n    \"activecaption\",\n    \"afar\",\n    \"after-white-space\",\n    \"ahead\",\n    \"alias\",\n    \"all\",\n    \"all-scroll\",\n    \"alphabetic\",\n    \"alternate\",\n    \"always\",\n    \"amharic\",\n    \"amharic-abegede\",\n    \"antialiased\",\n    \"appworkspace\",\n    \"arabic-indic\",\n    \"armenian\",\n    \"asterisks\",\n    \"attr\",\n    \"auto\",\n    \"avoid\",\n    \"avoid-column\",\n    \"avoid-page\",\n    \"avoid-region\",\n    \"background\",\n    \"backwards\",\n    \"baseline\",\n    \"below\",\n    \"bidi-override\",\n    \"binary\",\n    \"bengali\",\n    \"blink\",\n    \"block\",\n    \"block-axis\",\n    \"bold\",\n    \"bolder\",\n    \"border\",\n    \"border-box\",\n    \"both\",\n    \"bottom\",\n    \"break\",\n    \"break-all\",\n    \"break-word\",\n    \"bullets\",\n    \"button\",\n    \"buttonface\",\n    \"buttonhighlight\",\n    \"buttonshadow\",\n    \"buttontext\",\n    \"calc\",\n    \"cambodian\",\n    \"capitalize\",\n    \"caps-lock-indicator\",\n    \"caption\",\n    \"captiontext\",\n    \"caret\",\n    \"cell\",\n    \"center\",\n    \"checkbox\",\n    \"circle\",\n    \"cjk-decimal\",\n    \"cjk-earthly-branch\",\n    \"cjk-heavenly-stem\",\n    \"cjk-ideographic\",\n    \"clear\",\n    \"clip\",\n    \"close-quote\",\n    \"col-resize\",\n    \"collapse\",\n    \"column\",\n    \"compact\",\n    \"condensed\",\n    \"conic-gradient\",\n    \"contain\",\n    \"content\",\n    \"contents\",\n    \"content-box\",\n    \"context-menu\",\n    \"continuous\",\n    \"copy\",\n    \"counter\",\n    \"counters\",\n    \"cover\",\n    \"crop\",\n    \"cross\",\n    \"crosshair\",\n    \"currentcolor\",\n    \"cursive\",\n    \"cyclic\",\n    \"dashed\",\n    \"decimal\",\n    \"decimal-leading-zero\",\n    \"default\",\n    \"default-button\",\n    \"destination-atop\",\n    \"destination-in\",\n    \"destination-out\",\n    \"destination-over\",\n    \"devanagari\",\n    \"disc\",\n    \"discard\",\n    \"disclosure-closed\",\n    \"disclosure-open\",\n    \"document\",\n    \"dot-dash\",\n    \"dot-dot-dash\",\n    \"dotted\",\n    \"double\",\n    \"down\",\n    \"e-resize\",\n    \"ease\",\n    \"ease-in\",\n    \"ease-in-out\",\n    \"ease-out\",\n    \"element\",\n    \"ellipse\",\n    \"ellipsis\",\n    \"embed\",\n    \"end\",\n    \"ethiopic\",\n    \"ethiopic-abegede\",\n    \"ethiopic-abegede-am-et\",\n    \"ethiopic-abegede-gez\",\n    \"ethiopic-abegede-ti-er\",\n    \"ethiopic-abegede-ti-et\",\n    \"ethiopic-halehame-aa-er\",\n    \"ethiopic-halehame-aa-et\",\n    \"ethiopic-halehame-am-et\",\n    \"ethiopic-halehame-gez\",\n    \"ethiopic-halehame-om-et\",\n    \"ethiopic-halehame-sid-et\",\n    \"ethiopic-halehame-so-et\",\n    \"ethiopic-halehame-ti-er\",\n    \"ethiopic-halehame-ti-et\",\n    \"ethiopic-halehame-tig\",\n    \"ethiopic-numeric\",\n    \"ew-resize\",\n    \"expanded\",\n    \"extends\",\n    \"extra-condensed\",\n    \"extra-expanded\",\n    \"fantasy\",\n    \"fast\",\n    \"fill\",\n    \"fixed\",\n    \"flat\",\n    \"flex\",\n    \"footnotes\",\n    \"forwards\",\n    \"from\",\n    \"geometricPrecision\",\n    \"georgian\",\n    \"graytext\",\n    \"groove\",\n    \"gujarati\",\n    \"gurmukhi\",\n    \"hand\",\n    \"hangul\",\n    \"hangul-consonant\",\n    \"hebrew\",\n    \"help\",\n    \"hidden\",\n    \"hide\",\n    \"high\",\n    \"higher\",\n    \"highlight\",\n    \"highlighttext\",\n    \"hiragana\",\n    \"hiragana-iroha\",\n    \"horizontal\",\n    \"hsl\",\n    \"hsla\",\n    \"icon\",\n    \"ignore\",\n    \"inactiveborder\",\n    \"inactivecaption\",\n    \"inactivecaptiontext\",\n    \"infinite\",\n    \"infobackground\",\n    \"infotext\",\n    \"inherit\",\n    \"initial\",\n    \"inline\",\n    \"inline-axis\",\n    \"inline-block\",\n    \"inline-flex\",\n    \"inline-table\",\n    \"inset\",\n    \"inside\",\n    \"intrinsic\",\n    \"invert\",\n    \"italic\",\n    \"japanese-formal\",\n    \"japanese-informal\",\n    \"justify\",\n    \"kannada\",\n    \"katakana\",\n    \"katakana-iroha\",\n    \"keep-all\",\n    \"khmer\",\n    \"korean-hangul-formal\",\n    \"korean-hanja-formal\",\n    \"korean-hanja-informal\",\n    \"landscape\",\n    \"lao\",\n    \"large\",\n    \"larger\",\n    \"left\",\n    \"level\",\n    \"lighter\",\n    \"line-through\",\n    \"linear\",\n    \"linear-gradient\",\n    \"lines\",\n    \"list-item\",\n    \"listbox\",\n    \"listitem\",\n    \"local\",\n    \"logical\",\n    \"loud\",\n    \"lower\",\n    \"lower-alpha\",\n    \"lower-armenian\",\n    \"lower-greek\",\n    \"lower-hexadecimal\",\n    \"lower-latin\",\n    \"lower-norwegian\",\n    \"lower-roman\",\n    \"lowercase\",\n    \"ltr\",\n    \"malayalam\",\n    \"match\",\n    \"matrix\",\n    \"matrix3d\",\n    \"media-play-button\",\n    \"media-slider\",\n    \"media-sliderthumb\",\n    \"media-volume-slider\",\n    \"media-volume-sliderthumb\",\n    \"medium\",\n    \"menu\",\n    \"menulist\",\n    \"menulist-button\",\n    \"menutext\",\n    \"message-box\",\n    \"middle\",\n    \"min-intrinsic\",\n    \"mix\",\n    \"mongolian\",\n    \"monospace\",\n    \"move\",\n    \"multiple\",\n    \"myanmar\",\n    \"n-resize\",\n    \"narrower\",\n    \"ne-resize\",\n    \"nesw-resize\",\n    \"no-close-quote\",\n    \"no-drop\",\n    \"no-open-quote\",\n    \"no-repeat\",\n    \"none\",\n    \"normal\",\n    \"not-allowed\",\n    \"nowrap\",\n    \"ns-resize\",\n    \"numbers\",\n    \"numeric\",\n    \"nw-resize\",\n    \"nwse-resize\",\n    \"oblique\",\n    \"octal\",\n    \"open-quote\",\n    \"optimizeLegibility\",\n    \"optimizeSpeed\",\n    \"oriya\",\n    \"oromo\",\n    \"outset\",\n    \"outside\",\n    \"outside-shape\",\n    \"overlay\",\n    \"overline\",\n    \"padding\",\n    \"padding-box\",\n    \"painted\",\n    \"page\",\n    \"paused\",\n    \"persian\",\n    \"perspective\",\n    \"plus-darker\",\n    \"plus-lighter\",\n    \"pointer\",\n    \"polygon\",\n    \"portrait\",\n    \"pre\",\n    \"pre-line\",\n    \"pre-wrap\",\n    \"preserve-3d\",\n    \"progress\",\n    \"push-button\",\n    \"radial-gradient\",\n    \"radio\",\n    \"read-only\",\n    \"read-write\",\n    \"read-write-plaintext-only\",\n    \"rectangle\",\n    \"region\",\n    \"relative\",\n    \"repeat\",\n    \"repeating-linear-gradient\",\n    \"repeating-radial-gradient\",\n    \"repeating-conic-gradient\",\n    \"repeat-x\",\n    \"repeat-y\",\n    \"reset\",\n    \"reverse\",\n    \"rgb\",\n    \"rgba\",\n    \"ridge\",\n    \"right\",\n    \"rotate\",\n    \"rotate3d\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"round\",\n    \"row-resize\",\n    \"rtl\",\n    \"run-in\",\n    \"running\",\n    \"s-resize\",\n    \"sans-serif\",\n    \"scale\",\n    \"scale3d\",\n    \"scaleX\",\n    \"scaleY\",\n    \"scaleZ\",\n    \"scroll\",\n    \"scrollbar\",\n    \"scroll-position\",\n    \"se-resize\",\n    \"searchfield\",\n    \"searchfield-cancel-button\",\n    \"searchfield-decoration\",\n    \"searchfield-results-button\",\n    \"searchfield-results-decoration\",\n    \"semi-condensed\",\n    \"semi-expanded\",\n    \"separate\",\n    \"serif\",\n    \"show\",\n    \"sidama\",\n    \"simp-chinese-formal\",\n    \"simp-chinese-informal\",\n    \"single\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n    \"skip-white-space\",\n    \"slide\",\n    \"slider-horizontal\",\n    \"slider-vertical\",\n    \"sliderthumb-horizontal\",\n    \"sliderthumb-vertical\",\n    \"slow\",\n    \"small\",\n    \"small-caps\",\n    \"small-caption\",\n    \"smaller\",\n    \"solid\",\n    \"somali\",\n    \"source-atop\",\n    \"source-in\",\n    \"source-out\",\n    \"source-over\",\n    \"space\",\n    \"spell-out\",\n    \"square\",\n    \"square-button\",\n    \"standard\",\n    \"start\",\n    \"static\",\n    \"status-bar\",\n    \"stretch\",\n    \"stroke\",\n    \"sub\",\n    \"subpixel-antialiased\",\n    \"super\",\n    \"sw-resize\",\n    \"symbolic\",\n    \"symbols\",\n    \"table\",\n    \"table-caption\",\n    \"table-cell\",\n    \"table-column\",\n    \"table-column-group\",\n    \"table-footer-group\",\n    \"table-header-group\",\n    \"table-row\",\n    \"table-row-group\",\n    \"tamil\",\n    \"telugu\",\n    \"text\",\n    \"text-bottom\",\n    \"text-top\",\n    \"textarea\",\n    \"textfield\",\n    \"thai\",\n    \"thick\",\n    \"thin\",\n    \"threeddarkshadow\",\n    \"threedface\",\n    \"threedhighlight\",\n    \"threedlightshadow\",\n    \"threedshadow\",\n    \"tibetan\",\n    \"tigre\",\n    \"tigrinya-er\",\n    \"tigrinya-er-abegede\",\n    \"tigrinya-et\",\n    \"tigrinya-et-abegede\",\n    \"to\",\n    \"top\",\n    \"trad-chinese-formal\",\n    \"trad-chinese-informal\",\n    \"translate\",\n    \"translate3d\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"transparent\",\n    \"ultra-condensed\",\n    \"ultra-expanded\",\n    \"underline\",\n    \"up\",\n    \"upper-alpha\",\n    \"upper-armenian\",\n    \"upper-greek\",\n    \"upper-hexadecimal\",\n    \"upper-latin\",\n    \"upper-norwegian\",\n    \"upper-roman\",\n    \"uppercase\",\n    \"urdu\",\n    \"url\",\n    \"var\",\n    \"vertical\",\n    \"vertical-text\",\n    \"visible\",\n    \"visibleFill\",\n    \"visiblePainted\",\n    \"visibleStroke\",\n    \"visual\",\n    \"w-resize\",\n    \"wait\",\n    \"wave\",\n    \"wider\",\n    \"window\",\n    \"windowframe\",\n    \"windowtext\",\n    \"words\",\n    \"x-large\",\n    \"x-small\",\n    \"xor\",\n    \"xx-large\",\n    \"xx-small\",\n    \"bicubic\",\n    \"optimizespeed\",\n    \"grayscale\",\n    \"row\",\n    \"row-reverse\",\n    \"wrap\",\n    \"wrap-reverse\",\n    \"column-reverse\",\n    \"flex-start\",\n    \"flex-end\",\n    \"space-between\",\n    \"space-around\",\n    \"unset\"\n];\nvar $ac801a1925d6ffe9$var$wordOperatorKeywords_ = [\n    \"in\",\n    \"and\",\n    \"or\",\n    \"not\",\n    \"is not\",\n    \"is a\",\n    \"is\",\n    \"isnt\",\n    \"defined\",\n    \"if unless\"\n], $ac801a1925d6ffe9$var$blockKeywords_ = [\n    \"for\",\n    \"if\",\n    \"else\",\n    \"unless\",\n    \"from\",\n    \"to\"\n], $ac801a1925d6ffe9$var$commonAtoms_ = [\n    \"null\",\n    \"true\",\n    \"false\",\n    \"href\",\n    \"title\",\n    \"type\",\n    \"not-allowed\",\n    \"readonly\",\n    \"disabled\"\n], $ac801a1925d6ffe9$var$commonDef_ = [\n    \"@font-face\",\n    \"@keyframes\",\n    \"@media\",\n    \"@viewport\",\n    \"@page\",\n    \"@host\",\n    \"@supports\",\n    \"@block\",\n    \"@css\"\n];\nvar $ac801a1925d6ffe9$var$hintWords = $ac801a1925d6ffe9$var$tagKeywords_.concat($ac801a1925d6ffe9$var$documentTypes_, $ac801a1925d6ffe9$var$mediaTypes_, $ac801a1925d6ffe9$var$mediaFeatures_, $ac801a1925d6ffe9$var$propertyKeywords_, $ac801a1925d6ffe9$var$nonStandardPropertyKeywords_, $ac801a1925d6ffe9$var$colorKeywords_, $ac801a1925d6ffe9$var$valueKeywords_, $ac801a1925d6ffe9$var$fontProperties_, $ac801a1925d6ffe9$var$wordOperatorKeywords_, $ac801a1925d6ffe9$var$blockKeywords_, $ac801a1925d6ffe9$var$commonAtoms_, $ac801a1925d6ffe9$var$commonDef_);\nfunction $ac801a1925d6ffe9$var$wordRegexp(words) {\n    words = words.sort(function(a, b) {\n        return b > a;\n    });\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\nfunction $ac801a1925d6ffe9$var$keySet(array) {\n    var keys = {};\n    for(var i = 0; i < array.length; ++i)keys[array[i]] = true;\n    return keys;\n}\nfunction $ac801a1925d6ffe9$var$escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\nvar $ac801a1925d6ffe9$var$tagKeywords = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$tagKeywords_), $ac801a1925d6ffe9$var$tagVariablesRegexp = /^(a|b|i|s|col|em)$/i, $ac801a1925d6ffe9$var$propertyKeywords = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$propertyKeywords_), $ac801a1925d6ffe9$var$nonStandardPropertyKeywords = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$nonStandardPropertyKeywords_), $ac801a1925d6ffe9$var$valueKeywords = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$valueKeywords_), $ac801a1925d6ffe9$var$colorKeywords = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$colorKeywords_), $ac801a1925d6ffe9$var$documentTypes = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$documentTypes_), $ac801a1925d6ffe9$var$documentTypesRegexp = $ac801a1925d6ffe9$var$wordRegexp($ac801a1925d6ffe9$var$documentTypes_), $ac801a1925d6ffe9$var$mediaFeatures = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$mediaFeatures_), $ac801a1925d6ffe9$var$mediaTypes = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$mediaTypes_), $ac801a1925d6ffe9$var$fontProperties = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$fontProperties_), $ac801a1925d6ffe9$var$operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/, $ac801a1925d6ffe9$var$wordOperatorKeywordsRegexp = $ac801a1925d6ffe9$var$wordRegexp($ac801a1925d6ffe9$var$wordOperatorKeywords_), $ac801a1925d6ffe9$var$blockKeywords = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$blockKeywords_), $ac801a1925d6ffe9$var$vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i), $ac801a1925d6ffe9$var$commonAtoms = $ac801a1925d6ffe9$var$keySet($ac801a1925d6ffe9$var$commonAtoms_), $ac801a1925d6ffe9$var$firstWordMatch = \"\", $ac801a1925d6ffe9$var$states = {}, $ac801a1925d6ffe9$var$ch, $ac801a1925d6ffe9$var$style, $ac801a1925d6ffe9$var$type, $ac801a1925d6ffe9$var$override;\n/**\n * Tokenizers\n */ function $ac801a1925d6ffe9$var$tokenBase(stream, state) {\n    $ac801a1925d6ffe9$var$firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n    state.context.line.firstWord = $ac801a1925d6ffe9$var$firstWordMatch ? $ac801a1925d6ffe9$var$firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n    state.context.line.indent = stream.indentation();\n    $ac801a1925d6ffe9$var$ch = stream.peek();\n    // Line comment\n    if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return [\n            \"comment\",\n            \"comment\"\n        ];\n    }\n    // Block comment\n    if (stream.match(\"/*\")) {\n        state.tokenize = $ac801a1925d6ffe9$var$tokenCComment;\n        return $ac801a1925d6ffe9$var$tokenCComment(stream, state);\n    }\n    // String\n    if ($ac801a1925d6ffe9$var$ch == \"\\\"\" || $ac801a1925d6ffe9$var$ch == \"'\") {\n        stream.next();\n        state.tokenize = $ac801a1925d6ffe9$var$tokenString($ac801a1925d6ffe9$var$ch);\n        return state.tokenize(stream, state);\n    }\n    // Def\n    if ($ac801a1925d6ffe9$var$ch == \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w\\\\-]/);\n        return [\n            \"def\",\n            stream.current()\n        ];\n    }\n    // ID selector or Hex color\n    if ($ac801a1925d6ffe9$var$ch == \"#\") {\n        stream.next();\n        // Hex color\n        if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) return [\n            \"atom\",\n            \"atom\"\n        ];\n        // ID selector\n        if (stream.match(/^[a-z][\\w-]*/i)) return [\n            \"builtin\",\n            \"hash\"\n        ];\n    }\n    // Vendor prefixes\n    if (stream.match($ac801a1925d6ffe9$var$vendorPrefixesRegexp)) return [\n        \"meta\",\n        \"vendor-prefixes\"\n    ];\n    // Numbers\n    if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n        stream.eatWhile(/[a-z%]/i);\n        return [\n            \"number\",\n            \"unit\"\n        ];\n    }\n    // !important|optional\n    if ($ac801a1925d6ffe9$var$ch == \"!\") {\n        stream.next();\n        return [\n            stream.match(/^(important|optional)/i) ? \"keyword\" : \"operator\",\n            \"important\"\n        ];\n    }\n    // Class\n    if ($ac801a1925d6ffe9$var$ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) return [\n        \"qualifier\",\n        \"qualifier\"\n    ];\n    // url url-prefix domain regexp\n    if (stream.match($ac801a1925d6ffe9$var$documentTypesRegexp)) {\n        if (stream.peek() == \"(\") state.tokenize = $ac801a1925d6ffe9$var$tokenParenthesized;\n        return [\n            \"property\",\n            \"word\"\n        ];\n    }\n    // Mixins / Functions\n    if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\n            \"keyword\",\n            \"mixin\"\n        ];\n    }\n    // Block mixins\n    if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\n            \"keyword\",\n            \"block-mixin\"\n        ];\n    }\n    // Parent Reference BEM naming\n    if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) return [\n        \"qualifier\",\n        \"qualifier\"\n    ];\n    // / Root Reference & Parent Reference\n    if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n        stream.backUp(1);\n        return [\n            \"variableName.special\",\n            \"reference\"\n        ];\n    }\n    if (stream.match(/^&{1}\\s*$/)) return [\n        \"variableName.special\",\n        \"reference\"\n    ];\n    // Word operator\n    if (stream.match($ac801a1925d6ffe9$var$wordOperatorKeywordsRegexp)) return [\n        \"operator\",\n        \"operator\"\n    ];\n    // Word\n    if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n        // Variable\n        if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n            if (!$ac801a1925d6ffe9$var$wordIsTag(stream.current())) {\n                stream.match('.');\n                return [\n                    \"variable\",\n                    \"variable-name\"\n                ];\n            }\n        }\n        return [\n            \"variable\",\n            \"word\"\n        ];\n    }\n    // Operators\n    if (stream.match($ac801a1925d6ffe9$var$operatorsRegexp)) return [\n        \"operator\",\n        stream.current()\n    ];\n    // Delimiters\n    if (/[:;,{}\\[\\]\\(\\)]/.test($ac801a1925d6ffe9$var$ch)) {\n        stream.next();\n        return [\n            null,\n            $ac801a1925d6ffe9$var$ch\n        ];\n    }\n    // Non-detected items\n    stream.next();\n    return [\n        null,\n        null\n    ];\n}\n/**\n * Token comment\n */ function $ac801a1925d6ffe9$var$tokenCComment(stream, state) {\n    var maybeEnd = false, ch;\n    while((ch = stream.next()) != null){\n        if (maybeEnd && ch == \"/\") {\n            state.tokenize = null;\n            break;\n        }\n        maybeEnd = ch == \"*\";\n    }\n    return [\n        \"comment\",\n        \"comment\"\n    ];\n}\n/**\n * Token string\n */ function $ac801a1925d6ffe9$var$tokenString(quote) {\n    return function(stream, state) {\n        var escaped = false, ch;\n        while((ch = stream.next()) != null){\n            if (ch == quote && !escaped) {\n                if (quote == \")\") stream.backUp(1);\n                break;\n            }\n            escaped = !escaped && ch == \"\\\\\";\n        }\n        if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n        return [\n            \"string\",\n            \"string\"\n        ];\n    };\n}\n/**\n * Token parenthesized\n */ function $ac801a1925d6ffe9$var$tokenParenthesized(stream, state) {\n    stream.next(); // Must be \"(\"\n    if (!stream.match(/\\s*[\\\"\\')]/, false)) state.tokenize = $ac801a1925d6ffe9$var$tokenString(\")\");\n    else state.tokenize = null;\n    return [\n        null,\n        \"(\"\n    ];\n}\n/**\n * Context management\n */ function $ac801a1925d6ffe9$var$Context(type, indent, prev, line) {\n    this.type = type;\n    this.indent = indent;\n    this.prev = prev;\n    this.line = line || {\n        firstWord: \"\",\n        indent: 0\n    };\n}\nfunction $ac801a1925d6ffe9$var$pushContext(state, stream, type, indent) {\n    indent = indent >= 0 ? indent : stream.indentUnit;\n    state.context = new $ac801a1925d6ffe9$var$Context(type, stream.indentation() + indent, state.context);\n    return type;\n}\nfunction $ac801a1925d6ffe9$var$popContext(state, stream, currentIndent) {\n    var contextIndent = state.context.indent - stream.indentUnit;\n    currentIndent = currentIndent || false;\n    state.context = state.context.prev;\n    if (currentIndent) state.context.indent = contextIndent;\n    return state.context.type;\n}\nfunction $ac801a1925d6ffe9$var$pass(type, stream, state) {\n    return $ac801a1925d6ffe9$var$states[state.context.type](type, stream, state);\n}\nfunction $ac801a1925d6ffe9$var$popAndPass(type, stream, state, n) {\n    for(var i = n || 1; i > 0; i--)state.context = state.context.prev;\n    return $ac801a1925d6ffe9$var$pass(type, stream, state);\n}\n/**\n * Parser\n */ function $ac801a1925d6ffe9$var$wordIsTag(word) {\n    return word.toLowerCase() in $ac801a1925d6ffe9$var$tagKeywords;\n}\nfunction $ac801a1925d6ffe9$var$wordIsProperty(word) {\n    word = word.toLowerCase();\n    return word in $ac801a1925d6ffe9$var$propertyKeywords || word in $ac801a1925d6ffe9$var$fontProperties;\n}\nfunction $ac801a1925d6ffe9$var$wordIsBlock(word) {\n    return word.toLowerCase() in $ac801a1925d6ffe9$var$blockKeywords;\n}\nfunction $ac801a1925d6ffe9$var$wordIsVendorPrefix(word) {\n    return word.toLowerCase().match($ac801a1925d6ffe9$var$vendorPrefixesRegexp);\n}\nfunction $ac801a1925d6ffe9$var$wordAsValue(word) {\n    var wordLC = word.toLowerCase();\n    var override = \"variable\";\n    if ($ac801a1925d6ffe9$var$wordIsTag(word)) override = \"tag\";\n    else if ($ac801a1925d6ffe9$var$wordIsBlock(word)) override = \"block-keyword\";\n    else if ($ac801a1925d6ffe9$var$wordIsProperty(word)) override = \"property\";\n    else if (wordLC in $ac801a1925d6ffe9$var$valueKeywords || wordLC in $ac801a1925d6ffe9$var$commonAtoms) override = \"atom\";\n    else if (wordLC == \"return\" || wordLC in $ac801a1925d6ffe9$var$colorKeywords) override = \"keyword\";\n    else if (word.match(/^[A-Z]/)) override = \"string\";\n    return override;\n}\nfunction $ac801a1925d6ffe9$var$typeIsBlock(type, stream) {\n    return $ac801a1925d6ffe9$var$endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\") || type == \"block-mixin\";\n}\nfunction $ac801a1925d6ffe9$var$typeIsInterpolation(type, stream) {\n    return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n}\nfunction $ac801a1925d6ffe9$var$typeIsPseudo(type, stream) {\n    return type == \":\" && stream.match(/^[a-z-]+/, false);\n}\nfunction $ac801a1925d6ffe9$var$startOfLine(stream) {\n    return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + $ac801a1925d6ffe9$var$escapeRegExp(stream.current())));\n}\nfunction $ac801a1925d6ffe9$var$endOfLine(stream) {\n    return stream.eol() || stream.match(/^\\s*$/, false);\n}\nfunction $ac801a1925d6ffe9$var$firstWordOfLine(line) {\n    var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n    var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n    return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n}\n/**\n * Block\n */ $ac801a1925d6ffe9$var$states.block = function(type, stream, state) {\n    if (type == \"comment\" && $ac801a1925d6ffe9$var$startOfLine(stream) || type == \",\" && $ac801a1925d6ffe9$var$endOfLine(stream) || type == \"mixin\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n    if ($ac801a1925d6ffe9$var$typeIsInterpolation(type, stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"interpolation\");\n    if ($ac801a1925d6ffe9$var$endOfLine(stream) && type == \"]\") {\n        if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !$ac801a1925d6ffe9$var$wordIsTag($ac801a1925d6ffe9$var$firstWordOfLine(stream))) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n    }\n    if ($ac801a1925d6ffe9$var$typeIsBlock(type, stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    if (type == \"}\" && $ac801a1925d6ffe9$var$endOfLine(stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n    if (type == \"variable-name\") {\n        if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || $ac801a1925d6ffe9$var$wordIsBlock($ac801a1925d6ffe9$var$firstWordOfLine(stream))) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"variableName\");\n        else return $ac801a1925d6ffe9$var$pushContext(state, stream, \"variableName\", 0);\n    }\n    if (type == \"=\") {\n        if (!$ac801a1925d6ffe9$var$endOfLine(stream) && !$ac801a1925d6ffe9$var$wordIsBlock($ac801a1925d6ffe9$var$firstWordOfLine(stream))) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n        return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    }\n    if (type == \"*\") {\n        if ($ac801a1925d6ffe9$var$endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/, false)) {\n            $ac801a1925d6ffe9$var$override = \"tag\";\n            return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n        }\n    }\n    if ($ac801a1925d6ffe9$var$typeIsPseudo(type, stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"pseudo\");\n    if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) return $ac801a1925d6ffe9$var$pushContext(state, stream, $ac801a1925d6ffe9$var$endOfLine(stream) ? \"block\" : \"atBlock\");\n    if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"keyframes\");\n    if (/@extends?/.test(type)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"extend\", 0);\n    if (type && type.charAt(0) == \"@\") {\n        // Property Lookup\n        if (stream.indentation() > 0 && $ac801a1925d6ffe9$var$wordIsProperty(stream.current().slice(1))) {\n            $ac801a1925d6ffe9$var$override = \"variable\";\n            return \"block\";\n        }\n        if (/(@import|@require|@charset)/.test(type)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n        return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    }\n    if (type == \"reference\" && $ac801a1925d6ffe9$var$endOfLine(stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    if (type == \"(\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"parens\");\n    if (type == \"vendor-prefixes\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"vendorPrefixes\");\n    if (type == \"word\") {\n        var word = stream.current();\n        $ac801a1925d6ffe9$var$override = $ac801a1925d6ffe9$var$wordAsValue(word);\n        if ($ac801a1925d6ffe9$var$override == \"property\") {\n            if ($ac801a1925d6ffe9$var$startOfLine(stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n            else {\n                $ac801a1925d6ffe9$var$override = \"atom\";\n                return \"block\";\n            }\n        }\n        if ($ac801a1925d6ffe9$var$override == \"tag\") {\n            // tag is a css value\n            if (/embed|menu|pre|progress|sub|table/.test(word)) {\n                if ($ac801a1925d6ffe9$var$wordIsProperty($ac801a1925d6ffe9$var$firstWordOfLine(stream))) {\n                    $ac801a1925d6ffe9$var$override = \"atom\";\n                    return \"block\";\n                }\n            }\n            // tag is an attribute\n            if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word + \"\\\\s*\\\\]\"))) {\n                $ac801a1925d6ffe9$var$override = \"atom\";\n                return \"block\";\n            }\n            // tag is a variable\n            if ($ac801a1925d6ffe9$var$tagVariablesRegexp.test(word)) {\n                if ($ac801a1925d6ffe9$var$startOfLine(stream) && stream.string.match(/=/) || !$ac801a1925d6ffe9$var$startOfLine(stream) && !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) && !$ac801a1925d6ffe9$var$wordIsTag($ac801a1925d6ffe9$var$firstWordOfLine(stream))) {\n                    $ac801a1925d6ffe9$var$override = \"variable\";\n                    if ($ac801a1925d6ffe9$var$wordIsBlock($ac801a1925d6ffe9$var$firstWordOfLine(stream))) return \"block\";\n                    return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n                }\n            }\n            if ($ac801a1925d6ffe9$var$endOfLine(stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n        }\n        if ($ac801a1925d6ffe9$var$override == \"block-keyword\") {\n            $ac801a1925d6ffe9$var$override = \"keyword\";\n            // Postfix conditionals\n            if (stream.current(/(if|unless)/) && !$ac801a1925d6ffe9$var$startOfLine(stream)) return \"block\";\n            return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n        }\n        if (word == \"return\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n        // Placeholder selector\n        if ($ac801a1925d6ffe9$var$override == \"variable\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    }\n    return state.context.type;\n};\n/**\n * Parens\n */ $ac801a1925d6ffe9$var$states.parens = function(type, stream, state) {\n    if (type == \"(\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"parens\");\n    if (type == \")\") {\n        if (state.context.prev.type == \"parens\") return $ac801a1925d6ffe9$var$popContext(state, stream);\n        if (stream.string.match(/^[a-z][\\w-]*\\(/i) && $ac801a1925d6ffe9$var$endOfLine(stream) || $ac801a1925d6ffe9$var$wordIsBlock($ac801a1925d6ffe9$var$firstWordOfLine(stream)) || /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test($ac801a1925d6ffe9$var$firstWordOfLine(stream)) || !stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) && $ac801a1925d6ffe9$var$wordIsTag($ac801a1925d6ffe9$var$firstWordOfLine(stream))) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n        if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) || stream.string.match(/^\\s*(\\(|\\)|[0-9])/) || stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) || stream.string.match(/^\\s+[\\$-]?[a-z]/i)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n        if ($ac801a1925d6ffe9$var$endOfLine(stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n        else return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n    }\n    if (type && type.charAt(0) == \"@\" && $ac801a1925d6ffe9$var$wordIsProperty(stream.current().slice(1))) $ac801a1925d6ffe9$var$override = \"variable\";\n    if (type == \"word\") {\n        var word = stream.current();\n        $ac801a1925d6ffe9$var$override = $ac801a1925d6ffe9$var$wordAsValue(word);\n        if ($ac801a1925d6ffe9$var$override == \"tag\" && $ac801a1925d6ffe9$var$tagVariablesRegexp.test(word)) $ac801a1925d6ffe9$var$override = \"variable\";\n        if ($ac801a1925d6ffe9$var$override == \"property\" || word == \"to\") $ac801a1925d6ffe9$var$override = \"atom\";\n    }\n    if (type == \"variable-name\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"variableName\");\n    if ($ac801a1925d6ffe9$var$typeIsPseudo(type, stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"pseudo\");\n    return state.context.type;\n};\n/**\n * Vendor prefixes\n */ $ac801a1925d6ffe9$var$states.vendorPrefixes = function(type, stream, state) {\n    if (type == \"word\") {\n        $ac801a1925d6ffe9$var$override = \"property\";\n        return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n    }\n    return $ac801a1925d6ffe9$var$popContext(state, stream);\n};\n/**\n * Pseudo\n */ $ac801a1925d6ffe9$var$states.pseudo = function(type, stream, state) {\n    if (!$ac801a1925d6ffe9$var$wordIsProperty($ac801a1925d6ffe9$var$firstWordOfLine(stream.string))) {\n        stream.match(/^[a-z-]+/);\n        $ac801a1925d6ffe9$var$override = \"variableName.special\";\n        if ($ac801a1925d6ffe9$var$endOfLine(stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n        return $ac801a1925d6ffe9$var$popContext(state, stream);\n    }\n    return $ac801a1925d6ffe9$var$popAndPass(type, stream, state);\n};\n/**\n * atBlock\n */ $ac801a1925d6ffe9$var$states.atBlock = function(type, stream, state) {\n    if (type == \"(\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"atBlock_parens\");\n    if ($ac801a1925d6ffe9$var$typeIsBlock(type, stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    if ($ac801a1925d6ffe9$var$typeIsInterpolation(type, stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"interpolation\");\n    if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        if (/^(only|not|and|or)$/.test(word)) $ac801a1925d6ffe9$var$override = \"keyword\";\n        else if ($ac801a1925d6ffe9$var$documentTypes.hasOwnProperty(word)) $ac801a1925d6ffe9$var$override = \"tag\";\n        else if ($ac801a1925d6ffe9$var$mediaTypes.hasOwnProperty(word)) $ac801a1925d6ffe9$var$override = \"attribute\";\n        else if ($ac801a1925d6ffe9$var$mediaFeatures.hasOwnProperty(word)) $ac801a1925d6ffe9$var$override = \"property\";\n        else if ($ac801a1925d6ffe9$var$nonStandardPropertyKeywords.hasOwnProperty(word)) $ac801a1925d6ffe9$var$override = \"string.special\";\n        else $ac801a1925d6ffe9$var$override = $ac801a1925d6ffe9$var$wordAsValue(stream.current());\n        if ($ac801a1925d6ffe9$var$override == \"tag\" && $ac801a1925d6ffe9$var$endOfLine(stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    }\n    if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) $ac801a1925d6ffe9$var$override = \"keyword\";\n    return state.context.type;\n};\n$ac801a1925d6ffe9$var$states.atBlock_parens = function(type, stream, state) {\n    if (type == \"{\" || type == \"}\") return state.context.type;\n    if (type == \")\") {\n        if ($ac801a1925d6ffe9$var$endOfLine(stream)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n        else return $ac801a1925d6ffe9$var$pushContext(state, stream, \"atBlock\");\n    }\n    if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        $ac801a1925d6ffe9$var$override = $ac801a1925d6ffe9$var$wordAsValue(word);\n        if (/^(max|min)/.test(word)) $ac801a1925d6ffe9$var$override = \"property\";\n        if ($ac801a1925d6ffe9$var$override == \"tag\") $ac801a1925d6ffe9$var$tagVariablesRegexp.test(word) ? $ac801a1925d6ffe9$var$override = \"variable\" : $ac801a1925d6ffe9$var$override = \"atom\";\n        return state.context.type;\n    }\n    return $ac801a1925d6ffe9$var$states.atBlock(type, stream, state);\n};\n/**\n * Keyframes\n */ $ac801a1925d6ffe9$var$states.keyframes = function(type, stream, state) {\n    if (stream.indentation() == \"0\" && (type == \"}\" && $ac801a1925d6ffe9$var$startOfLine(stream) || type == \"]\" || type == \"hash\" || type == \"qualifier\" || $ac801a1925d6ffe9$var$wordIsTag(stream.current()))) return $ac801a1925d6ffe9$var$popAndPass(type, stream, state);\n    if (type == \"{\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"keyframes\");\n    if (type == \"}\") {\n        if ($ac801a1925d6ffe9$var$startOfLine(stream)) return $ac801a1925d6ffe9$var$popContext(state, stream, true);\n        else return $ac801a1925d6ffe9$var$pushContext(state, stream, \"keyframes\");\n    }\n    if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"keyframes\");\n    if (type == \"word\") {\n        $ac801a1925d6ffe9$var$override = $ac801a1925d6ffe9$var$wordAsValue(stream.current());\n        if ($ac801a1925d6ffe9$var$override == \"block-keyword\") {\n            $ac801a1925d6ffe9$var$override = \"keyword\";\n            return $ac801a1925d6ffe9$var$pushContext(state, stream, \"keyframes\");\n        }\n    }\n    if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) return $ac801a1925d6ffe9$var$pushContext(state, stream, $ac801a1925d6ffe9$var$endOfLine(stream) ? \"block\" : \"atBlock\");\n    if (type == \"mixin\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n    return state.context.type;\n};\n/**\n * Interpolation\n */ $ac801a1925d6ffe9$var$states.interpolation = function(type, stream, state) {\n    if (type == \"{\") $ac801a1925d6ffe9$var$popContext(state, stream) && $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    if (type == \"}\") {\n        if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) || stream.string.match(/^\\s*[a-z]/i) && $ac801a1925d6ffe9$var$wordIsTag($ac801a1925d6ffe9$var$firstWordOfLine(stream))) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n        if (!stream.string.match(/^(\\{|\\s*\\&)/) || stream.match(/\\s*[\\w-]/, false)) return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\", 0);\n        return $ac801a1925d6ffe9$var$pushContext(state, stream, \"block\");\n    }\n    if (type == \"variable-name\") return $ac801a1925d6ffe9$var$pushContext(state, stream, \"variableName\", 0);\n    if (type == \"word\") {\n        $ac801a1925d6ffe9$var$override = $ac801a1925d6ffe9$var$wordAsValue(stream.current());\n        if ($ac801a1925d6ffe9$var$override == \"tag\") $ac801a1925d6ffe9$var$override = \"atom\";\n    }\n    return state.context.type;\n};\n/**\n * Extend/s\n */ $ac801a1925d6ffe9$var$states.extend = function(type, stream, state) {\n    if (type == \"[\" || type == \"=\") return \"extend\";\n    if (type == \"]\") return $ac801a1925d6ffe9$var$popContext(state, stream);\n    if (type == \"word\") {\n        $ac801a1925d6ffe9$var$override = $ac801a1925d6ffe9$var$wordAsValue(stream.current());\n        return \"extend\";\n    }\n    return $ac801a1925d6ffe9$var$popContext(state, stream);\n};\n/**\n * Variable name\n */ $ac801a1925d6ffe9$var$states.variableName = function(type, stream, state) {\n    if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n        if (stream.current().match(/^\\.[\\w-]+/i)) $ac801a1925d6ffe9$var$override = \"variable\";\n        return \"variableName\";\n    }\n    return $ac801a1925d6ffe9$var$popAndPass(type, stream, state);\n};\nconst $ac801a1925d6ffe9$export$f387b57d18d2701f = {\n    name: \"stylus\",\n    startState: function() {\n        return {\n            tokenize: null,\n            state: \"block\",\n            context: new $ac801a1925d6ffe9$var$Context(\"block\", 0, null)\n        };\n    },\n    token: function(stream, state) {\n        if (!state.tokenize && stream.eatSpace()) return null;\n        $ac801a1925d6ffe9$var$style = (state.tokenize || $ac801a1925d6ffe9$var$tokenBase)(stream, state);\n        if ($ac801a1925d6ffe9$var$style && typeof $ac801a1925d6ffe9$var$style == \"object\") {\n            $ac801a1925d6ffe9$var$type = $ac801a1925d6ffe9$var$style[1];\n            $ac801a1925d6ffe9$var$style = $ac801a1925d6ffe9$var$style[0];\n        }\n        $ac801a1925d6ffe9$var$override = $ac801a1925d6ffe9$var$style;\n        state.state = $ac801a1925d6ffe9$var$states[state.state]($ac801a1925d6ffe9$var$type, stream, state);\n        return $ac801a1925d6ffe9$var$override;\n    },\n    indent: function(state, textAfter, iCx) {\n        var cx = state.context, ch = textAfter && textAfter.charAt(0), indent = cx.indent, lineFirstWord = $ac801a1925d6ffe9$var$firstWordOfLine(textAfter), lineIndent = cx.line.indent, prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\", prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n        if (cx.prev && (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") || ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") || ch == \"{\" && cx.type == \"at\")) indent = cx.indent - iCx.unit;\n        else if (!/(\\})/.test(ch)) {\n            if (/@|\\$|\\d/.test(ch) || /^\\{/.test(textAfter) || /^\\s*\\/(\\/|\\*)/.test(textAfter) || /^\\s*\\/\\*/.test(prevLineFirstWord) || /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) || /^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) || /^return/.test(textAfter) || $ac801a1925d6ffe9$var$wordIsBlock(lineFirstWord)) indent = lineIndent;\n            else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || $ac801a1925d6ffe9$var$wordIsTag(lineFirstWord)) {\n                if (/\\,\\s*$/.test(prevLineFirstWord)) indent = prevLineIndent;\n                else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || $ac801a1925d6ffe9$var$wordIsTag(prevLineFirstWord)) indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n                else indent = lineIndent;\n            } else if (!/,\\s*$/.test(textAfter) && ($ac801a1925d6ffe9$var$wordIsVendorPrefix(lineFirstWord) || $ac801a1925d6ffe9$var$wordIsProperty(lineFirstWord))) {\n                if ($ac801a1925d6ffe9$var$wordIsBlock(prevLineFirstWord)) indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n                else if (/^\\{/.test(prevLineFirstWord)) indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + iCx.unit;\n                else if ($ac801a1925d6ffe9$var$wordIsVendorPrefix(prevLineFirstWord) || $ac801a1925d6ffe9$var$wordIsProperty(prevLineFirstWord)) indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n                else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) || /=\\s*$/.test(prevLineFirstWord) || $ac801a1925d6ffe9$var$wordIsTag(prevLineFirstWord) || /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) indent = prevLineIndent + iCx.unit;\n                else indent = lineIndent;\n            }\n        }\n        return indent;\n    },\n    languageData: {\n        indentOnInput: /^\\s*\\}$/,\n        commentTokens: {\n            line: \"//\",\n            block: {\n                open: \"/*\",\n                close: \"*/\"\n            }\n        },\n        autocomplete: $ac801a1925d6ffe9$var$hintWords\n    }\n};\n\n});\n\n\n//# sourceMappingURL=stylus.cfa7788d.js.map\n","// developer.mozilla.org/en-US/docs/Web/HTML/Element\nvar tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\n\n// github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n// Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\nvar documentTypes_ = [\"domain\", \"regexp\", \"url-prefix\", \"url\"];\nvar mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\nvar mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\",\"dynamic-range\",\"video-dynamic-range\"];\nvar propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\nvar nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\nvar fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\nvar colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\nvar valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"conic-gradient\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"high\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-play-button\",\"media-slider\",\"media-sliderthumb\",\"media-volume-slider\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeating-conic-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"standard\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\n\nvar wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\n    blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\n    commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\n    commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n\nvar hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\n                                    propertyKeywords_,nonStandardPropertyKeywords_,\n                                    colorKeywords_,valueKeywords_,fontProperties_,\n                                    wordOperatorKeywords_,blockKeywords_,\n                                    commonAtoms_,commonDef_);\n\nfunction wordRegexp(words) {\n  words = words.sort(function(a,b){return b > a;});\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nfunction keySet(array) {\n  var keys = {};\n  for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n  return keys;\n}\n\nfunction escapeRegExp(text) {\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n}\n\nvar tagKeywords = keySet(tagKeywords_),\n    tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n    propertyKeywords = keySet(propertyKeywords_),\n    nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n    valueKeywords = keySet(valueKeywords_),\n    colorKeywords = keySet(colorKeywords_),\n    documentTypes = keySet(documentTypes_),\n    documentTypesRegexp = wordRegexp(documentTypes_),\n    mediaFeatures = keySet(mediaFeatures_),\n    mediaTypes = keySet(mediaTypes_),\n    fontProperties = keySet(fontProperties_),\n    operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n    wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n    blockKeywords = keySet(blockKeywords_),\n    vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n    commonAtoms = keySet(commonAtoms_),\n    firstWordMatch = \"\",\n    states = {},\n    ch,\n    style,\n    type,\n    override;\n\n/**\n * Tokenizers\n */\nfunction tokenBase(stream, state) {\n  firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n  state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n  state.context.line.indent = stream.indentation();\n  ch = stream.peek();\n\n  // Line comment\n  if (stream.match(\"//\")) {\n    stream.skipToEnd();\n    return [\"comment\", \"comment\"];\n  }\n  // Block comment\n  if (stream.match(\"/*\")) {\n    state.tokenize = tokenCComment;\n    return tokenCComment(stream, state);\n  }\n  // String\n  if (ch == \"\\\"\" || ch == \"'\") {\n    stream.next();\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  // Def\n  if (ch == \"@\") {\n    stream.next();\n    stream.eatWhile(/[\\w\\\\-]/);\n    return [\"def\", stream.current()];\n  }\n  // ID selector or Hex color\n  if (ch == \"#\") {\n    stream.next();\n    // Hex color\n    if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n      return [\"atom\", \"atom\"];\n    }\n    // ID selector\n    if (stream.match(/^[a-z][\\w-]*/i)) {\n      return [\"builtin\", \"hash\"];\n    }\n  }\n  // Vendor prefixes\n  if (stream.match(vendorPrefixesRegexp)) {\n    return [\"meta\", \"vendor-prefixes\"];\n  }\n  // Numbers\n  if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n    stream.eatWhile(/[a-z%]/i);\n    return [\"number\", \"unit\"];\n  }\n  // !important|optional\n  if (ch == \"!\") {\n    stream.next();\n    return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\n  }\n  // Class\n  if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n    return [\"qualifier\", \"qualifier\"];\n  }\n  // url url-prefix domain regexp\n  if (stream.match(documentTypesRegexp)) {\n    if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n    return [\"property\", \"word\"];\n  }\n  // Mixins / Functions\n  if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n    stream.backUp(1);\n    return [\"keyword\", \"mixin\"];\n  }\n  // Block mixins\n  if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n    stream.backUp(1);\n    return [\"keyword\", \"block-mixin\"];\n  }\n  // Parent Reference BEM naming\n  if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n    return [\"qualifier\", \"qualifier\"];\n  }\n  // / Root Reference & Parent Reference\n  if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n    stream.backUp(1);\n    return [\"variableName.special\", \"reference\"];\n  }\n  if (stream.match(/^&{1}\\s*$/)) {\n    return [\"variableName.special\", \"reference\"];\n  }\n  // Word operator\n  if (stream.match(wordOperatorKeywordsRegexp)) {\n    return [\"operator\", \"operator\"];\n  }\n  // Word\n  if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n    // Variable\n    if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n      if (!wordIsTag(stream.current())) {\n        stream.match('.');\n        return [\"variable\", \"variable-name\"];\n      }\n    }\n    return [\"variable\", \"word\"];\n  }\n  // Operators\n  if (stream.match(operatorsRegexp)) {\n    return [\"operator\", stream.current()];\n  }\n  // Delimiters\n  if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n    stream.next();\n    return [null, ch];\n  }\n  // Non-detected items\n  stream.next();\n  return [null, null];\n}\n\n/**\n * Token comment\n */\nfunction tokenCComment(stream, state) {\n  var maybeEnd = false, ch;\n  while ((ch = stream.next()) != null) {\n    if (maybeEnd && ch == \"/\") {\n      state.tokenize = null;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return [\"comment\", \"comment\"];\n}\n\n/**\n * Token string\n */\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped) {\n        if (quote == \")\") stream.backUp(1);\n        break;\n      }\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n    return [\"string\", \"string\"];\n  };\n}\n\n/**\n * Token parenthesized\n */\nfunction tokenParenthesized(stream, state) {\n  stream.next(); // Must be \"(\"\n  if (!stream.match(/\\s*[\\\"\\')]/, false))\n    state.tokenize = tokenString(\")\");\n  else\n    state.tokenize = null;\n  return [null, \"(\"];\n}\n\n/**\n * Context management\n */\nfunction Context(type, indent, prev, line) {\n  this.type = type;\n  this.indent = indent;\n  this.prev = prev;\n  this.line = line || {firstWord: \"\", indent: 0};\n}\n\nfunction pushContext(state, stream, type, indent) {\n  indent = indent >= 0 ? indent : stream.indentUnit;\n  state.context = new Context(type, stream.indentation() + indent, state.context);\n  return type;\n}\n\nfunction popContext(state, stream, currentIndent) {\n  var contextIndent = state.context.indent - stream.indentUnit;\n  currentIndent = currentIndent || false;\n  state.context = state.context.prev;\n  if (currentIndent) state.context.indent = contextIndent;\n  return state.context.type;\n}\n\nfunction pass(type, stream, state) {\n  return states[state.context.type](type, stream, state);\n}\n\nfunction popAndPass(type, stream, state, n) {\n  for (var i = n || 1; i > 0; i--)\n    state.context = state.context.prev;\n  return pass(type, stream, state);\n}\n\n\n/**\n * Parser\n */\nfunction wordIsTag(word) {\n  return word.toLowerCase() in tagKeywords;\n}\n\nfunction wordIsProperty(word) {\n  word = word.toLowerCase();\n  return word in propertyKeywords || word in fontProperties;\n}\n\nfunction wordIsBlock(word) {\n  return word.toLowerCase() in blockKeywords;\n}\n\nfunction wordIsVendorPrefix(word) {\n  return word.toLowerCase().match(vendorPrefixesRegexp);\n}\n\nfunction wordAsValue(word) {\n  var wordLC = word.toLowerCase();\n  var override = \"variable\";\n  if (wordIsTag(word)) override = \"tag\";\n  else if (wordIsBlock(word)) override = \"block-keyword\";\n  else if (wordIsProperty(word)) override = \"property\";\n  else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\n  else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n  // Font family\n  else if (word.match(/^[A-Z]/)) override = \"string\";\n  return override;\n}\n\nfunction typeIsBlock(type, stream) {\n  return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\n}\n\nfunction typeIsInterpolation(type, stream) {\n  return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n}\n\nfunction typeIsPseudo(type, stream) {\n  return type == \":\" && stream.match(/^[a-z-]+/, false);\n}\n\nfunction startOfLine(stream) {\n  return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n}\n\nfunction endOfLine(stream) {\n  return stream.eol() || stream.match(/^\\s*$/, false);\n}\n\nfunction firstWordOfLine(line) {\n  var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n  var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n  return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n}\n\n\n/**\n * Block\n */\nstates.block = function(type, stream, state) {\n  if ((type == \"comment\" && startOfLine(stream)) ||\n      (type == \",\" && endOfLine(stream)) ||\n      type == \"mixin\") {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  if (typeIsInterpolation(type, stream)) {\n    return pushContext(state, stream, \"interpolation\");\n  }\n  if (endOfLine(stream) && type == \"]\") {\n    if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n  }\n  if (typeIsBlock(type, stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"}\" && endOfLine(stream)) {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  if (type == \"variable-name\") {\n    if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"variableName\");\n    }\n    else {\n      return pushContext(state, stream, \"variableName\", 0);\n    }\n  }\n  if (type == \"=\") {\n    if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"*\") {\n    if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\n      override = \"tag\";\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  if (typeIsPseudo(type, stream)) {\n    return pushContext(state, stream, \"pseudo\");\n  }\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n  }\n  if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n    return pushContext(state, stream, \"keyframes\");\n  }\n  if (/@extends?/.test(type)) {\n    return pushContext(state, stream, \"extend\", 0);\n  }\n  if (type && type.charAt(0) == \"@\") {\n\n    // Property Lookup\n    if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n      override = \"variable\";\n      return \"block\";\n    }\n    if (/(@import|@require|@charset)/.test(type)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"reference\" && endOfLine(stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"(\") {\n    return pushContext(state, stream, \"parens\");\n  }\n\n  if (type == \"vendor-prefixes\") {\n    return pushContext(state, stream, \"vendorPrefixes\");\n  }\n  if (type == \"word\") {\n    var word = stream.current();\n    override = wordAsValue(word);\n\n    if (override == \"property\") {\n      if (startOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      } else {\n        override = \"atom\";\n        return \"block\";\n      }\n    }\n\n    if (override == \"tag\") {\n\n      // tag is a css value\n      if (/embed|menu|pre|progress|sub|table/.test(word)) {\n        if (wordIsProperty(firstWordOfLine(stream))) {\n          override = \"atom\";\n          return \"block\";\n        }\n      }\n\n      // tag is an attribute\n      if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\n        override = \"atom\";\n        return \"block\";\n      }\n\n      // tag is a variable\n      if (tagVariablesRegexp.test(word)) {\n        if ((startOfLine(stream) && stream.string.match(/=/)) ||\n            (!startOfLine(stream) &&\n             !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\n             !wordIsTag(firstWordOfLine(stream)))) {\n          override = \"variable\";\n          if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n\n      if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    }\n    if (override == \"block-keyword\") {\n      override = \"keyword\";\n\n      // Postfix conditionals\n      if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n        return \"block\";\n      }\n      return pushContext(state, stream, \"block\");\n    }\n    if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n    // Placeholder selector\n    if (override == \"variable\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  return state.context.type;\n};\n\n\n/**\n * Parens\n */\nstates.parens = function(type, stream, state) {\n  if (type == \"(\") return pushContext(state, stream, \"parens\");\n  if (type == \")\") {\n    if (state.context.prev.type == \"parens\") {\n      return popContext(state, stream);\n    }\n    if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\n        wordIsBlock(firstWordOfLine(stream)) ||\n        /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\n        (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\n         wordIsTag(firstWordOfLine(stream)))) {\n      return pushContext(state, stream, \"block\");\n    }\n    if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\n        stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\n        stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\n        stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    else return pushContext(state, stream, \"block\", 0);\n  }\n  if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n    override = \"variable\";\n  }\n  if (type == \"word\") {\n    var word = stream.current();\n    override = wordAsValue(word);\n    if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n      override = \"variable\";\n    }\n    if (override == \"property\" || word == \"to\") override = \"atom\";\n  }\n  if (type == \"variable-name\") {\n    return pushContext(state, stream, \"variableName\");\n  }\n  if (typeIsPseudo(type, stream)) {\n    return pushContext(state, stream, \"pseudo\");\n  }\n  return state.context.type;\n};\n\n\n/**\n * Vendor prefixes\n */\nstates.vendorPrefixes = function(type, stream, state) {\n  if (type == \"word\") {\n    override = \"property\";\n    return pushContext(state, stream, \"block\", 0);\n  }\n  return popContext(state, stream);\n};\n\n\n/**\n * Pseudo\n */\nstates.pseudo = function(type, stream, state) {\n  if (!wordIsProperty(firstWordOfLine(stream.string))) {\n    stream.match(/^[a-z-]+/);\n    override = \"variableName.special\";\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    return popContext(state, stream);\n  }\n  return popAndPass(type, stream, state);\n};\n\n\n/**\n * atBlock\n */\nstates.atBlock = function(type, stream, state) {\n  if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n  if (typeIsBlock(type, stream)) {\n    return pushContext(state, stream, \"block\");\n  }\n  if (typeIsInterpolation(type, stream)) {\n    return pushContext(state, stream, \"interpolation\");\n  }\n  if (type == \"word\") {\n    var word = stream.current().toLowerCase();\n    if (/^(only|not|and|or)$/.test(word))\n      override = \"keyword\";\n    else if (documentTypes.hasOwnProperty(word))\n      override = \"tag\";\n    else if (mediaTypes.hasOwnProperty(word))\n      override = \"attribute\";\n    else if (mediaFeatures.hasOwnProperty(word))\n      override = \"property\";\n    else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n      override = \"string.special\";\n    else override = wordAsValue(stream.current());\n    if (override == \"tag\" && endOfLine(stream)) {\n      return pushContext(state, stream, \"block\");\n    }\n  }\n  if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n    override = \"keyword\";\n  }\n  return state.context.type;\n};\n\nstates.atBlock_parens = function(type, stream, state) {\n  if (type == \"{\" || type == \"}\") return state.context.type;\n  if (type == \")\") {\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n    else return pushContext(state, stream, \"atBlock\");\n  }\n  if (type == \"word\") {\n    var word = stream.current().toLowerCase();\n    override = wordAsValue(word);\n    if (/^(max|min)/.test(word)) override = \"property\";\n    if (override == \"tag\") {\n      tagVariablesRegexp.test(word) ? override = \"variable\" : override = \"atom\";\n    }\n    return state.context.type;\n  }\n  return states.atBlock(type, stream, state);\n};\n\n\n/**\n * Keyframes\n */\nstates.keyframes = function(type, stream, state) {\n  if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\n                                      || type == \"qualifier\" || wordIsTag(stream.current()))) {\n    return popAndPass(type, stream, state);\n  }\n  if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n  if (type == \"}\") {\n    if (startOfLine(stream)) return popContext(state, stream, true);\n    else return pushContext(state, stream, \"keyframes\");\n  }\n  if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n    return pushContext(state, stream, \"keyframes\");\n  }\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    if (override == \"block-keyword\") {\n      override = \"keyword\";\n      return pushContext(state, stream, \"keyframes\");\n    }\n  }\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n  }\n  if (type == \"mixin\") {\n    return pushContext(state, stream, \"block\", 0);\n  }\n  return state.context.type;\n};\n\n\n/**\n * Interpolation\n */\nstates.interpolation = function(type, stream, state) {\n  if (type == \"{\") popContext(state, stream) && pushContext(state, stream, \"block\");\n  if (type == \"}\") {\n    if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\n        (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\n      return pushContext(state, stream, \"block\");\n    }\n    if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\n        stream.match(/\\s*[\\w-]/,false)) {\n      return pushContext(state, stream, \"block\", 0);\n    }\n    return pushContext(state, stream, \"block\");\n  }\n  if (type == \"variable-name\") {\n    return pushContext(state, stream, \"variableName\", 0);\n  }\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    if (override == \"tag\") override = \"atom\";\n  }\n  return state.context.type;\n};\n\n\n/**\n * Extend/s\n */\nstates.extend = function(type, stream, state) {\n  if (type == \"[\" || type == \"=\") return \"extend\";\n  if (type == \"]\") return popContext(state, stream);\n  if (type == \"word\") {\n    override = wordAsValue(stream.current());\n    return \"extend\";\n  }\n  return popContext(state, stream);\n};\n\n\n/**\n * Variable name\n */\nstates.variableName = function(type, stream, state) {\n  if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n    if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable\";\n    return \"variableName\";\n  }\n  return popAndPass(type, stream, state);\n};\n\nexport const stylus = {\n  name: \"stylus\",\n  startState: function() {\n    return {\n      tokenize: null,\n      state: \"block\",\n      context: new Context(\"block\", 0, null)\n    };\n  },\n  token: function(stream, state) {\n    if (!state.tokenize && stream.eatSpace()) return null;\n    style = (state.tokenize || tokenBase)(stream, state);\n    if (style && typeof style == \"object\") {\n      type = style[1];\n      style = style[0];\n    }\n    override = style;\n    state.state = states[state.state](type, stream, state);\n    return override;\n  },\n  indent: function(state, textAfter, iCx) {\n    var cx = state.context,\n        ch = textAfter && textAfter.charAt(0),\n        indent = cx.indent,\n        lineFirstWord = firstWordOfLine(textAfter),\n        lineIndent = cx.line.indent,\n        prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n        prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n    if (cx.prev &&\n        (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\n         ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n         ch == \"{\" && (cx.type == \"at\"))) {\n      indent = cx.indent - iCx.unit;\n    } else if (!(/(\\})/.test(ch))) {\n      if (/@|\\$|\\d/.test(ch) ||\n          /^\\{/.test(textAfter) ||\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\n          /^\\s*\\/\\*/.test(prevLineFirstWord) ||\n          /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\n          /^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\n          /^return/.test(textAfter) ||\n          wordIsBlock(lineFirstWord)) {\n        indent = lineIndent;\n      } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n        if (/\\,\\s*$/.test(prevLineFirstWord)) {\n          indent = prevLineIndent;\n        } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n        } else {\n          indent = lineIndent;\n        }\n      } else if (!/,\\s*$/.test(textAfter) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n        if (wordIsBlock(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\n        } else if (/^\\{/.test(prevLineFirstWord)) {\n          indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + iCx.unit;\n        } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n          indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n        } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\n                   /=\\s*$/.test(prevLineFirstWord) ||\n                   wordIsTag(prevLineFirstWord) ||\n                   /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n          indent = prevLineIndent + iCx.unit;\n        } else {\n          indent = lineIndent;\n        }\n      }\n    }\n    return indent;\n  },\n  languageData: {\n    indentOnInput: /^\\s*\\}$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\n    autocomplete: hintWords\n  }\n};\n"],"names":["parcelRequire","$parcel$global","globalThis","register","module","exports","Object","defineProperty","get","$ac801a1925d6ffe9$export$f387b57d18d2701f","set","s","enumerable","configurable","$ac801a1925d6ffe9$var$tagKeywords_","$ac801a1925d6ffe9$var$documentTypes_","$ac801a1925d6ffe9$var$mediaTypes_","$ac801a1925d6ffe9$var$mediaFeatures_","$ac801a1925d6ffe9$var$propertyKeywords_","$ac801a1925d6ffe9$var$nonStandardPropertyKeywords_","$ac801a1925d6ffe9$var$fontProperties_","$ac801a1925d6ffe9$var$colorKeywords_","$ac801a1925d6ffe9$var$valueKeywords_","$ac801a1925d6ffe9$var$wordOperatorKeywords_","$ac801a1925d6ffe9$var$blockKeywords_","$ac801a1925d6ffe9$var$commonAtoms_","$ac801a1925d6ffe9$var$hintWords","concat","$ac801a1925d6ffe9$var$wordRegexp","words","RegExp","sort","a","b","join","$ac801a1925d6ffe9$var$keySet","array","keys","i","length","$ac801a1925d6ffe9$var$ch","$ac801a1925d6ffe9$var$style","$ac801a1925d6ffe9$var$type","$ac801a1925d6ffe9$var$override","$ac801a1925d6ffe9$var$tagKeywords","$ac801a1925d6ffe9$var$tagVariablesRegexp","$ac801a1925d6ffe9$var$propertyKeywords","$ac801a1925d6ffe9$var$nonStandardPropertyKeywords","$ac801a1925d6ffe9$var$valueKeywords","$ac801a1925d6ffe9$var$colorKeywords","$ac801a1925d6ffe9$var$documentTypes","$ac801a1925d6ffe9$var$documentTypesRegexp","$ac801a1925d6ffe9$var$mediaFeatures","$ac801a1925d6ffe9$var$mediaTypes","$ac801a1925d6ffe9$var$fontProperties","$ac801a1925d6ffe9$var$operatorsRegexp","$ac801a1925d6ffe9$var$wordOperatorKeywordsRegexp","$ac801a1925d6ffe9$var$blockKeywords","$ac801a1925d6ffe9$var$vendorPrefixesRegexp","$ac801a1925d6ffe9$var$commonAtoms","$ac801a1925d6ffe9$var$firstWordMatch","$ac801a1925d6ffe9$var$states","$ac801a1925d6ffe9$var$tokenCComment","stream","state","ch","maybeEnd","next","tokenize","$ac801a1925d6ffe9$var$tokenString","quote","escaped","backUp","$ac801a1925d6ffe9$var$tokenParenthesized","match","$ac801a1925d6ffe9$var$Context","type","indent","prev","line","firstWord","$ac801a1925d6ffe9$var$pushContext","indentUnit","context","indentation","$ac801a1925d6ffe9$var$popContext","currentIndent","contextIndent","$ac801a1925d6ffe9$var$popAndPass","n","$ac801a1925d6ffe9$var$wordIsTag","word","toLowerCase","$ac801a1925d6ffe9$var$wordIsProperty","$ac801a1925d6ffe9$var$wordIsBlock","$ac801a1925d6ffe9$var$wordIsVendorPrefix","$ac801a1925d6ffe9$var$wordAsValue","wordLC","override","$ac801a1925d6ffe9$var$typeIsBlock","$ac801a1925d6ffe9$var$endOfLine","$ac801a1925d6ffe9$var$typeIsInterpolation","$ac801a1925d6ffe9$var$typeIsPseudo","$ac801a1925d6ffe9$var$startOfLine","sol","string","text","current","replace","eol","$ac801a1925d6ffe9$var$firstWordOfLine","re","result","block","test","charAt","slice","parens","vendorPrefixes","pseudo","atBlock","hasOwnProperty","atBlock_parens","keyframes","interpolation","extend","variableName","name","startState","token","eatSpace","peek","skipToEnd","eatWhile","textAfter","iCx","cx","lineFirstWord","lineIndent","prevLineFirstWord","prevLineIndent","unit","languageData","indentOnInput","commentTokens","open","close","autocomplete"],"version":3,"file":"stylus.cfa7788d.js.map"}